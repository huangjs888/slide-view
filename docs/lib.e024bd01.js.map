{"version":3,"file":"lib.e024bd01.js","mappings":"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","sources":["webpack:///../src/event.ts","webpack:///../src/util.ts","webpack:///../src/gesture.ts","webpack:///../src/agent.ts","webpack:///../src/index.ts","webpack:///../src/css.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-10 11:51:02\n * @Description: ******\n */\n\ntype IHandler<E, T> = (this: any, event: E, type?: T) => boolean | void;\n\nexport type IBaseEvent<O, E> = {\n  currentTarget: O; // 事件绑定元素\n  sourceEvent: E; // 源事件\n  timeStamp: number; // 事件发生时间戳\n};\n\nexport default class EventTarget<\n  O,\n  K,\n  T extends string,\n  E extends IBaseEvent<O, K>,\n> {\n  events: {\n    [key in T]?: {\n      pool: Array<IHandler<E, T>>;\n      single: number;\n    };\n  } = {};\n  constructor() {\n    this.events = {};\n  }\n  one(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const onceHandler =\n      typeof handler === 'function'\n        ? (...args: [E, T?]) => {\n            // 该事件只执行一次，执行完就删除事件\n            handler.apply(this, args);\n            this.off(type, onceHandler, single);\n          }\n        : handler;\n    this.on(type, onceHandler, single);\n  }\n  on(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const events = this.events[type] || {\n      pool: [],\n      single: -1,\n    };\n    if (typeof handler === 'function') {\n      if (single) {\n        // 该事件只能注册一次，每次注册都会替换上次注册的，类似于dom属性事件赋值注册比如element.onclick = ()=>{}\n        if (events.single === -1) {\n          // 记录该单独事件在所有事件的位置\n          events.single = events.pool.push(handler) - 1;\n        } else {\n          events.pool[events.single] = handler;\n        }\n      } else {\n        // 该事件可以注册多次，执行时，会遍历全部事件全部执行，类似于dom的addEventListener\n        // 注册进去之前会检查是否有相同的处理程序，如果有，则不再添加（独立程序不参与）\n        let unregistered = true;\n        for (let i = 0, len = events.pool.length; i < len; i++) {\n          if (events.pool[i] === handler && i !== events.single) {\n            unregistered = false;\n            break;\n          }\n        }\n        if (unregistered) {\n          events.pool.push(handler);\n        }\n      }\n    } else if (single && events.single !== -1) {\n      // 需要把独立事件删除，相当于解绑独立事件\n      events.pool.splice(events.single, 1);\n      events.single = -1;\n    }\n    this.events[type] = events;\n  }\n  off(type?: T, handler?: IHandler<E, T>, single?: boolean) {\n    if (typeof type === 'undefined') {\n      // 没有type则删除全部事件\n      this.events = {};\n    } else if (typeof handler === 'undefined') {\n      // 删除type下的所有事件\n      delete this.events[type];\n    } else if (single) {\n      const events = this.events[type];\n      if (events && events.single !== -1) {\n        // 删除独立程序事件\n        events.pool.splice(events.single, 1);\n        events.single = -1;\n      }\n    } else {\n      const events = this.events[type];\n      if (events) {\n        // 检查并删除事件池内事件\n        for (let i = events.pool.length - 1; i >= 0; i--) {\n          if (events.pool[i] === handler && i !== events.single) {\n            events.pool.splice(i, 1);\n            // 因为相同事件只会有一个，所以删除后不需要再检查了\n            break;\n          }\n        }\n      }\n    }\n  }\n  trigger(type: T, event: E) {\n    const events = this.events[type];\n    if (events) {\n      // 循环执行事件池里的事件\n      for (let i = 0, len = events.pool.length; i < len; i++) {\n        const handler = events.pool[i];\n        if (typeof handler === 'function') {\n          const immediatePropagation = handler.apply(event.currentTarget, [\n            event,\n            type,\n          ]);\n          // 返回值为false，则阻止后于该事件注册的同类型事件触发\n          if (immediatePropagation === false) {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-10 10:33:06\n * @Description: ******\n */\n\nexport function isTouchable(ele: HTMLElement) {\n  if (!ele) {\n    return false;\n  }\n  return navigator.maxTouchPoints || 'ontouchstart' in ele;\n}\n\nexport function getDistance([x0, y0]: number[], [x1, y1]: number[]) {\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n}\n\nexport function getVelocity(deltaTime: number, distance: number) {\n  return distance / deltaTime || 0;\n}\n\nexport function getAngle([x0, y0]: number[], [x1, y1]: number[]) {\n  return (Math.atan2(y1 - y0, x1 - x0) * 180) / Math.PI;\n}\n\nexport function getCenter([x0, y0]: number[], [x1, y1]: number[]) {\n  return [(x0 + x1) / 2, (y0 + y1) / 2];\n}\n\nexport function getDirection([x0, y0]: number[], [x1, y1]: number[]) {\n  const x = x0 - x1;\n  const y = y0 - y1;\n  if (x === y) {\n    return 'None';\n  }\n  return Math.abs(x) >= Math.abs(y)\n    ? x0 - x1 > 0\n      ? 'Left'\n      : 'Right'\n    : y0 - y1 > 0\n    ? 'Up'\n    : 'Down';\n}\n\nexport function rebounceSize(\n  value: number,\n  friction: number,\n  inverse: boolean = false,\n) {\n  if (friction <= 0) {\n    return 1;\n  }\n  const v = value || 1;\n  let f = Math.min(1, friction);\n  f = inverse ? 1 / f : f;\n  return (Math.pow(Math.abs(v), f) * v) / Math.abs(v);\n}\n\nexport function addClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.add(c));\n  }\n  return ele;\n}\nexport function removeClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.remove(c));\n  }\n  return ele;\n}\n\nexport function setStyle(\n  ele: HTMLElement,\n  css: { [key: string]: string | number | undefined },\n) {\n  if (ele) {\n    Object.keys(css).forEach((k: string) => {\n      if (typeof css[k] === 'undefined') {\n        return;\n      }\n      const key =\n        k.indexOf('-') !== -1 ? k : k.replace(/([A-Z])/g, '-$1').toLowerCase();\n      const val =\n        typeof css[k] === 'number' && key !== 'z-index' && key !== 'opacity'\n          ? `${css[k]}px`\n          : String(css[k]);\n      ele.style.setProperty(key, val);\n    });\n  }\n  return ele;\n}\n\nexport const getMarginSize = function getMarginSize(element: HTMLElement) {\n  let val = 0;\n  if (element) {\n    const computed = window.getComputedStyle(element, null);\n    if (computed) {\n      val = parseFloat(computed.marginLeft) + parseFloat(computed.marginRight);\n    } else {\n      val =\n        parseFloat(element.style.marginLeft) +\n        parseFloat(element.style.marginRight);\n    }\n    if (Number.isNaN(val)) {\n      val = 0;\n    }\n  }\n  return val;\n};\n\nexport function getIconType(url: string) {\n  if (url) {\n    if (\n      url.match(/\\.(jpe?g|png|gif|bmp|ico|svg|webp)$/) ||\n      url.match(/^(data:image\\/)/)\n    ) {\n      return 'img';\n    } else if (url.match(/^<svg(.+)?>.+<\\/svg>$/)) {\n      return 'span';\n    }\n  }\n  return 'i';\n}\n\nconst styleId = 'hjs-slide-view-style';\nexport function styleInject(cssText: string) {\n  let style = document.querySelector(`#${styleId}`);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.appendChild(document.createTextNode(cssText));\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(\n      style,\n    );\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-07 13:33:36\n * @Description: ******\n */\nimport EventTarget, { type IBaseEvent } from './event';\nimport {\n  isTouchable,\n  getDirection,\n  getDistance,\n  getAngle,\n  getCenter,\n  getVelocity,\n} from './util';\n\nconst fixOption = (\n  value: number | undefined,\n  defaultValue: number,\n  minVal: number,\n) => (typeof value !== 'number' || value < minVal ? defaultValue : value);\n\nfunction touchstarted(this: Gesture, event: TouchEvent) {\n  const touches = event.touches;\n  if (!touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  // 循环保存放在屏幕上的手指，这里只会保存最多两个，忽略超过三个的手指（只对单指和双指情形处理）\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p: [number, number] = [t.pageX, t.pageY];\n    const touch: [[number, number], [number, number], number] = [\n      p,\n      p,\n      t.identifier,\n    ];\n    if (!this._touch0) {\n      this._touch0 = touch;\n    } else if (!this._touch1 && touch[2] !== this._touch0[2]) {\n      this._touch1 = touch;\n    }\n  }\n  // 每次进入时先阻止所有单指事件\n  this._preventTap = true;\n  this._swipeTimeStamp = 0;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 双指start\n  if (this._touch1 && this._touch0) {\n    this.trigger('gestureStart', {\n      currentTarget: this.element,\n      point: [this._touch0[0], this._touch1[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n  // 单指start\n  else if (this._touch0) {\n    this._preventTap = false;\n    this._swipeTimeStamp = event.timeStamp;\n    // 设置一个长按定时器\n    this._longTapTimer = window.setTimeout(() => {\n      // 当前点击一旦长按超过longTapInterval则触发longTap，则松开后不会再触发所有单指事件\n      this._preventTap = true;\n      this._swipeTimeStamp = 0;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = true;\n      this._longTapTimer = null;\n      this.trigger('longTap', {\n        currentTarget: this.element,\n        point: this._touch0 ? [this._touch0[0]] : [],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        waitTime: this.longTapInterval,\n      });\n    }, this.longTapInterval);\n    if (\n      this._singleTapTimer &&\n      this._touchFirst &&\n      getDistance(this._touchFirst, this._touch0[0]) < this.doubleTapDistance\n    ) {\n      // 1，只要连续两次点击时间在doubleTapInterval之内，距离在doubleTapDistance内，无论第二次作何操作，都不会触发第一次的singleTap，但第一次的tap会触发\n      // 2，如果满足第一条时，第二次的点击有多根手指，或者长按触发longTap，则不会再触发doubleTap，第二次的tap，singleTap也不会触发\n      clearTimeout(this._singleTapTimer);\n      this._singleTapTimer = null;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = false;\n    } else {\n      this._touchFirst = this._touch0[0];\n      // 表示是第一次点击或该次点击距离上一次点击时间超过doubleTapInterval，距离超过doubleTapDistance\n      this._preventSingleTap = false;\n      this._preventDoubleTap = true;\n    }\n  }\n  // 无指没有start\n  else {\n    return;\n  }\n  this.trigger('touchStart', {\n    currentTarget: this.element,\n    point: this._touch1\n      ? [this._touch0[0], this._touch1[1]]\n      : [this._touch0[0]],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n\nfunction touchmoved(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  // 循环更新手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p: [number, number] = [t.pageX, t.pageY];\n    if (this._touch0 && this._touch0[2] === t.identifier) {\n      this._touch0[1] = p;\n    } else if (this._touch1 && this._touch1[2] === t.identifier) {\n      this._touch1[1] = p;\n    }\n  }\n  // 手指移动至少要有一个手指移动超过touchMoveDistance才会触发移动事件\n  if (\n    (this._touch0 &&\n      getDistance(this._touch0[0], this._touch0[1]) >=\n        this.touchMoveDistance) ||\n    (this._touch1 &&\n      getDistance(this._touch1[0], this._touch1[1]) >= this.touchMoveDistance)\n  ) {\n    // 一旦移动，则阻止所有单指点击相关事件（除了swipe）\n    this._preventTap = true;\n    this._preventSingleTap = true;\n    this._preventDoubleTap = true;\n    if (this._longTapTimer) {\n      clearTimeout(this._longTapTimer);\n      this._longTapTimer = null;\n    }\n    // 双指移动情况\n    if (this._touch1 && this._touch0) {\n      // 只有双指滑动时才会触发下面事件\n      const distance1 = getDistance(this._touch0[1], this._touch1[1]);\n      const distance0 = getDistance(this._touch0[0], this._touch1[0]);\n      if (distance1 !== 0 && distance0 !== 0) {\n        this.trigger('pinch', {\n          currentTarget: this.element,\n          point: [this._touch0[0], this._touch1[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          scale: distance1 / distance0, // 可以直接设置css3里transform的scale\n        });\n      }\n      const angle1 = getAngle(this._touch0[1], this._touch1[1]);\n      const angle0 = getAngle(this._touch0[0], this._touch1[0]);\n      this.trigger('rotate', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        angle: angle1 + angle0, // 加和减效果一样，可以直接设置css3里transform的rotate\n      });\n      const center1 = getCenter(this._touch0[1], this._touch1[1]);\n      const center0 = getCenter(this._touch0[0], this._touch1[0]);\n      this.trigger('multiPan', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        deltaX: center1[0] - center0[0],\n        deltaY: center1[1] - center0[1],\n      });\n      this.trigger('gestureMove', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    // 单指移动\n    else if (this._touch0) {\n      // 触发单指平移事件\n      const deltaX = this._touch0[1][0] - this._touch0[0][0];\n      const deltaY = this._touch0[1][1] - this._touch0[0][1];\n      this.trigger('pan', {\n        currentTarget: this.element,\n        point: [this._touch0[0]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        deltaX,\n        deltaY,\n      });\n    }\n    // 无指无移动\n    else {\n      return;\n    }\n    this.trigger('touchMove', {\n      currentTarget: this.element,\n      point: this._touch1\n        ? [this._touch0[0], this._touch1[1]]\n        : [this._touch0[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n}\n\nfunction touchended(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.stopImmediatePropagation();\n  // 临时保存本次\n  let touch: [[number, number], [number, number], number] | null = null;\n  // 循环删除已经拿开的手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    if (this._touch0 && this._touch0[2] === t.identifier) {\n      touch = this._touch0;\n      this._touch0 = null;\n    } else if (this._touch1 && this._touch1[2] === t.identifier) {\n      this._touch1 = null;\n    }\n  }\n  // 双指变单指\n  if (this._touch1 && !this._touch0) {\n    this._touch0 = this._touch1;\n    this._touch1 = null;\n  }\n  // 松开时清除longTapTimer（一旦松开就不存在长按，当然有可能已经发生过了）\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 仍然存在至少一根手指\n  if (this._touch0) {\n    // 只剩下一根在上面了\n    if (!this._touch1) {\n      // 双指抬起，只剩下一指，此时就认为该点是移动的起点（否则会把双指移动的起点作为起点，移动时会出现跳跃）\n      this._touch0[0] = this._touch0[1];\n      // 同时可以触发一次start事件\n      this.trigger('touchStart', {\n        currentTarget: this.element,\n        point: [this._touch0[0]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    this.trigger('gestureEnd', {\n      currentTarget: this.element,\n      point: [this._touch0[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n  // 全部拿开（双指同时抬起，最后一指抬起，仅仅一指抬起）\n  else {\n    if (!this._preventTap) {\n      this.trigger('tap', {\n        currentTarget: this.element,\n        point: !touch ? [] : [touch[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    if (this._swipeTimeStamp > 0 && touch) {\n      const velocity = getVelocity(\n        event.timeStamp - this._swipeTimeStamp,\n        getDistance(touch[0], touch[1]),\n      );\n      // 滑动距离超过swipeDistance并且滑动速率大于swipeVelocity，才触发swipe\n      if (\n        velocity >= this.swipeVelocity &&\n        (Math.abs(touch[1][0] - touch[0][0]) >= this.swipeDistance ||\n          Math.abs(touch[1][1] - touch[0][1]) >= this.swipeDistance)\n      ) {\n        const direction = getDirection(touch[0], touch[1]);\n        this.trigger('swipe', {\n          currentTarget: this.element,\n          point: [touch[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          direction,\n          velocity,\n        });\n      }\n    }\n    if (!this._preventSingleTap) {\n      // 等待doubleTapInterval，如果时间内没有点击第二次，则触发\n      this._singleTapTimer = window.setTimeout(() => {\n        this._singleTapTimer = null;\n        this.trigger('singleTap', {\n          currentTarget: this.element,\n          point: !touch ? [] : [touch[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          delayTime: this.doubleTapInterval,\n        });\n      }, this.doubleTapInterval);\n    }\n    if (!this._preventDoubleTap) {\n      this.trigger('doubleTap', {\n        currentTarget: this.element,\n        point: !touch ? [] : [touch[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        intervalTime: this.doubleTapInterval,\n      });\n    }\n  }\n  this.trigger('touchEnd', {\n    currentTarget: this.element,\n    point: [],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n\nfunction touchcanceled(this: Gesture, event: TouchEvent) {\n  this.trigger('touchCancel', {\n    currentTarget: this.element,\n    point: [],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n  touchended.apply(this, [event]);\n}\n\nfunction scrollcanceled(this: Gesture) {\n  if (this._singleTapTimer) {\n    clearTimeout(this._singleTapTimer);\n    this._singleTapTimer = null;\n  }\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  this._touchFirst = null;\n  this._touch0 = null;\n  this._touch1 = null;\n  this._preventTap = true;\n  this._swipeTimeStamp = 0;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n}\n\nclass Gesture extends EventTarget<\n  HTMLElement,\n  TouchEvent,\n  GestureEventType,\n  GestureEvent\n> {\n  element: HTMLElement;\n  longTapInterval: number = 750;\n  doubleTapInterval: number = 250;\n  doubleTapDistance: number = 10;\n  touchMoveDistance: number = 3;\n  swipeDistance: number = 30;\n  swipeVelocity: number = 0.3;\n  _singleTapTimer: number | null = null;\n  _longTapTimer: number | null = null;\n  _preventTap: boolean = true;\n  _swipeTimeStamp: number = 0;\n  _preventSingleTap: boolean = true;\n  _preventDoubleTap: boolean = true;\n  _touchFirst: [number, number] | null = null;\n  _touch0: [[number, number], [number, number], number] | null = null;\n  _touch1: [[number, number], [number, number], number] | null = null;\n  _destory: (() => void) | null = null;\n  constructor(element: HTMLElement | string, options?: GestureOptions) {\n    super();\n    let tempElement: HTMLElement | null;\n    if (typeof element === 'string') {\n      tempElement = document.querySelector(element);\n    } else {\n      tempElement = element;\n    }\n    if (!tempElement || !(tempElement instanceof HTMLElement)) {\n      throw new Error('Please pass in a valid element...');\n    }\n    this.element = tempElement;\n    const {\n      longTapInterval,\n      doubleTapInterval,\n      doubleTapDistance,\n      touchMoveDistance,\n      swipeDistance,\n      swipeVelocity,\n    } = options || {};\n    this.longTapInterval = fixOption(longTapInterval, 750, 500);\n    this.doubleTapInterval = fixOption(doubleTapInterval, 250, 200);\n    this.doubleTapDistance = fixOption(doubleTapDistance, 10, 1);\n    this.touchMoveDistance = fixOption(touchMoveDistance, 3, 0);\n    this.swipeDistance = fixOption(swipeDistance, 30, 0);\n    this.swipeVelocity = fixOption(swipeVelocity, 0.3, 0.01);\n    // 注册触摸事件\n    if (isTouchable(this.element)) {\n      const started = touchstarted.bind(this);\n      const moved = touchmoved.bind(this);\n      const ended = touchended.bind(this);\n      const canceled = touchcanceled.bind(this);\n      this.element.addEventListener('touchstart', started, false);\n      this.element.addEventListener('touchmove', moved, false);\n      this.element.addEventListener('touchend', ended, false);\n      this.element.addEventListener('touchcancel', canceled, false);\n      const scrolled = scrollcanceled.bind(this);\n      window.addEventListener('scroll', scrolled);\n      this._destory = () => {\n        this.element.removeEventListener('touchstart', started);\n        this.element.removeEventListener('touchmove', moved);\n        this.element.removeEventListener('touchend', ended);\n        this.element.removeEventListener('touchcancel', canceled);\n        window.removeEventListener('scroll', scrolled);\n      };\n    }\n  }\n  done() {\n    return !!this._destory;\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    scrollcanceled.apply(this);\n    // 解除手势事件\n    if (this._destory) {\n      this._destory();\n      this._destory = null;\n    }\n  }\n}\n\nexport type GestureEventType =\n  | 'pinch' // 双指放大缩小\n  | 'rotate' // 双指旋转\n  | 'multiPan' // 双指平移\n  | 'pan' // 单指平移\n  | 'swipe' // 单指快速滑动\n  | 'tap' // 单指轻点（快，双击时会触发）\n  | 'singleTap' // 单指点击（有延迟，双击时不触发）\n  | 'longTap' // 单指长按\n  | 'doubleTap' // 单指双击\n  | 'touchStart' // 触摸开始\n  | 'touchMove' // 触摸移动\n  | 'touchEnd' // 触摸抬起\n  | 'touchCancel' // 触摸取消\n  | 'gestureStart' // 双（多）指开始\n  | 'gestureMove' // 双（多）指移动\n  | 'gestureEnd'; // 双（多）指结束\n\nexport type GestureEvent = {\n  point: [number, number][]; // 当前手指点坐标[pageX,pageY]\n  scale?: number; // 缩放比例\n  angle?: number; // 旋转角度\n  deltaX?: number; // x方向移动最终距离\n  deltaY?: number; // y方向移动最终距离\n  direction?: string; // 滑动方向\n  velocity?: number; // 滑动速率\n  waitTime?: number; // 长按等待时间\n  delayTime?: number; // 点击延迟时间\n  intervalTime?: number; // 双击间隔时间\n} & IBaseEvent<HTMLElement, TouchEvent>;\n\nexport type GestureOptions = {\n  longTapInterval?: number; // 设置长按等待时间阈值，单位ms\n  doubleTapInterval?: number; // 设置双击时间间隔，单位ms\n  doubleTapDistance?: number; // 双击两次点击的位置距离触发阈值\n  touchMoveDistance?: number; // 移动阈值，超过这个值才算移动\n  swipeDistance?: number; // 滑动阈值，超过这个值才触发滑动\n  swipeVelocity?: number; // 滑动速率，超过这个值可触发滑动，设置小一点\n};\n\nexport default Gesture;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-22 17:17:34\n * @Description: ******\n */\nimport Gesture, { type GestureEvent } from './gesture';\n\nfunction started(\n  element: HTMLElement,\n  event: GestureEvent,\n  start: AgentHandler,\n) {\n  const e = event.sourceEvent as TouchEvent;\n  // 表示是已经有一个手指放上去了\n  if (element.getAttribute('data-touch-identifier')) {\n    return;\n  }\n  const touch = e.touches[0];\n  if (!touch) {\n    return;\n  }\n  // 设置主手指\n  element.setAttribute('data-touch-identifier', touch.identifier.toString());\n  start({\n    type: 'touch',\n    currentTarget: element,\n    point: [touch.pageX, touch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction moved(element: HTMLElement, event: GestureEvent, move: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示移动的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  move({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction ended(element: HTMLElement, event: GestureEvent, end: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示抬起的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  // 没有手指在上面了\n  element.setAttribute('data-touch-identifier', '');\n  end({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction touched(\n  element: HTMLElement,\n  event: GestureEvent,\n  touch: AgentHandler,\n) {\n  touch({\n    type: 'touch',\n    point: event.point[0],\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nfunction mousedowned(\n  element: HTMLElement,\n  event: MouseEvent,\n  { start, move, end }: AgentEventHandler,\n) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  document.addEventListener('mousemove', mousemoved);\n  document.addEventListener('mouseup', mouseupped);\n  if ('onselectstart' in document) {\n    document.addEventListener('dragstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n    document.addEventListener('selectstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n  }\n  const x0 = event.clientX;\n  const y0 = event.clientY;\n  start &&\n    start({\n      type: 'mouse',\n      point: [event.pageX, event.pageY],\n      currentTarget: element,\n      sourceEvent: event,\n    });\n\n  function dragstarted(e: Event) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function mousemoved(e: MouseEvent) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    element.setAttribute('data-move', 'true');\n    const dx = e.clientX - x0;\n    const dy = e.clientY - y0;\n    if (dx * dx + dy * dy >= 3 * 3) {\n      move &&\n        move({\n          type: 'mouse',\n          point: [e.pageX, e.pageY],\n          currentTarget: element,\n          sourceEvent: e,\n        });\n    }\n  }\n\n  function mouseupped(e: MouseEvent) {\n    e.stopImmediatePropagation();\n    document.removeEventListener('mousemove', mousemoved);\n    document.removeEventListener('mouseup', mouseupped);\n    if ('onselectstart' in document) {\n      document.removeEventListener('dragstart', dragstarted);\n      document.removeEventListener('selectstart', dragstarted);\n    }\n    end &&\n      end({\n        type: 'mouse',\n        point: [e.pageX, e.pageY],\n        currentTarget: element,\n        sourceEvent: e,\n      });\n  }\n}\n\nfunction moused(element: HTMLElement, event: MouseEvent, mouse: AgentHandler) {\n  event.preventDefault();\n  const moving = element.getAttribute('data-move');\n  if (moving) {\n    element.removeAttribute('data-move');\n    return;\n  }\n  mouse({\n    type: 'mouse',\n    point: [event.pageX, event.pageY],\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nexport type AgentEvent = {\n  type: 'mouse' | 'touch';\n  point: number[];\n  currentTarget: HTMLElement;\n  sourceEvent: GestureEvent | MouseEvent;\n};\n\ntype AgentHandler = (e: AgentEvent) => void;\n\ntype AgentEventHandler = {\n  start?: AgentHandler | null;\n  move?: AgentHandler | null;\n  end?: AgentHandler | null;\n  press?: AgentHandler | null;\n  longPress?: AgentHandler | null;\n  doublePress?: AgentHandler | null;\n};\n\nexport type IAgent = {\n  element: HTMLElement;\n  destory: () => void;\n};\n\nexport default function agent(ele: HTMLElement, handler: AgentEventHandler) {\n  if (!ele || !(ele instanceof HTMLElement)) {\n    throw new Error('Binding events require HTMLElement...');\n  }\n  let destory = () => {};\n  const { start, move, end, press, longPress, doublePress } = handler;\n  const gesture = new Gesture(ele);\n  if (gesture.done()) {\n    if (start) {\n      gesture.on('touchStart', (e: GestureEvent) => started(ele, e, start));\n    }\n    if (move) {\n      gesture.on('touchMove', (e: GestureEvent) => moved(ele, e, move));\n    }\n    if (end) {\n      gesture.on('touchEnd', (e: GestureEvent) => ended(ele, e, end));\n    }\n    if (press) {\n      gesture.on('tap', (e: GestureEvent) => touched(ele, e, press));\n    }\n    if (longPress) {\n      gesture.on('longTap', (e: GestureEvent) => touched(ele, e, longPress));\n    }\n    if (doublePress) {\n      gesture.on('doubleTap', (e: GestureEvent) =>\n        touched(ele, e, doublePress),\n      );\n    }\n    destory = () => {\n      gesture.destory();\n    };\n  } else {\n    let mousedown: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end) {\n      mousedown = (e: MouseEvent) => mousedowned(ele, e, { start, move, end });\n      ele.addEventListener('mousedown', mousedown);\n    }\n    let click: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end || press) {\n      click = (e: MouseEvent) => moused(ele, e, press || (() => {}));\n      ele.addEventListener('click', click);\n    }\n    let rightclick: ((e: MouseEvent) => void) | null = null;\n    if (longPress) {\n      rightclick = (e: MouseEvent) => moused(ele, e, longPress);\n      ele.addEventListener('contextmenu', rightclick);\n    }\n    let dblclick: ((e: MouseEvent) => void) | null = null;\n    if (doublePress) {\n      dblclick = (e: MouseEvent) => moused(ele, e, doublePress);\n      ele.addEventListener('dblclick', dblclick);\n    }\n    destory = () => {\n      mousedown && ele.removeEventListener('mousedown', mousedown);\n      click && ele.removeEventListener('click', click);\n      dblclick && ele.removeEventListener('dblclick', dblclick);\n      rightclick && ele.removeEventListener('contextmenu', rightclick);\n    };\n  }\n  return {\n    element: ele,\n    destory,\n  };\n}\n\n/*\n  1、如果在一个事件循环内多次设置transition，只会执行性最后一次，前面的会忽略。如果在多次串联（不同的事件循环内）设置transition时，如果属性和值都无任何变化，则后续的设置会忽略，如果不一样，除了第一次，后续的transition会保留上次动画最后一帧（下次动画也从该帧开始）的结果与新设置的动画值比较，相同则不执行动画，不同则执行动画（且从），而不是每次动画都与初始节点比较，初始节点执行。\n\n  2、delay这个参数注意：正值，等待delay秒之后，从初始开始执行动画，到结束，花费duration时间。负值，无等待立马执行，从中间某节点开始执行动画，到结束位置，花费duration去掉delay负数的时间。其中中间某节点就是如果按照正常执行时用掉delay时间所应该到达的节点处。\n\n  3、如果在一个固定时间内需要不停的改变transition属性值，直到时间用完变成无transition，此时可以在每次动画时算出与第一次动画开始时的时间差，然后用这个固定时间减去时间差，设置在当前动画的duration上，直到为0时去掉transition即可（这样做动画会连贯丝滑）。\n\n  4、一些属性可以设置百分比或者不设置值（'','none','auto'）等，而不是具体的数值的时候，此时设置transition，并不会发生动画（比如宽度从auto到100px是瞬间到达），可以在设置transition之前先设一个具体值，比如0或1，但是，这里注意，需要把设置transition的语句放在下一个事件循环（比如setTimeout）内，但最好的是放在requestAnimationFrame，或者在语句之前调用一次布局信息（比如获取宽度值），其实就是强迫浏览器重绘：浏览器通常还会在两种情况下会产生样式变更事件，一是满足屏幕刷新频率（requestAnimationFrame），二是当 JS 脚本需要获取最新的样式布局信息时。这种情况也适用于对隐藏的元素进行动画，动画后再隐藏，可以监听transitionend，在事件内隐藏。\n  https://blog.csdn.net/weixin_45189747/article/details/97790805\n  http://aihongxin.com/6652.html\n\n  5、 实现串联动画：使用animation，定义好需要的动画，想怎么玩怎么玩，缺点是无法动态设置值，如果需要动态设置值，只能用js动态添加、修改css3的@keyframes。使用transition，监听transitionend，在事件内再执行新动画，缺点是动画复杂，事件串联复杂，并且要做好判断，绑定、解绑，防止事件重复执行，或者无法串联执行，另外cancel后不会再执行。使用transitionend注意以下几点：\n  https://zhuanlan.zhihu.com/p/481680437\n\n  1、如果监听元素有多个属性都有transition，transitionend会在多个属性完成后多次触发。\n  解决方法：通过注册时提供实际监控的属性值与事件触发时e.propertyName比较来控制执行哪个。\n\n  2、如果监听元素的children也有transition，transitionend也会在children的transition完成后处触发。\n  解决方法：可以通过判断e.target === element或e.currentTarget来判断是不是当前监听元素。\n\n  3、快速连续触发设置transition事件，可以在动画未执行完触发的transitioncancel事件内解绑上一次的transitionend，保证只有当前这次的transitionend可运行，同时当前transitionend执行后也解绑当前的保证只会执行一次。\n  但是存在一种概率较低的情况：过渡动画刚执行完毕（即不会触发transitioncancel），本次transitionend还没来得及触发执行（因为transitionend触发和最后一帧动画结束并不是同一事件循环），此时设置transition的方法抢先执行进来设置过渡动画，这个时候上一次的transitionend事件是无法被清掉的。\n  解决方法：在每次注册transitionend时把之前已绑定transitionend事件全部清掉，同时当前transitionend执行后解绑。可以通过元素属性事件注册，而不使用addEventListener，即element.ontransitionend = ()=>{}，因为这种注册方式，永远都是替换掉上一次的事件，只有当前这一个。\n*/\nexport function onOnceTransitionEnd(\n  ele: HTMLElement,\n  transitionEnd: (e: TransitionEvent) => void,\n  propertyName: string = 'transform',\n) {\n  if (ele) {\n    ele.ontransitionend = (e: TransitionEvent) => {\n      // 阻止冒泡及后续事件触发\n      e.stopImmediatePropagation();\n      // 只有触发事件的目标元素与绑定的目标元素一致，同时触发事件的属性与需要的属性相同，才会执行事件并解绑\n      if (e.target === ele && e.propertyName === propertyName) {\n        ele.ontransitionend = null;\n        transitionEnd(e);\n      }\n    };\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-11 11:24:57\n * @Description: ******\n */\n\nimport EventTarget, { type IBaseEvent } from './event';\nimport agent, {\n  onOnceTransitionEnd,\n  type AgentEvent,\n  type IAgent,\n} from './agent';\nimport {\n  getDistance,\n  rebounceSize,\n  getIconType,\n  addClass,\n  removeClass,\n  setStyle,\n  styleInject,\n} from './util';\nimport css from './css';\n\nconst generateEl = function generateEl(\n  container: HTMLElement | string,\n  className?: string,\n) {\n  let tempContainer: HTMLElement | null;\n  try {\n    if (typeof container === 'string') {\n      tempContainer = document.querySelector(container);\n    } else {\n      tempContainer = container;\n    }\n  } catch (e) {\n    tempContainer = null;\n  }\n  if (!tempContainer || !(tempContainer instanceof HTMLElement)) {\n    throw new Error('Please pass in a valid container element...');\n  }\n  styleInject(css);\n  const viewElement = addClass(\n    document.createElement('div'),\n    `hjs-slideview ${className || ''}`,\n  );\n  const leftElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__left',\n  );\n  viewElement.appendChild(leftElement);\n  const rightElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__right',\n  );\n  viewElement.appendChild(rightElement);\n  const contentElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__content',\n  );\n  viewElement.appendChild(contentElement);\n  tempContainer.innerHTML = '';\n  tempContainer.appendChild(viewElement);\n  return [viewElement, contentElement, leftElement, rightElement];\n};\n\nconst confirmStyle = function (\n  item: MergeActionItem,\n  isConfirm: boolean = false,\n) {\n  const {\n    wrapper,\n    element,\n    confirm = {}, // isConfirm为true,confirm必然存在\n    ...rest\n  } = item;\n  let { text, icon, color, background, className } = rest;\n  if (isConfirm) {\n    // 如果icon不存在，则不存在该确认，如果icon存在，则取确认icon，若确认icon不存在，则仍然取icon\n    icon = icon && (confirm.icon || icon);\n    text = text && (confirm.text || text);\n    color = color && (confirm.color || color);\n    background = background && (confirm.background || background);\n    className = className && (confirm.className || className);\n  }\n  setStyle(wrapper, {\n    background: background || '',\n    color: color || '',\n  });\n  addClass(\n    removeClass(\n      element,\n      isConfirm\n        ? rest.className || ''\n        : confirm.className || rest.className || '',\n    ),\n    className || '',\n  );\n  if (icon) {\n    const iconEl = element.firstChild as HTMLElement;\n    const type = getIconType(icon);\n    if (type === 'img') {\n      (iconEl as HTMLImageElement).src = icon;\n    } else if (type === 'i') {\n      iconEl.className = icon;\n    } else {\n      iconEl.innerHTML = icon;\n    }\n  }\n  if (text) {\n    const textEl = element.lastChild as HTMLElement;\n    textEl.innerText = text;\n  }\n};\n\nconst cTransform = function cTransform(\n  this: SlideView,\n  confirm: Confirm,\n  translate: number = 0,\n) {\n  const { contentEl, leftActions, rightActions, duration, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const { index, direction } = confirm;\n  // 这里注意：在调用hideButton隐藏按钮之后再执行该恢复方法，_translate等于0了，所以无需再判断\n  const factor =\n    this._translate === 0 ? 0 : this._translate / Math.abs(this._translate);\n  const aTransform = ({ style, items }: MergeAction) => {\n    let delta = 0;\n    if (style === 'drawer') {\n      delta = -this._translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    for (let i = items.length - 1; i >= 0; i--) {\n      const { wrapper, width, gap } = items[i];\n      if (items.length === 1) {\n        // 如果是仅有一个按钮，确认的时候设置2倍变化\n        setStyle(contentEl, {\n          transform: `translate3d(${\n            translate !== 0 ? translate : this._translate\n          }px, 0, 0)`,\n          transition,\n        });\n      }\n      if (i === index) {\n        let transformx = 0;\n        if (translate !== 0) {\n          transformx = translate;\n        } else {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      } else if (i > index) {\n        let transformx = 0;\n        if (translate === 0) {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        // 大于index的一定都是压在上面的，压在上面的需要收起，而小于index压在下面的不需要变化\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      }\n      transformTotal += width + gap[0] + gap[1];\n    }\n  };\n  // 放入下一帧执行\n  window.requestAnimationFrame(() => {\n    if (direction === 'left' && leftActions && !leftActions.disable) {\n      aTransform(leftActions);\n    }\n    if (direction === 'right' && rightActions && !rightActions.disable) {\n      aTransform(rightActions);\n    }\n  });\n};\n\nconst transform = function transform(\n  this: SlideView,\n  translate: number,\n  duration: number = this.duration,\n) {\n  const { leftEl, rightEl, contentEl, leftActions, rightActions, timing } =\n    this;\n  if (\n    !leftEl ||\n    !rightEl ||\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  let factor = 0;\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const wTransition =\n    duration <= 0\n      ? ''\n      : `width ${duration}s ${timing} 0s, transform ${duration}s ${timing} 0s`;\n  const aTransform = ({\n    style,\n    items,\n    element,\n    width: tWidth,\n    gap: tGap,\n  }: MergeAction) => {\n    let styleObj = {};\n    let xMove = translate;\n    let delta = 0;\n    if (style === 'drawer') {\n      setStyle(element, {\n        width: Math.max(Math.abs(translate), tWidth),\n        transform: `translate3d(${translate}px, 0, 0)`,\n        transition: wTransition,\n      });\n      xMove = factor * Math.max(tWidth, Math.abs(translate));\n      delta = -translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    const len = items.length - 1;\n    for (let i = len; i >= 0; i--) {\n      const { wrapper, width, gap, fixedGap } = items[i];\n      // 当前按钮需要滑出的占比距离\n      const transformw = (width / (tWidth - tGap)) * (xMove - factor * tGap);\n      const transformb = transformw + factor * gap[1];\n      // 当前按钮滑出距离应该是占比距离+前面已有按钮的占比距离\n      const transformx = transformb + transformTotal;\n      if (fixedGap && wrapper.style.width !== '100%') {\n        // 只有width不为100%时才设置具体宽度，因为overshoot的时候需要设置100%\n        styleObj = {\n          width: Math.max(Math.abs(transformw), width),\n          transition: wTransition,\n        };\n      }\n      // 左边或右边的最后一个按钮\n      setStyle(wrapper, {\n        transform: `translate3d(${\n          (i === len && this._overshooting ? translate : transformx) + delta\n        }px, 0, 0)`,\n        transition,\n        ...styleObj,\n      });\n      // 累计已滑出按钮的占比距离\n      transformTotal += transformb + factor * gap[0];\n    }\n  };\n  // 放入下一帧执行（move的时候使用这个节能而且不抖动）\n  window.requestAnimationFrame(() => {\n    setStyle(contentEl, {\n      transform: `translate3d(${translate}px, 0, 0)`,\n      transition,\n    });\n    // 这里是左右都进行变换，还是说根据translate的正负来判断只变换某一边的呢（因为另一边处于隐藏状态无需变换耗能）？\n    // 答案是都要进行变换，因为存在一种情况，即滑动太快，left的translate还未走到0（没有完全收起），下一把就right了。\n    if (leftActions && !leftActions.disable) {\n      factor = 1;\n      aTransform(leftActions);\n    }\n    if (rightActions && !rightActions.disable) {\n      factor = -1;\n      aTransform(rightActions);\n    }\n  });\n};\n\nconst confirmCancel = function (this: SlideView) {\n  // 如果当前处于按钮确认状态，隐藏之前需要先取消\n  if (this._confirming) {\n    // 因为hide的时候会进行变换，所以不需要再cTransform\n    const { index, direction } = this._confirming;\n    const actions =\n      direction === 'left'\n        ? this.leftActions\n        : direction === 'right'\n        ? this.rightActions\n        : null;\n    if (actions && !actions.disable) {\n      const item = actions.items[index];\n      setStyle(item.element, {\n        width: '',\n      });\n      confirmStyle(item);\n    }\n    this._confirming = null;\n  }\n};\n\nconst overshootChange = function (\n  this: SlideView,\n  actions: MergeAction | null,\n) {\n  if (actions && !actions.disable) {\n    const item = actions.items[actions.items.length - 1];\n    setStyle(item.wrapper, {\n      width: this._overshooting ? '100%' : '',\n    });\n  }\n};\n\nconst start = function start(this: SlideView, e: AgentEvent) {\n  const { element, leftActions, rightActions, friction } = this;\n  if (\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  // 每次start重新计算容器宽度和offsetLeft(防止屏幕变化)\n  const { width, left } = element.getBoundingClientRect();\n  this._width = width;\n  this._offset = left;\n  const { point } = e;\n  this._isMoving = true;\n  this._timeStamp = 0;\n  this._startAngle = 0;\n  // 初始偏移量\n  this._startOffset = this._translate;\n  // 初始点\n  this._startPoint = point;\n  // 计算初始taranslate\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  let startTranslate = 0;\n  if (actions && !actions.disable) {\n    const { overshoot, overshootFreeSize, width: tWidth } = actions;\n    // 弹性尺寸临界点\n    const criticalTranslate =\n      ((overshoot\n        ? Math.min(width, Math.max(width - overshootFreeSize, tWidth))\n        : tWidth) *\n        this._translate) /\n      Math.abs(this._translate);\n    if (Math.abs(this._translate) <= Math.abs(criticalTranslate)) {\n      startTranslate = this._translate;\n    } else {\n      // 恢复_translate的弹性尺寸部分\n      startTranslate =\n        rebounceSize(this._translate - criticalTranslate, friction, true) +\n        criticalTranslate;\n    }\n  }\n  this._startTranslate = startTranslate;\n};\n\nconst move = function move(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions, friction } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { point: currentPoint, sourceEvent } = e;\n  const currentX = currentPoint[0] - this._startPoint[0];\n  const currentY = currentPoint[1] - this._startPoint[1];\n  if (this._startAngle === 0) {\n    // 只在第一次移动事件的时候进行计算\n    // 根据xy的长短来判断移动角度与45度的关系\n    this._startAngle = Math.abs(currentX) - Math.abs(currentY) <= 0 ? -1 : 1;\n  }\n  // 只有角度小于45度(_startAngle为1)，才会开始移动\n  // 只会在第一次触发的时候判断，后续如果移动过程中角度变化，则不会判断，会继续往下走\n  if (this._startAngle !== 1) {\n    return;\n  }\n  // 滑动距离\n  let translate = 0;\n  let duration = 0;\n  let currentTranslate = this._startTranslate + currentX;\n  const actions =\n    currentTranslate > 0\n      ? leftActions\n      : currentTranslate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    const {\n      overshoot,\n      overshootEdgeSize,\n      overshootFreeSize,\n      width: tWidth,\n    } = actions;\n    const vector = currentTranslate / Math.abs(currentTranslate);\n    const otSize =\n      vector *\n      Math.min(this._width, Math.max(this._width - overshootFreeSize, tWidth));\n    const oeSize =\n      vector * Math.min(this._width * 0.5, Math.max(0, overshootEdgeSize));\n    const oaSize = vector * tWidth;\n    // 可以overshoot的情况处理\n    if (overshoot) {\n      if (Math.abs(currentTranslate) < Math.abs(otSize)) {\n        // 如果手指从容器一半之外开始移动，只要手指移动到接近边缘，就可以overshoot\n        let deltaSize = 0;\n        let moveEdge = false;\n        const currentOffset = currentPoint[0] - this._offset;\n        const startOffset =\n          this._startPoint[0] - this._offset - this._startOffset;\n        const maxOffset = this._width * 0.5;\n        if (currentTranslate < 0) {\n          deltaSize = currentOffset - Math.abs(oeSize);\n          moveEdge = startOffset > maxOffset && deltaSize < 0;\n        } else {\n          deltaSize = currentOffset - (this._width - Math.abs(oeSize));\n          moveEdge = startOffset < maxOffset && deltaSize > 0;\n        }\n        if (moveEdge) {\n          currentTranslate = otSize + deltaSize;\n          // 此时要重置初始点和初始translate\n          this._startPoint = currentPoint;\n          this._startTranslate = currentTranslate;\n        }\n      }\n      const timeStamp =\n        sourceEvent instanceof MouseEvent\n          ? sourceEvent.timeStamp\n          : sourceEvent.sourceEvent.timeStamp;\n      // currentTranslate和otSize一定是同正或同负，直接比较数值大小，即currentTranslate超出otSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(otSize)) {\n        if (!this._overshooting) {\n          this._timeStamp = timeStamp;\n          this._overshooting = true;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item, true);\n            this._confirming = {\n              index,\n              direction: vector > 0 ? 'left' : 'right',\n            };\n          }\n        }\n        // 进行overshoot滑动\n        translate = rebounceSize(currentTranslate - otSize, friction) + otSize;\n        duration = Math.max(\n          0,\n          this.duration - (timeStamp - this._timeStamp) / 1000,\n        );\n      } else {\n        if (this._overshooting) {\n          this._timeStamp = timeStamp;\n          this._overshooting = false;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item);\n            this._confirming = null;\n          }\n        }\n        translate = currentTranslate;\n        duration = Math.max(\n          0,\n          this.duration / 2 - (timeStamp - this._timeStamp) / 1000,\n        );\n      }\n    } else {\n      // 不能overshoot的情况，按钮显示超出总宽度，则进行弹性尺寸\n      // currentTranslate和oaSize一定是同正或同负，直接比较数值大小，即currentTranslate超出oaSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(oaSize)) {\n        translate = rebounceSize(currentTranslate - oaSize, friction) + oaSize;\n      } else {\n        translate = currentTranslate;\n      }\n    }\n    translate = Math.min(this._width, Math.max(-this._width, translate));\n  } else {\n    // 如果不存在或按钮被禁用，则不断更新初始点和初始translate\n    this._startPoint = currentPoint;\n    this._startTranslate = 0;\n    translate = 0;\n  }\n  this._translate = translate;\n  transform.apply(this, [translate, duration]);\n  if (!this._overshooting) {\n    confirmCancel.apply(this, []);\n  }\n  return;\n};\n\nconst end = function end(this: SlideView, e: AgentEvent) {\n  const { element, leftActions, rightActions } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    this._startAngle !== 1 ||\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  this._isMoving = false;\n  const startPoint = this._startPoint;\n  const currentPoint = e.point;\n  // 滑动距离为0（表示本身就是隐藏状态）或没有任何滑动（只是点了一下）不做任何操作\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动\n  if (this._translate === 0 || getDistance(startPoint, currentPoint) < 3) {\n    return;\n  }\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    // 进行完全覆盖滑出事件\n    if (this._overshooting) {\n      const index = actions.items.length - 1;\n      const item = actions.items[index];\n      const translate =\n        (this._translate * element.getBoundingClientRect().width) /\n        Math.abs(this._translate);\n      this._translate = translate;\n      transform.apply(this, [translate]);\n      this.trigger(item.confirm ? 'buttonConfirm' : 'buttonPress', {\n        index,\n        data: item.data,\n        currentTarget: item.wrapper,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n      return;\n    }\n    // 展开时，滑出的距离不足滑出阈值则不展开\n    const delta = currentPoint[0] - startPoint[0];\n    // 微信是只要往反方向滑就关闭，并且滑出之后，如果继续有弹性滑出，弹性滑出不足阈值也会关闭\n    /* if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(delta) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    } */\n    // 苹果是只有反方向滑到阈值之内才会关闭，其他不关闭\n    /* if (Math.abs(this._translate) < actions.threshold) {\n      this.hide();\n      return;\n    } */\n    // 只要往反方向滑就关闭，其他不关闭\n    if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(this._translate) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    }\n  }\n  // 其它情况均为展示按钮\n  this.show(this._translate > 0 ? 'left' : 'right');\n};\n\nconst longPress = function longPress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && target !== contentEl) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发长按事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('longPress', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst doublePress = function doublePress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && target !== contentEl) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发双按事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('doublePress', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst press = function press(this: SlideView, e: AgentEvent) {\n  const { contentEl, leftEl, rightEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (\n    target !== currentTarget &&\n    target !== contentEl &&\n    target !== leftEl &&\n    target !== rightEl\n  ) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容元素按压事件\n  if (target === contentEl) {\n    // 没有使用this._direction判断，是因为该值变化是要动画结束后变化，this._translate变化是动画执行前\n    // 使用this._translate判断可以保证，收起动画时点击可执行，展开动画执行时点击不可执行，this._direction正好相反\n    // 收起时候则触发按压事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('press', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n  // 触发左边按钮按压事件\n  else if (target === leftEl) {\n    buttonPress.apply(this, [e, 'left']);\n  }\n  // 触发右边按钮按压事件\n  else if (target === rightEl) {\n    buttonPress.apply(this, [e, 'right']);\n  }\n};\n\nconst buttonPress = function buttonPress(\n  this: SlideView,\n  event: AgentEvent,\n  direction: Direction,\n) {\n  const { element, leftActions, rightActions, rebounce } = this;\n  if (\n    this._translate === 0 ||\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { sourceEvent, currentTarget } = event;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && !target.getAttribute('data-index')) {\n    target = target.parentNode as HTMLElement;\n  }\n  const index = +(target.getAttribute('data-index') || -1);\n  const actions: MergeAction | null =\n    direction === 'left' ? leftActions : rightActions;\n  if (index < 0 || !actions || actions.disable) {\n    return;\n  }\n  const elWidth = element.getBoundingClientRect().width;\n  const factor = this._translate / Math.abs(this._translate);\n  const confirm: Confirm = { index, direction };\n  const item = actions.items[index];\n  const overshoot = index === actions.items.length - 1 && actions.overshoot;\n  let eventType: IEventType = 'buttonPress';\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    if (overshoot) {\n      confirmStyle(item);\n      this._confirming = null;\n    } else {\n      // 点击按钮后隐藏按钮（隐藏按钮里已处理取消确认情况）\n      if (item.collapse) {\n        this.hide();\n      } else {\n        // 取消确认\n        setStyle(item.element, {\n          width: '',\n        });\n        cTransform.apply(this, [confirm]);\n        confirmStyle(item);\n        this._confirming = null;\n      }\n    }\n  } else {\n    if (overshoot) {\n      if (!this._overshooting) {\n        this._overshooting = true;\n        const translate = factor * elWidth;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        overshootChange.apply(this, [actions]);\n      }\n      if (item.confirm) {\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      }\n    } else {\n      if (item.confirm) {\n        // 如果是仅有一个按钮，确认的时候宽度设置2倍变化，但是不能超过最大宽度\n        let translate = this._translate;\n        if (actions.items.length === 1) {\n          translate = Math.min(Math.abs(2 * translate), elWidth) * factor;\n        }\n        // 设置回弹效果，第一个按钮没有\n        if (\n          rebounce > 0 &&\n          index !== 0 /*  &&\n          parseFloat(window.getComputedStyle(item.wrapper, null).width) ===\n            elWidth */\n        ) {\n          onOnceTransitionEnd(item.wrapper, () => {\n            // 该事件执行时确保当前还处于确认状态，否则不能再执行\n            if (\n              this._confirming &&\n              this._confirming.index === confirm.index &&\n              this._confirming.direction === confirm.direction\n            ) {\n              cTransform.apply(this, [confirm, translate]);\n            }\n          });\n          cTransform.apply(this, [\n            confirm,\n            translate + (rebounce * translate) / Math.abs(translate),\n          ]);\n        } else {\n          cTransform.apply(this, [confirm, translate]);\n        }\n        setStyle(item.wrapper, {\n          width: '',\n        });\n        setStyle(item.element, {\n          width: Math.abs(translate),\n        });\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      } else {\n        // 无需确认的点击（如果collapse，就点击后隐藏按钮，否则不做任何处理）\n        if (item.collapse) {\n          this.hide();\n        }\n      }\n    }\n  }\n  this.trigger(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target,\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n};\n\nclass SlideView extends EventTarget<\n  HTMLElement,\n  AgentEvent | null,\n  IEventType,\n  IEvent\n> {\n  element: HTMLElement | null; // 滑动视图元素\n  contentEl: HTMLElement | null; // 内容元素\n  leftEl: HTMLElement | null; // 左按钮元素\n  rightEl: HTMLElement | null; // 右按钮元素\n  leftActions: MergeAction | null = null; // 按钮集合\n  rightActions: MergeAction | null = null; // 按钮集合\n  friction: number = 0.5; // 摩擦因子(0-1的值)\n  rebounce: number = 12; // 弹性尺寸\n  duration: number = 0.4; // 按钮滑出动画时间（秒级）\n  timing: Timing = 'ease'; // 滑动时动画的函数\n  _destory: boolean = false; //是否销毁\n  _direction: Direction = 'none'; // 当前展示的是哪个方向按钮\n  _confirming: Confirm | null = null; // 当前正在确认的按钮\n  _overshooting: boolean = false; // 当前是否处于overshoot状态\n  _translate: number = 0; // 元素当前位移值\n  _width: number = 0; // 视图宽度\n  _offset: number = 0; // 手指放上后滑动视图元素距离屏幕左边距离即offsetLeft\n  _startOffset: number = 0; // 手指放上那一刻，translate值\n  _startTranslate: number = 0; // 手指放上那一刻，translate未经rebounceSize的值\n  _startPoint: number[] | null = null; // 手指放上后初始点\n  _startAngle: number = 0; // 移动时的角度与45度的关系\n  _timeStamp: number = 0; // 移动时的时间戳\n  _isMoving: boolean = false; // 是否正在滑动\n  _agents: IAgent | null;\n  constructor(options: IOption) {\n    super();\n    const {\n      className,\n      container,\n      content,\n      friction,\n      rebounce,\n      duration,\n      timing,\n      leftActions,\n      rightActions,\n    } = options;\n    const [element, contentEl, leftEl, rightEl] = generateEl(\n      container,\n      className,\n    );\n    this.element = element;\n    this.contentEl = contentEl;\n    this.leftEl = leftEl;\n    this.rightEl = rightEl;\n    this.setContent(content);\n    this.setFriction(friction);\n    this.setRebounce(rebounce);\n    this.setDuration(duration);\n    this.setTiming(timing);\n    this.setActions(leftActions, 'left');\n    this.setActions(rightActions, 'right');\n    this._agents = agent(element, {\n      start: start.bind(this),\n      move: move.bind(this),\n      end: end.bind(this),\n      press: press.bind(this),\n      longPress: longPress.bind(this),\n      doublePress: doublePress.bind(this),\n    });\n  }\n  setContent(content: HTMLElement | string = '') {\n    if (this._destory || !this.contentEl) {\n      return;\n    }\n    if (typeof content === 'string' && !content.match(/^[#|.].+/)) {\n      this.contentEl.innerHTML = content;\n      return;\n    }\n    try {\n      let tempChild;\n      if (typeof content === 'string') {\n        tempChild = document.querySelector(content);\n      } else {\n        tempChild = content;\n      }\n      if (tempChild) {\n        this.contentEl.innerHTML = '';\n        this.contentEl.appendChild(tempChild);\n      }\n    } catch (e) {}\n  }\n  setFriction(friction: number = 0.5) {\n    if (this._destory) {\n      return;\n    }\n    // friction: 不传为默认值0.5，传小于0的都为0，大于1的都为1，传非数字，则属于无效设置\n    if (typeof friction === 'number') {\n      this.friction = Math.min(1, Math.max(0, friction));\n    }\n  }\n  setRebounce(rebounce: number = 12) {\n    if (this._destory) {\n      return;\n    }\n    // rebounce: 不传为默认值12，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof rebounce === 'number') {\n      this.rebounce = Math.max(0, rebounce);\n    }\n  }\n  setDuration(duration: number = 0.4) {\n    if (this._destory) {\n      return;\n    }\n    // duration: 不传为默认值0.4，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof duration === 'number') {\n      this.duration = Math.max(0, duration);\n    }\n  }\n  setTiming(timing: Timing = 'ease') {\n    if (this._destory) {\n      return;\n    }\n    // timing: 不传为默认值ease\n    this.timing = timing;\n  }\n  setDisable(disable: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // disable: 不传为默认值true，传非布尔，则无效设置\n    if (typeof disable === 'boolean') {\n      this.hide().then(() => {\n        // direction传其它，则属于无效设置\n        if (\n          this.leftActions &&\n          (direction === 'both' || direction === 'left')\n        ) {\n          this.leftActions.disable = disable;\n        }\n        if (\n          this.rightActions &&\n          (direction === 'both' || direction === 'right')\n        ) {\n          this.rightActions.disable = disable;\n        }\n      });\n    }\n  }\n  setOvershoot(overshoot: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值true，传非布尔，则无效设置\n    if (typeof overshoot === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.overshoot = overshoot;\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.overshoot = overshoot;\n      }\n    }\n  }\n  setThreshold(threshold: number = 40, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值40，传小于0的都为0，传非数字，则无效设置\n    if (typeof threshold === 'number') {\n      const _threshold = Math.max(0, threshold);\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.threshold = Math.min(\n          _threshold,\n          this.leftActions.width,\n        );\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.threshold = Math.min(\n          _threshold,\n          this.rightActions.width,\n        );\n      }\n    }\n  }\n  setActions(actions: IActionOption = {}, direction: Direction = 'both') {\n    if (this._destory || direction === 'none') {\n      return;\n    }\n    // actions: 不传为默认值{}，不传，传其它，只要没有items的，都认为是删除按钮\n    const _setActions = (_direction: 'left' | 'right') => {\n      const parentEl = this[`${_direction}El`];\n      if (!parentEl) {\n        return;\n      }\n      parentEl.innerHTML = '';\n      this[`${_direction}Actions`] = null;\n      if (actions.items && actions.items.length > 0) {\n        const {\n          className,\n          style = 'accordion',\n          disable = false,\n          overshoot = false,\n          overshootEdgeSize = 80,\n          overshootFreeSize = 30,\n          threshold = 40,\n          items,\n        } = actions;\n        const tElement = addClass(\n          document.createElement('div'),\n          `hjs-slideview__actions ${className || ''}`,\n        );\n        parentEl.appendChild(tElement);\n        let tWidth = 0;\n        let tGap = 0;\n        let newItems = items.map((item, index) => {\n          const { gap = 0, fixedGap = false, text, icon } = item;\n          const element = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action',\n          );\n          element.setAttribute('data-index', String(index));\n          if (icon) {\n            element.appendChild(\n              addClass(\n                document.createElement(getIconType(icon)),\n                'hjs-slideview__action__icon',\n              ),\n            );\n          }\n          if (text) {\n            element.appendChild(\n              addClass(\n                document.createElement('span'),\n                'hjs-slideview__action__text',\n              ),\n            );\n          }\n          const wrapper = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action__wrapper',\n          );\n          wrapper.appendChild(element);\n          tElement.appendChild(wrapper);\n          const tItem: MergeActionItem = {\n            ...item,\n            wrapper,\n            element,\n            width: 0,\n            gap: [0, 0],\n            fixedGap,\n          };\n          // 设置非确认时的样式和内容\n          confirmStyle(tItem);\n          const { width } = element.getBoundingClientRect();\n          let leftGap = 0;\n          let rightGap = 0;\n          if (typeof gap === 'number') {\n            leftGap = gap;\n            rightGap = gap;\n          } else {\n            [leftGap, rightGap] = gap;\n          }\n          leftGap = Math.min(width, Math.max(leftGap, 0));\n          rightGap = Math.min(width, Math.max(rightGap, 0));\n          tWidth += width + leftGap + rightGap;\n          tGap += leftGap + rightGap;\n          return {\n            ...tItem,\n            gap: [leftGap, rightGap],\n            fixedGap: leftGap === 0 && rightGap === 0 ? false : fixedGap, // 左右gap都为0的情况，gudinggap无意义\n            width,\n          };\n        });\n        this[`${_direction}Actions`] = {\n          style,\n          disable,\n          overshoot,\n          overshootFreeSize,\n          overshootEdgeSize,\n          threshold: Math.min(tWidth, Math.max(threshold, 0)),\n          element: tElement,\n          width: tWidth,\n          gap: tGap,\n          items: newItems,\n        };\n      }\n    };\n    const _setActionsAfterCollapse = (_direction: 'left' | 'right') => {\n      // 重新设置按钮时应该先收起\n      this.hide().then(() => {\n        _setActions(_direction);\n        this.show(_direction);\n      });\n    };\n    const shown =\n      this._translate > 0 ? 'left' : this._translate < 0 ? 'right' : 'none';\n    if (direction === 'both') {\n      if (shown !== 'none') {\n        _setActionsAfterCollapse(shown);\n      }\n      if (shown !== 'left') {\n        _setActions('left');\n      }\n      if (shown !== 'right') {\n        _setActions('right');\n      }\n    } else {\n      if (shown === direction) {\n        _setActionsAfterCollapse(direction);\n      } else {\n        _setActions(direction);\n      }\n    }\n  }\n  toggle(direction: Direction = 'right') {\n    if (this._destory) {\n      return;\n    }\n    return this._translate === 0 ? this.show(direction) : this.hide();\n  }\n  show(direction: Direction = 'right') {\n    return new Promise<void>((resolve) => {\n      const { contentEl, rebounce, leftActions, rightActions } = this;\n      if (\n        this._destory ||\n        !contentEl ||\n        ((!leftActions || leftActions.disable) &&\n          (!rightActions || rightActions.disable))\n      ) {\n        resolve();\n        return;\n      }\n      let __direction = direction;\n      if (!leftActions || leftActions.disable) {\n        __direction = 'right';\n      }\n      if (!rightActions || rightActions.disable) {\n        __direction = 'left';\n      }\n      const actions = __direction === 'left' ? leftActions : rightActions;\n      const factor = __direction === 'left' ? 1 : -1;\n      const maxTranslate = !actions ? 0 : actions.width * factor;\n      if (this._translate === maxTranslate) {\n        resolve();\n        return;\n      }\n      const show = (rebSize: number = 0) => {\n        const translate = maxTranslate + rebSize;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (!rebSize) {\n          onOnceTransitionEnd(contentEl, () => {\n            resolve();\n            if (this._direction !== __direction) {\n              this.trigger('show', {\n                direction: __direction,\n                currentTarget: contentEl,\n                timeStamp: Date.now(),\n                sourceEvent: null,\n              });\n              this._direction = __direction;\n            }\n          });\n        }\n      };\n      // 设置回弹效果并且已滑动宽度小于最大宽度时才有弹性效果\n      if (\n        rebounce > 0 &&\n        ((maxTranslate > 0 && this._translate < maxTranslate) ||\n          (maxTranslate < 0 && this._translate > maxTranslate))\n      ) {\n        onOnceTransitionEnd(contentEl, () => show());\n        show(rebounce * factor);\n      } else {\n        show();\n      }\n    });\n  }\n  hide() {\n    return new Promise<void>((resolve) => {\n      const { contentEl, leftActions, rightActions } = this;\n      if (\n        this._destory ||\n        this._translate === 0 ||\n        !contentEl ||\n        ((!leftActions || leftActions.disable) &&\n          (!rightActions || rightActions.disable))\n      ) {\n        resolve();\n        return;\n      }\n      this._translate = 0;\n      transform.apply(this, [0]);\n      // 在收起动画期间，连续执行隐藏方法，会主动cancel上一次transition，保证只执行最后一次\n      onOnceTransitionEnd(contentEl, () => {\n        resolve();\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (this._direction !== 'none') {\n          this.trigger('hide', {\n            direction: 'none',\n            currentTarget: contentEl,\n            timeStamp: Date.now(),\n            sourceEvent: null,\n          });\n          this._direction = 'none';\n        }\n      });\n    });\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 销毁底层事件\n    if (this._agents) {\n      this._agents.destory();\n      this._agents = null;\n    }\n    if (this.element) {\n      // 删除元素，用户可以在调用该方法之前加一个删除动画\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }\n    this.contentEl = null;\n    this.leftEl = null;\n    this.rightEl = null;\n    this.leftActions = null;\n    this.rightActions = null;\n    this._confirming = null;\n    this._startPoint = null;\n    this._destory = true;\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'both' | 'none';\n\nexport type Timing =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | `cubic-bezier(${number},${number},${number},${number})`;\n\nexport type ActionStyle = 'drawer' | 'accordion';\n\nexport type Confirm = {\n  direction: Direction;\n  index: number;\n};\n\ntype MergeActionItem = {\n  wrapper: HTMLElement; // 当前按钮包裹元素\n  element: HTMLElement; // 当前按钮元素\n  width: number; // 当前按钮的宽度\n  gap: number[]; // 元素之间的间距\n  fixedGap: boolean; //拉伸按钮时，是否固定间距\n} & IActionItem;\n\ntype MergeAction = {\n  style: ActionStyle; // 按钮展示的风格\n  disable: boolean; // 禁用按钮\n  threshold: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootFreeSize: number; // overshoot后，总宽度剩余部分\n  overshootEdgeSize: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  element: HTMLElement; // 所有按钮父元素\n  width: number; // 按钮父元素宽度，即所有按钮宽度加间距宽度\n  gap: number; // 元素之间的间距之和\n  items: MergeActionItem[]; // 按钮配置\n};\n\nexport type IActionItem = {\n  className?: string; // 按钮自定义样式\n  text?: string; // 按钮文字\n  icon?: string; // 按钮图标（会根据传入的字符串形式判断是img还是svg元素或是字体icon）\n  color?: string; // 按钮文字图标颜色（img图标除外）\n  background?: string; //按钮背景颜色\n  confirm?: {\n    // 按钮在确认的时候替代的内容样式，不传则没有确认环节，只传{}则有确认环节，但内容样式不改变\n    className?: string; // 按钮自定义样式\n    text?: string; // 按钮文字\n    icon?: string; // 按钮图标\n    color?: string; // 按钮文字图标颜色\n    background?: string; //按钮背景颜色\n  }; // 按钮确认时的信息\n  collapse?: boolean; // 按钮点击后是否收起\n  gap?: number | number[]; // 元素左右间距\n  fixedGap?: boolean; //拉伸按钮时，是否固定间距\n  data?: any; //按钮携带数据\n};\n\nexport type IActionOption = {\n  className?: string; // 按钮自定义样式\n  style?: ActionStyle; // 按钮展示的风格\n  disable?: boolean; // 禁用按钮\n  threshold?: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot?: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootEdgeSize?: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overshootFreeSize?: number; // 滑动出来的尺寸占据组件容器尺寸之后的剩余尺寸（小于这个尺寸就overshoot）\n  items?: IActionItem[]; // 按钮配置\n};\n\nexport type IOption = {\n  className?: string; // 滑动组件类名控制样式\n  container: HTMLElement | string; // 装载滑动组件的DOM容器\n  content?: HTMLElement | string; // 滑动组件的子节点\n  friction?: number; // 摩擦因子(0-1的值)\n  rebounce?: number; // 弹性尺寸\n  duration?: number; // 滑动时动画的时间（秒级）\n  timing?: Timing; // 滑动时动画的函数\n  leftActions?: IActionOption;\n  rightActions?: IActionOption;\n};\n\nexport type IEventType =\n  | 'show'\n  | 'hide'\n  | 'press'\n  | 'longPress'\n  | 'doublePress'\n  | 'buttonPress'\n  | 'buttonConfirm';\n\nexport type IEvent = {\n  direction?: Direction; // 滑出的是哪边的按钮\n  index?: number; // 点击按钮在按钮集合里的索引\n  data?: any; // 按钮携带的数据\n} & IBaseEvent<HTMLElement, AgentEvent | null>;\n\nexport default SlideView;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-14 16:23:54\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-11 10:32:41\n * @Description: ******\n */\nexport default `\n.hjs-slideview {\n  position: relative;\n  overflow: hidden;\n}\n.hjs-slideview__content {\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left,\n.hjs-slideview__right,\n.hjs-slideview__actions,\n.hjs-slideview__action__wrapper {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left {\n  right: 100%;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__left .hjs-slideview__action__wrapper {\n  right: 0;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__right {\n  right: auto;\n  left: 100%;\n  justify-content: flex-start;\n}\n.hjs-slideview__right .hjs-slideview__action__wrapper {\n  right: auto;\n  left: 0;\n  justify-content: flex-start;\n}\n.hjs-slideview__action {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  max-width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  cursor: pointer;\n}\n.hjs-slideview__action__icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\n.hjs-slideview__action__text {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: center;\n  text-overflow: ellipsis;\n}\n`;\n"],"names":["EventTarget","this","events","type","handler","single","onceHandler","args","apply","off","on","pool","push","unregistered","i","len","length","splice","event","currentTarget","getDistance","x0","y0","x1","y1","Math","sqrt","pow","getAngle","atan2","PI","getCenter","rebounceSize","value","friction","inverse","v","f","min","abs","addClass","ele","className","split","forEach","c","classList","add","setStyle","css","Object","keys","k","key","indexOf","replace","toLowerCase","val","String","style","setProperty","getIconType","url","match","styleId","fixOption","defaultValue","minVal","touchstarted","touches","preventDefault","stopImmediatePropagation","t","p","pageX","pageY","touch","identifier","_touch0","_touch1","_preventTap","_swipeTimeStamp","_preventSingleTap","_preventDoubleTap","_longTapTimer","clearTimeout","trigger","element","point","timeStamp","Date","now","sourceEvent","window","setTimeout","waitTime","longTapInterval","_singleTapTimer","_touchFirst","doubleTapDistance","touchmoved","changedTouches","touchMoveDistance","distance1","distance0","scale","angle1","angle0","angle","center1","center0","deltaX","deltaY","touchended","x","y","deltaTime","velocity","swipeVelocity","swipeDistance","direction","delayTime","doubleTapInterval","intervalTime","touchcanceled","scrollcanceled","options","tempElement","document","querySelector","HTMLElement","Error","navigator","maxTouchPoints","started","bind","moved","ended","canceled","addEventListener","scrolled","_destory","removeEventListener","touched","moused","mouse","getAttribute","removeAttribute","onOnceTransitionEnd","transitionEnd","propertyName","ontransitionend","e","target","generateEl","container","tempContainer","createElement","id","appendChild","createTextNode","head","getElementsByTagName","viewElement","leftElement","rightElement","contentElement","innerHTML","confirmStyle","item","isConfirm","wrapper","confirm","rest","text","icon","color","background","remove","removeClass","iconEl","firstChild","src","lastChild","innerText","cTransform","translate","contentEl","leftActions","rightActions","duration","timing","disable","transition","index","factor","_translate","aTransform","items","delta","transformTotal","width","gap","transform","transformx","requestAnimationFrame","leftEl","rightEl","wTransition","tWidth","tGap","styleObj","xMove","max","fixedGap","transformw","transformb","_overshooting","confirmCancel","_confirming","actions","overshootChange","start","getBoundingClientRect","left","_width","_offset","_isMoving","_timeStamp","_startAngle","_startOffset","_startPoint","startTranslate","overshoot","overshootFreeSize","criticalTranslate","_startTranslate","move","currentPoint","currentX","currentY","currentTranslate","overshootEdgeSize","vector","otSize","oeSize","oaSize","deltaSize","moveEdge","currentOffset","startOffset","maxOffset","MouseEvent","end","startPoint","data","threshold","hide","show","longPress","parentNode","doublePress","press","buttonPress","rebounce","elWidth","eventType","collapse","content","setContent","setFriction","setRebounce","setDuration","setTiming","setActions","_agents","destory","gesture","Gesture","done","setAttribute","toString","changedTouch","mousedown","mousemoved","mouseupped","dragstarted","capture","passive","clientX","clientY","dx","dy","mousedowned","click","rightclick","dblclick","agent","tempChild","then","_threshold","_setActions","_direction","parentEl","tElement","newItems","map","tItem","leftGap","rightGap","_setActionsAfterCollapse","shown","Promise","resolve","__direction","maxTranslate","rebSize","removeChild"],"sourceRoot":""}