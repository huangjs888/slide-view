{"version":3,"file":"lib.ba3eea32.js","mappings":"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","sources":["webpack:///../src/agent.ts","webpack:///../src/util.ts","webpack:///../src/index.ts","webpack:///../src/css.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-07-27 14:05:49\n * @Description: ******\n */\nimport Gesture, { type GEvent } from '@huangjs888/gesture';\n\nfunction started(element: HTMLElement, event: GEvent, start: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  // 表示是已经有一个手指放上去了\n  if (element.getAttribute('data-touch-identifier')) {\n    return;\n  }\n  const touch = e.touches[0];\n  if (!touch) {\n    return;\n  }\n  // 设置主手指\n  element.setAttribute('data-touch-identifier', touch.identifier.toString());\n  start({\n    type: 'touch',\n    currentTarget: element,\n    point: [touch.pageX, touch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction moved(element: HTMLElement, event: GEvent, move: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示移动的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  move({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction ended(element: HTMLElement, event: GEvent, end: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示抬起的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  // 没有手指在上面了\n  element.setAttribute('data-touch-identifier', '');\n  end({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction touched(element: HTMLElement, event: GEvent, touch: AgentHandler) {\n  touch({\n    type: 'touch',\n    point: event.point,\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nfunction mousedowned(\n  element: HTMLElement,\n  event: MouseEvent,\n  { start, move, end }: AgentEventHandler,\n) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  document.addEventListener('mousemove', mousemoved);\n  document.addEventListener('mouseup', mouseupped);\n  if ('onselectstart' in document) {\n    document.addEventListener('dragstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n    document.addEventListener('selectstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n  }\n  const x0 = event.clientX;\n  const y0 = event.clientY;\n  start &&\n    start({\n      type: 'mouse',\n      point: [event.pageX, event.pageY],\n      currentTarget: element,\n      sourceEvent: event,\n    });\n\n  function dragstarted(e: Event) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function mousemoved(e: MouseEvent) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    element.setAttribute('data-move', 'true');\n    const dx = e.clientX - x0;\n    const dy = e.clientY - y0;\n    if (dx * dx + dy * dy > 3 * 3) {\n      move &&\n        move({\n          type: 'mouse',\n          point: [e.pageX, e.pageY],\n          currentTarget: element,\n          sourceEvent: e,\n        });\n    }\n  }\n\n  function mouseupped(e: MouseEvent) {\n    e.stopImmediatePropagation();\n    document.removeEventListener('mousemove', mousemoved);\n    document.removeEventListener('mouseup', mouseupped);\n    if ('onselectstart' in document) {\n      document.removeEventListener('dragstart', dragstarted);\n      document.removeEventListener('selectstart', dragstarted);\n    }\n    end &&\n      end({\n        type: 'mouse',\n        point: [e.pageX, e.pageY],\n        currentTarget: element,\n        sourceEvent: e,\n      });\n  }\n}\n\nfunction moused(element: HTMLElement, event: MouseEvent, mouse: AgentHandler) {\n  event.preventDefault();\n  const moving = element.getAttribute('data-move');\n  if (moving) {\n    element.removeAttribute('data-move');\n    return;\n  }\n  mouse({\n    type: 'mouse',\n    point: [event.pageX, event.pageY],\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nexport type AgentEvent = {\n  type: 'mouse' | 'touch';\n  point: number[];\n  currentTarget: HTMLElement;\n  sourceEvent: GEvent | MouseEvent;\n};\n\ntype AgentHandler = (e: AgentEvent) => void;\n\ntype AgentEventHandler = {\n  start?: AgentHandler | null;\n  move?: AgentHandler | null;\n  end?: AgentHandler | null;\n  press?: AgentHandler | null;\n  longPress?: AgentHandler | null;\n  doublePress?: AgentHandler | null;\n};\n\nexport type IAgent = {\n  element: HTMLElement;\n  destory: () => void;\n};\n\nexport default function agent(ele: HTMLElement, handler: AgentEventHandler) {\n  if (!ele || !(ele instanceof HTMLElement)) {\n    throw new Error('Binding events require HTMLElement...');\n  }\n  let destory = () => {};\n  const { start, move, end, press, longPress, doublePress } = handler;\n  const gesture = new Gesture(ele);\n  if (gesture.done()) {\n    if (start) {\n      gesture.on('touchStart', (e: GEvent) => started(ele, e, start));\n    }\n    if (move) {\n      gesture.on('touchMove', (e: GEvent) => moved(ele, e, move));\n    }\n    if (end) {\n      gesture.on('touchEnd', (e: GEvent) => ended(ele, e, end));\n    }\n    if (press) {\n      gesture.on('tap', (e: GEvent) => touched(ele, e, press));\n    }\n    if (longPress) {\n      gesture.on('longTap', (e: GEvent) => touched(ele, e, longPress));\n    }\n    if (doublePress) {\n      gesture.on('doubleTap', (e: GEvent) => touched(ele, e, doublePress));\n    }\n    destory = () => {\n      gesture.destory();\n    };\n  } else {\n    let mousedown: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end) {\n      mousedown = (e: MouseEvent) => mousedowned(ele, e, { start, move, end });\n      ele.addEventListener('mousedown', mousedown);\n    }\n    let click: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end || press) {\n      click = (e: MouseEvent) => moused(ele, e, press || (() => {}));\n      ele.addEventListener('click', click);\n    }\n    let rightclick: ((e: MouseEvent) => void) | null = null;\n    if (longPress) {\n      rightclick = (e: MouseEvent) => moused(ele, e, longPress);\n      ele.addEventListener('contextmenu', rightclick);\n    }\n    let dblclick: ((e: MouseEvent) => void) | null = null;\n    if (doublePress) {\n      dblclick = (e: MouseEvent) => moused(ele, e, doublePress);\n      ele.addEventListener('dblclick', dblclick);\n    }\n    destory = () => {\n      mousedown && ele.removeEventListener('mousedown', mousedown);\n      click && ele.removeEventListener('click', click);\n      dblclick && ele.removeEventListener('dblclick', dblclick);\n      rightclick && ele.removeEventListener('contextmenu', rightclick);\n    };\n  }\n  return {\n    element: ele,\n    destory,\n  };\n}\n\n/*\n  1、如果在一个事件循环内多次设置transition，只会执行性最后一次，前面的会忽略。如果在多次串联（不同的事件循环内）设置transition时，如果属性和值都无任何变化，则后续的设置会忽略，如果不一样，除了第一次，后续的transition会保留上次动画最后一帧（下次动画也从该帧开始）的结果与新设置的动画值比较，相同则不执行动画，不同则执行动画（且从），而不是每次动画都与初始节点比较，初始节点执行。\n\n  2、delay这个参数注意：正值，等待delay秒之后，从初始开始执行动画，到结束，花费duration时间。负值，无等待立马执行，从中间某节点开始执行动画，到结束位置，花费duration去掉delay负数的时间。其中中间某节点就是如果按照正常执行时用掉delay时间所应该到达的节点处。\n\n  3、如果在一个固定时间内需要不停的改变transition属性值，直到时间用完变成无transition，此时可以在每次动画时算出与第一次动画开始时的时间差，然后用这个固定时间减去时间差，设置在当前动画的duration上，直到为0时去掉transition即可（这样做动画会连贯丝滑）。\n\n  4、一些属性可以设置百分比或者不设置值（'','none','auto'）等，而不是具体的数值的时候，此时设置transition，并不会发生动画（比如宽度从auto到100px是瞬间到达），可以在设置transition之前先设一个具体值，比如0或1，但是，这里注意，需要把设置transition的语句放在下一个事件循环（比如setTimeout）内，但最好的是放在requestAnimationFrame，或者在语句之前调用一次布局信息（比如获取宽度值），其实就是强迫浏览器重绘：浏览器通常还会在两种情况下会产生样式变更事件，一是满足屏幕刷新频率（requestAnimationFrame），二是当 JS 脚本需要获取最新的样式布局信息时。这种情况也适用于对隐藏的元素进行动画，动画后再隐藏，可以监听transitionend，在事件内隐藏。\n  https://blog.csdn.net/weixin_45189747/article/details/97790805\n  http://aihongxin.com/6652.html\n\n  5、 实现串联动画：使用animation，定义好需要的动画，想怎么玩怎么玩，缺点是无法动态设置值，如果需要动态设置值，只能用js动态添加、修改css3的@keyframes。使用transition，监听transitionend，在事件内再执行新动画，缺点是动画复杂，事件串联复杂，并且要做好判断，绑定、解绑，防止事件重复执行，或者无法串联执行，另外cancel后不会再执行。使用transitionend注意以下几点：\n  https://zhuanlan.zhihu.com/p/481680437\n\n  1、如果监听元素有多个属性都有transition，transitionend会在多个属性完成后多次触发。\n  解决方法：通过注册时提供实际监控的属性值与事件触发时e.propertyName比较来控制执行哪个。\n\n  2、如果监听元素的children也有transition，transitionend也会在children的transition完成后处触发。\n  解决方法：可以通过判断e.target === element或e.currentTarget来判断是不是当前监听元素。\n\n  3、快速连续触发设置transition事件，可以在动画未执行完触发的transitioncancel事件内解绑上一次的transitionend，保证只有当前这次的transitionend可运行，同时当前transitionend执行后也解绑当前的保证只会执行一次。\n  但是存在一种概率较低的情况：过渡动画刚执行完毕（即不会触发transitioncancel），本次transitionend还没来得及触发执行（因为transitionend触发和最后一帧动画结束并不是同一事件循环），此时设置transition的方法抢先执行进来设置过渡动画，这个时候上一次的transitionend事件是无法被清掉的。\n  解决方法：在每次注册transitionend时把之前已绑定transitionend事件全部清掉，同时当前transitionend执行后解绑。可以通过元素属性事件注册，而不使用addEventListener，即element.ontransitionend = ()=>{}，因为这种注册方式，永远都是替换掉上一次的事件，只有当前这一个。\n*/\nexport function onOnceTransitionEnd(\n  ele: HTMLElement,\n  transitionEnd: (e: TransitionEvent) => void,\n  propertyName: string = 'transform',\n) {\n  if (ele) {\n    ele.ontransitionend = (e: TransitionEvent) => {\n      // 阻止冒泡及后续事件触发\n      e.stopImmediatePropagation();\n      // 只有触发事件的目标元素与绑定的目标元素一致，同时触发事件的属性与需要的属性相同，才会执行事件并解绑\n      if (e.target === ele && e.propertyName === propertyName) {\n        ele.ontransitionend = null;\n        transitionEnd(e);\n      }\n    };\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-07-27 13:50:19\n * @Description: ******\n */\n\nexport function addClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.add(c));\n  }\n  return ele;\n}\n\nexport function removeClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.remove(c));\n  }\n  return ele;\n}\n\nexport const getMarginSize = function getMarginSize(element: HTMLElement) {\n  let val = 0;\n  if (element) {\n    const computed = window.getComputedStyle(element, null);\n    if (computed) {\n      val = parseFloat(computed.marginLeft) + parseFloat(computed.marginRight);\n    } else {\n      val =\n        parseFloat(element.style.marginLeft) +\n        parseFloat(element.style.marginRight);\n    }\n    if (Number.isNaN(val)) {\n      val = 0;\n    }\n  }\n  return val;\n};\n\nexport function getIconType(url: string) {\n  if (url) {\n    if (\n      url.match(/\\.(jpe?g|png|gif|bmp|ico|svg|webp)$/) ||\n      url.match(/^(data:image\\/)/)\n    ) {\n      return 'img';\n    } else if (url.match(/^<svg(.+)?>.+<\\/svg>$/)) {\n      return 'span';\n    }\n  }\n  return 'i';\n}\n\nconst styleId = 'hjs-slide-view-style';\nexport function cssInject(cssText: string) {\n  let style = document.querySelector(`#${styleId}`);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.appendChild(document.createTextNode(cssText));\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(\n      style,\n    );\n  }\n}\n\nconst autoPxReg =\n  /^(?:-border(?:-top|-right|-bottom|-left)?(?:-width|)|(?:-margin|-padding)?(?:-top|-right|-bottom|-left)?|(?:-min|-max)?(?:-width|-height))$/;\nexport function setStyle(\n  ele: HTMLElement,\n  css: { [key: string]: string | number | undefined },\n) {\n  if (ele) {\n    Object.keys(css).forEach((k: string) => {\n      if (typeof css[k] === 'undefined') {\n        return;\n      }\n      const key = k.replace(/([A-Z])/g, '-$1').toLowerCase();\n      const val =\n        typeof css[k] === 'number' &&\n        /^[a-z]/.test(key) &&\n        autoPxReg.test(`-${key}`)\n          ? `${css[k]}px`\n          : String(css[k]);\n      ele.style.setProperty(key, val);\n    });\n  }\n  return ele;\n}\n\nexport function findTarget(event: any, condition: (t: HTMLElement) => boolean) {\n  let target = (\n    event instanceof MouseEvent ? event.target : event.sourceEvent.target\n  ) as HTMLElement;\n  while (condition(target)) {\n    target = target.parentNode as HTMLElement;\n  }\n  return target;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-07-27 15:05:11\n * @Description: ******\n */\nimport { EventTarget } from '@huangjs888/gesture';\nimport { revokeDamping, performDamping } from '@huangjs888/damping';\nimport agent, {\n  onOnceTransitionEnd,\n  type AgentEvent,\n  type IAgent,\n} from './agent';\nimport {\n  getIconType,\n  addClass,\n  removeClass,\n  setStyle,\n  cssInject,\n  findTarget,\n} from './util';\nimport css from './css';\n\nconst generateEl = function generateEl(\n  container: HTMLElement | string,\n  className?: string,\n) {\n  let tempContainer: HTMLElement | null;\n  try {\n    if (typeof container === 'string') {\n      tempContainer = document.querySelector(container);\n    } else {\n      tempContainer = container;\n    }\n  } catch (e) {\n    tempContainer = null;\n  }\n  if (!tempContainer || !(tempContainer instanceof HTMLElement)) {\n    throw new Error('Please pass in a valid container element...');\n  }\n  cssInject(css);\n  const viewElement = addClass(\n    document.createElement('div'),\n    `hjs-slideview ${className || ''}`,\n  );\n  const leftElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__left',\n  );\n  viewElement.appendChild(leftElement);\n  const rightElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__right',\n  );\n  viewElement.appendChild(rightElement);\n  const contentElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__content',\n  );\n  viewElement.appendChild(contentElement);\n  tempContainer.innerHTML = '';\n  tempContainer.appendChild(viewElement);\n  return [viewElement, contentElement, leftElement, rightElement];\n};\n\nconst confirmStyle = function (\n  item: MergeActionItem,\n  isConfirm: boolean = false,\n) {\n  const {\n    wrapper,\n    element,\n    confirm = {}, // isConfirm为true,confirm必然存在\n    ...rest\n  } = item;\n  let { text, icon, color, background, className } = rest;\n  if (isConfirm) {\n    // 如果icon不存在，则不存在该确认，如果icon存在，则取确认icon，若确认icon不存在，则仍然取icon\n    icon = icon && (confirm.icon || icon);\n    text = text && (confirm.text || text);\n    color = color && (confirm.color || color);\n    background = background && (confirm.background || background);\n    className = className && (confirm.className || className);\n  }\n  setStyle(wrapper, {\n    background: background || '',\n    color: color || '',\n  });\n  addClass(\n    removeClass(\n      element,\n      isConfirm\n        ? rest.className || ''\n        : confirm.className || rest.className || '',\n    ),\n    className || '',\n  );\n  if (icon) {\n    const iconEl = element.firstElementChild as HTMLElement;\n    const type = getIconType(icon);\n    if (type === 'img') {\n      (iconEl as HTMLImageElement).src = icon;\n    } else if (type === 'i') {\n      iconEl.className = icon;\n    } else {\n      iconEl.innerHTML = icon;\n    }\n  }\n  if (text) {\n    const textEl = element.lastElementChild as HTMLElement;\n    textEl.innerText = text;\n  }\n};\n\nconst cTransform = function cTransform(\n  this: SlideView,\n  confirm: Confirm,\n  translate: number = 0,\n) {\n  const { contentEl, leftActions, rightActions, duration, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const { index, direction } = confirm;\n  // 这里注意：在调用hideButton隐藏按钮之后再执行该恢复方法，_translate等于0了，所以无需再判断\n  const factor =\n    this._translate === 0 ? 0 : this._translate / Math.abs(this._translate);\n  const aTransform = ({ style, items }: MergeAction) => {\n    let delta = 0;\n    if (style === 'drawer') {\n      delta = -this._translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    for (let i = items.length - 1; i >= 0; i--) {\n      const { wrapper, width, gap } = items[i];\n      if (items.length === 1) {\n        // 如果是仅有一个按钮，确认的时候设置2倍变化\n        setStyle(contentEl, {\n          transform: `translate3d(${\n            translate !== 0 ? translate : this._translate\n          }px, 0, 0)`,\n          transition,\n        });\n      }\n      if (i === index) {\n        let transformx = 0;\n        if (translate !== 0) {\n          transformx = translate;\n        } else {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      } else if (i > index) {\n        let transformx = 0;\n        if (translate === 0) {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        // 大于index的一定都是压在上面的，压在上面的需要收起，而小于index压在下面的不需要变化\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      }\n      transformTotal += width + gap[0] + gap[1];\n    }\n  };\n  if (direction === 'left' && leftActions && !leftActions.disable) {\n    aTransform(leftActions);\n  }\n  if (direction === 'right' && rightActions && !rightActions.disable) {\n    aTransform(rightActions);\n  }\n};\n\nconst transform = function transform(\n  this: SlideView,\n  translate: number,\n  duration: number = this.duration,\n) {\n  const { leftEl, rightEl, contentEl, leftActions, rightActions, timing } =\n    this;\n  if (\n    !leftEl ||\n    !rightEl ||\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  let factor = 0;\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const wTransition =\n    duration <= 0\n      ? ''\n      : `width ${duration}s ${timing} 0s, transform ${duration}s ${timing} 0s`;\n  const aTransform = ({\n    style,\n    items,\n    element,\n    width: tWidth,\n    gap: tGap,\n  }: MergeAction) => {\n    let styleObj = {};\n    let xMove = translate;\n    let delta = 0;\n    if (style === 'drawer') {\n      setStyle(element, {\n        width: Math.max(Math.abs(translate), tWidth),\n        transform: `translate3d(${translate}px, 0, 0)`,\n        transition: wTransition,\n      });\n      xMove = factor * Math.max(tWidth, Math.abs(translate));\n      delta = -translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    const len = items.length - 1;\n    for (let i = len; i >= 0; i--) {\n      const { wrapper, width, gap, fixedGap } = items[i];\n      // 当前按钮需要滑出的占比距离\n      const transformw = (width / (tWidth - tGap)) * (xMove - factor * tGap);\n      const transformb = transformw + factor * gap[1];\n      // 当前按钮滑出距离应该是占比距离+前面已有按钮的占比距离\n      const transformx = transformb + transformTotal;\n      if (fixedGap && wrapper.style.width !== '100%') {\n        // 只有width不为100%时才设置具体宽度，因为overshoot的时候需要设置100%\n        styleObj = {\n          width: Math.max(Math.abs(transformw), width),\n          transition: wTransition,\n        };\n      }\n      // 左边或右边的最后一个按钮\n      setStyle(wrapper, {\n        transform: `translate3d(${\n          (i === len && this._overshooting ? translate : transformx) + delta\n        }px, 0, 0)`,\n        transition,\n        ...styleObj,\n      });\n      // 累计已滑出按钮的占比距离\n      transformTotal += transformb + factor * gap[0];\n    }\n  };\n  // move事件发生，放入下一帧执行（move的时候使用这个节能而且不抖动）\n  window.requestAnimationFrame(() => {\n    setStyle(contentEl, {\n      transform: `translate3d(${translate}px, 0, 0)`,\n      transition,\n    });\n    // 这里是左右都进行变换，还是说根据translate的正负来判断只变换某一边的呢（因为另一边处于隐藏状态无需变换耗能）？\n    // 答案是都要进行变换，因为存在一种情况，即滑动太快，left的translate还未走到0（没有完全收起），下一把就right了。\n    if (leftActions && !leftActions.disable) {\n      factor = 1;\n      aTransform(leftActions);\n    }\n    if (rightActions && !rightActions.disable) {\n      factor = -1;\n      aTransform(rightActions);\n    }\n  });\n};\n\nconst confirmCancel = function (this: SlideView) {\n  // 如果当前处于按钮确认状态，隐藏之前需要先取消\n  if (this._confirming) {\n    // 因为hide的时候会进行变换，所以不需要再cTransform\n    const { index, direction } = this._confirming;\n    const actions =\n      direction === 'left'\n        ? this.leftActions\n        : direction === 'right'\n        ? this.rightActions\n        : null;\n    if (actions && !actions.disable) {\n      const item = actions.items[index];\n      setStyle(item.element, {\n        width: '',\n      });\n      confirmStyle(item);\n    }\n    this._confirming = null;\n  }\n};\n\nconst overshootChange = function (\n  this: SlideView,\n  actions: MergeAction | null,\n) {\n  if (actions && !actions.disable) {\n    const item = actions.items[actions.items.length - 1];\n    setStyle(item.wrapper, {\n      width: this._overshooting ? '100%' : '',\n    });\n  }\n};\n\nconst start = function start(this: SlideView, e: AgentEvent) {\n  const { element, leftActions, rightActions, friction } = this;\n  if (\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  // 每次start重新计算容器宽度和offsetLeft(防止屏幕变化)\n  const { width, left } = element.getBoundingClientRect();\n  this._width = width;\n  this._offset = left;\n  const { point } = e;\n  this._isMoving = true;\n  this._timestamp = 0;\n  this._startAngle = 0;\n  // 初始偏移量\n  this._startOffset = this._translate;\n  // 初始点\n  this._startPoint = point;\n  // 计算初始taranslate\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  let startTranslate = 0;\n  if (actions && !actions.disable) {\n    const { overshoot, overshootFreeSize, width: tWidth } = actions;\n    // 弹性尺寸临界点\n    const criticalTranslate =\n      ((overshoot\n        ? Math.min(width, Math.max(width - overshootFreeSize, tWidth))\n        : tWidth) *\n        this._translate) /\n      Math.abs(this._translate);\n    if (Math.abs(this._translate) <= Math.abs(criticalTranslate)) {\n      startTranslate = this._translate;\n    } else {\n      // 恢复_translate的弹性尺寸部分\n      startTranslate =\n        revokeDamping(this._translate - criticalTranslate, {\n          expo: friction,\n        }) + criticalTranslate;\n    }\n  }\n  this._startTranslate = startTranslate;\n};\n\nconst move = function move(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions, friction } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { point: currentPoint } = e;\n  const currentX = currentPoint[0] - this._startPoint[0];\n  const currentY = currentPoint[1] - this._startPoint[1];\n  if (this._startAngle === 0) {\n    // 只在第一次移动事件的时候进行计算\n    // 根据xy的长短来判断移动角度与45度的关系\n    this._startAngle = Math.abs(currentX) - Math.abs(currentY) <= 0 ? -1 : 1;\n  }\n  // 只有角度小于45度(_startAngle为1)，才会开始移动\n  // 只会在第一次触发的时候判断，后续如果移动过程中角度变化，则不会判断，会继续往下走\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._startAngle !== 1 || Math.abs(currentX) <= 3) {\n    return;\n  }\n  // 滑动距离\n  let translate = 0;\n  let duration = 0;\n  let currentTranslate = this._startTranslate + currentX;\n  const actions =\n    currentTranslate > 0\n      ? leftActions\n      : currentTranslate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    const {\n      overshoot,\n      overshootEdgeSize,\n      overshootFreeSize,\n      width: tWidth,\n    } = actions;\n    const factor = currentTranslate / Math.abs(currentTranslate);\n    const oaSize = factor * tWidth;\n    const otSize =\n      factor *\n      Math.min(this._width, Math.max(this._width - overshootFreeSize, tWidth));\n    const oeSize =\n      factor * Math.min(this._width * 0.5, Math.max(0, overshootEdgeSize));\n    // 可以overshoot的情况处理\n    if (overshoot) {\n      if (Math.abs(currentTranslate) < Math.abs(otSize)) {\n        // 如果手指从容器一半之外开始移动，只要手指移动到接近边缘，就可以overshoot\n        let deltaSize = 0;\n        let moveEdge = false;\n        const currentOffset = currentPoint[0] - this._offset;\n        const startOffset =\n          this._startPoint[0] - this._offset - this._startOffset;\n        const maxOffset = this._width * 0.5;\n        if (currentTranslate < 0) {\n          deltaSize = currentOffset - Math.abs(oeSize);\n          moveEdge = startOffset > maxOffset && deltaSize < 0;\n        } else {\n          deltaSize = currentOffset - (this._width - Math.abs(oeSize));\n          moveEdge = startOffset < maxOffset && deltaSize > 0;\n        }\n        if (moveEdge) {\n          currentTranslate = otSize + deltaSize;\n          // 此时要重置初始点和初始translate\n          this._startPoint = currentPoint;\n          this._startTranslate = currentTranslate;\n        }\n      }\n      const timestamp = Date.now();\n      // currentTranslate和otSize一定是同正或同负，直接比较数值大小，即currentTranslate超出otSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(otSize)) {\n        if (!this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = true;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item, true);\n            this._confirming = {\n              index,\n              direction: factor > 0 ? 'left' : 'right',\n            };\n          }\n        }\n        translate =\n          performDamping(currentTranslate - otSize, {\n            expo: friction,\n          }) + otSize;\n        duration = Math.max(\n          0,\n          this.duration - (timestamp - this._timestamp) / 1000,\n        );\n      } else {\n        if (this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = false;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item);\n            this._confirming = null;\n          }\n        }\n        translate = currentTranslate;\n        duration = Math.max(\n          0,\n          this.duration / 2 - (timestamp - this._timestamp) / 1000,\n        );\n      }\n    } else {\n      // 不能overshoot的情况，按钮显示超出总宽度，则进行弹性尺寸\n      // currentTranslate和oaSize一定是同正或同负，直接比较数值大小，即currentTranslate超出oaSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(oaSize)) {\n        console.log(\n          22,\n          performDamping(currentTranslate - oaSize, {\n            expo: friction,\n          }),\n        );\n        translate =\n          performDamping(currentTranslate - oaSize, {\n            // max: rebounce * 2,\n            expo: friction,\n          }) + oaSize;\n      } else {\n        translate = currentTranslate;\n      }\n    }\n    translate = Math.min(this._width, Math.max(-this._width, translate));\n  } else {\n    // 如果不存在或按钮被禁用，则不断更新初始点和初始translate\n    this._startPoint = currentPoint;\n    this._startTranslate = 0;\n    translate = 0;\n  }\n  this._translate = translate;\n  transform.apply(this, [translate, duration]);\n  if (!this._overshooting) {\n    confirmCancel.apply(this, []);\n  }\n  return;\n};\n\nconst end = function end(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    this._startAngle !== 1 ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  this._isMoving = false;\n  const startPoint = this._startPoint;\n  const currentPoint = e.point;\n  const delta = currentPoint[0] - startPoint[0];\n  // 滑动距离为0（表示本身就是隐藏状态）或没有任何滑动（只是点了一下）不做任何操作\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._translate === 0 || Math.abs(delta) <= 3) {\n    return;\n  }\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    // 进行完全覆盖滑出事件\n    if (this._overshooting) {\n      const index = actions.items.length - 1;\n      const item = actions.items[index];\n      const translate =\n        (this._translate * this._width) / Math.abs(this._translate);\n      this._translate = translate;\n      transform.apply(this, [translate]);\n      this.emit(item.confirm ? 'buttonConfirm' : 'buttonPress', {\n        index,\n        data: item.data,\n        currentTarget: item.wrapper,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n      return;\n    }\n    // 展开时，滑出的距离不足滑出阈值则不展开\n    // 微信是只要往反方向滑就关闭，并且滑出之后，如果继续有弹性滑出，弹性滑出不足阈值也会关闭\n    /* if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(delta) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    } */\n    // 苹果是只有反方向滑到阈值之内才会关闭，其他不关闭\n    /* if (Math.abs(this._translate) < actions.threshold) {\n      this.hide();\n      return;\n    } */\n    // 只要往反方向滑就关闭，其他不关闭\n    if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(this._translate) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    }\n  }\n  // 其它情况均为展示按钮\n  this.show(this._translate > 0 ? 'left' : 'right');\n};\n\nconst longPress = function longPress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && t !== contentEl,\n  );\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发长按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('longPress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst doublePress = function doublePress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && t !== contentEl,\n  );\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发双按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('doublePress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst press = function press(this: SlideView, e: AgentEvent) {\n  const { contentEl, leftEl, rightEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) =>\n      t !== currentTarget && t !== contentEl && t !== leftEl && t !== rightEl,\n  );\n  // 触发内容元素按压事件\n  if (target === contentEl) {\n    // 没有使用this._direction判断，是因为该值变化是要动画结束后变化，this._translate变化是动画执行前\n    // 使用this._translate判断可以保证，收起动画时点击可执行，展开动画执行时点击不可执行，this._direction正好相反\n    // 收起时候则触发按压事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('press', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n  // 触发左边按钮按压事件\n  else if (target === leftEl) {\n    buttonPress.apply(this, [e, 'left']);\n  }\n  // 触发右边按钮按压事件\n  else if (target === rightEl) {\n    buttonPress.apply(this, [e, 'right']);\n  }\n};\n\nconst buttonPress = function buttonPress(\n  this: SlideView,\n  event: AgentEvent,\n  direction: Direction,\n) {\n  const { element, leftActions, rightActions, rebounce } = this;\n  if (\n    this._translate === 0 ||\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { sourceEvent, currentTarget } = event;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && !t.getAttribute('data-index'),\n  );\n  const index = +(target.getAttribute('data-index') || -1);\n  const actions: MergeAction | null =\n    direction === 'left' ? leftActions : rightActions;\n  if (index < 0 || !actions || actions.disable) {\n    return;\n  }\n  const elWidth = element.getBoundingClientRect().width;\n  const factor = this._translate / Math.abs(this._translate);\n  const confirm: Confirm = { index, direction };\n  const item = actions.items[index];\n  const overshoot = index === actions.items.length - 1 && actions.overshoot;\n  let eventType: IEventType = 'buttonPress';\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    if (overshoot) {\n      confirmStyle(item);\n      this._confirming = null;\n    } else {\n      // 点击按钮后隐藏按钮（隐藏按钮里已处理取消确认情况）\n      if (item.collapse) {\n        this.hide();\n      } else {\n        // 取消确认\n        setStyle(item.element, {\n          width: '',\n        });\n        cTransform.apply(this, [confirm]);\n        confirmStyle(item);\n        this._confirming = null;\n      }\n    }\n  } else {\n    if (overshoot) {\n      if (!this._overshooting) {\n        this._overshooting = true;\n        const translate = factor * elWidth;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        overshootChange.apply(this, [actions]);\n      }\n      if (item.confirm) {\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      }\n    } else {\n      if (item.confirm) {\n        // 如果是仅有一个按钮，确认的时候宽度设置2倍变化，但是不能超过最大宽度\n        let translate = this._translate;\n        if (actions.items.length === 1) {\n          translate = Math.min(Math.abs(2 * translate), elWidth) * factor;\n        }\n        // 设置回弹效果，第一个按钮没有\n        if (\n          rebounce > 0 &&\n          index !== 0 /*  &&\n          parseFloat(window.getComputedStyle(item.wrapper, null).width) ===\n            elWidth */\n        ) {\n          onOnceTransitionEnd(item.wrapper, () => {\n            // 该事件执行时确保当前还处于确认状态，否则不能再执行\n            if (\n              this._confirming &&\n              this._confirming.index === confirm.index &&\n              this._confirming.direction === confirm.direction\n            ) {\n              cTransform.apply(this, [confirm, translate]);\n            }\n          });\n          cTransform.apply(this, [\n            confirm,\n            translate + (rebounce * translate) / Math.abs(translate),\n          ]);\n        } else {\n          cTransform.apply(this, [confirm, translate]);\n        }\n        setStyle(item.wrapper, {\n          width: '',\n        });\n        setStyle(item.element, {\n          width: Math.abs(translate),\n        });\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      } else {\n        // 无需确认的点击（如果collapse，就点击后隐藏按钮，否则不做任何处理）\n        if (item.collapse) {\n          this.hide();\n        }\n      }\n    }\n  }\n  this.emit(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target,\n    timestamp: Date.now(),\n    sourceEvent: event,\n  });\n};\n\nclass SlideView extends EventTarget<IEventType, IEvent> {\n  element: HTMLElement | null = null; // 滑动视图元素\n  contentEl: HTMLElement | null = null; // 内容元素\n  leftEl: HTMLElement | null = null; // 左按钮元素\n  rightEl: HTMLElement | null = null; // 右按钮元素\n  leftActions: MergeAction | null = null; // 按钮集合\n  rightActions: MergeAction | null = null; // 按钮集合\n  friction: number = 0.5; // 摩擦因子(0-1的值)\n  rebounce: number = 12; // 弹性尺寸\n  duration: number = 0.4; // 按钮滑出动画时间（秒级）\n  timing: Timing = 'ease'; // 滑动时动画的函数\n  _destory: boolean = false; // 是否销毁\n  _direction: Direction = 'none'; // 当前展示的是哪个方向按钮\n  _confirming: Confirm | null = null; // 当前正在确认的按钮\n  _overshooting: boolean = false; // 当前是否处于overshoot状态\n  _translate: number = 0; // 元素当前位移值\n  _width: number = 0; // 视图宽度\n  _offset: number = 0; // 手指放上后滑动视图元素距离屏幕左边距离即offsetLeft\n  _startOffset: number = 0; // 手指放上那一刻，translate值\n  _startTranslate: number = 0; // 手指放上那一刻，translate未经rebounceSize的值\n  _startPoint: number[] | null = null; // 手指放上后初始点\n  _startAngle: number = 0; // 移动时的角度与45度的关系\n  _timestamp: number = 0; // 移动时的时间戳\n  _isMoving: boolean = false; // 是否正在滑动\n  _agents: IAgent | null = null;\n  constructor(options: IOption) {\n    super();\n    const {\n      className,\n      container,\n      content,\n      friction,\n      rebounce,\n      duration,\n      timing,\n      leftActions,\n      rightActions,\n    } = options;\n    const [element, contentEl, leftEl, rightEl] = generateEl(\n      container,\n      className,\n    );\n    this.element = element;\n    this.contentEl = contentEl;\n    this.leftEl = leftEl;\n    this.rightEl = rightEl;\n    this.setContent(content);\n    this.setFriction(friction);\n    this.setRebounce(rebounce);\n    this.setDuration(duration);\n    this.setTiming(timing);\n    this.setActions(leftActions, 'left');\n    this.setActions(rightActions, 'right');\n    this._agents = agent(element, {\n      start: start.bind(this),\n      move: move.bind(this),\n      end: end.bind(this),\n      press: press.bind(this),\n      longPress: longPress.bind(this),\n      doublePress: doublePress.bind(this),\n    });\n  }\n  setContent(content: HTMLElement | string = '', dangerous?: boolean) {\n    if (this._destory || !this.contentEl) {\n      return;\n    }\n    // 注意XSS注入\n    if (dangerous && typeof content === 'string') {\n      this.contentEl.innerHTML = content;\n      return;\n    }\n    try {\n      let tempChild;\n      if (typeof content === 'string') {\n        tempChild = document.querySelector(content);\n      } else {\n        tempChild = content;\n      }\n      if (tempChild) {\n        this.contentEl.innerHTML = '';\n        this.contentEl.appendChild(tempChild);\n      }\n    } catch (e) {}\n  }\n  setFriction(friction: number = 0.5) {\n    if (this._destory) {\n      return;\n    }\n    // friction: 不传为默认值0.5，传小于0的都为0，大于1的都为1，传非数字，则属于无效设置\n    if (typeof friction === 'number') {\n      this.friction = Math.min(1, Math.max(0, friction));\n    }\n  }\n  setRebounce(rebounce: number = 12) {\n    if (this._destory) {\n      return;\n    }\n    // rebounce: 不传为默认值12，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof rebounce === 'number') {\n      this.rebounce = Math.max(0, rebounce);\n    }\n  }\n  setDuration(duration: number = 0.4) {\n    if (this._destory) {\n      return;\n    }\n    // duration: 不传为默认值0.4，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof duration === 'number') {\n      this.duration = Math.max(0, duration);\n    }\n  }\n  setTiming(timing: Timing = 'ease') {\n    if (this._destory) {\n      return;\n    }\n    // timing: 不传为默认值ease\n    this.timing = timing;\n  }\n  setDisable(disable: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // disable: 不传为默认值true，传非布尔，则无效设置\n    if (typeof disable === 'boolean') {\n      this.hide().then(() => {\n        // direction传其它，则属于无效设置\n        if (\n          this.leftActions &&\n          (direction === 'both' || direction === 'left')\n        ) {\n          this.leftActions.disable = disable;\n        }\n        if (\n          this.rightActions &&\n          (direction === 'both' || direction === 'right')\n        ) {\n          this.rightActions.disable = disable;\n        }\n      });\n    }\n  }\n  setOvershoot(overshoot: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值true，传非布尔，则无效设置\n    if (typeof overshoot === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.overshoot = overshoot;\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.overshoot = overshoot;\n      }\n    }\n  }\n  setThreshold(threshold: number = 40, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值40，传小于0的都为0，传非数字，则无效设置\n    if (typeof threshold === 'number') {\n      const _threshold = Math.max(0, threshold);\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.threshold = Math.min(\n          _threshold,\n          this.leftActions.width,\n        );\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.threshold = Math.min(\n          _threshold,\n          this.rightActions.width,\n        );\n      }\n    }\n  }\n  setActions(actions: IActionOption = {}, direction: Direction = 'both') {\n    if (this._destory || direction === 'none') {\n      return;\n    }\n    // actions: 不传为默认值{}，不传，传其它，只要没有items的，都认为是删除按钮\n    const _setActions = (_direction: 'left' | 'right') => {\n      const parentEl = this[`${_direction}El`];\n      if (!parentEl) {\n        return;\n      }\n      parentEl.innerHTML = '';\n      this[`${_direction}Actions`] = null;\n      if (actions.items && actions.items.length > 0) {\n        const {\n          className,\n          style = 'accordion',\n          disable = false,\n          overshoot = false,\n          overshootEdgeSize = 80,\n          overshootFreeSize = 30,\n          threshold = 40,\n          items,\n        } = actions;\n        const tElement = addClass(\n          document.createElement('div'),\n          `hjs-slideview__actions ${className || ''}`,\n        );\n        parentEl.appendChild(tElement);\n        let tWidth = 0;\n        let tGap = 0;\n        let newItems = items.map((item, index) => {\n          const { gap = 0, fixedGap = false, text, icon } = item;\n          const element = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action',\n          );\n          element.setAttribute('data-index', String(index));\n          if (icon) {\n            element.appendChild(\n              addClass(\n                document.createElement(getIconType(icon)),\n                'hjs-slideview__action__icon',\n              ),\n            );\n          }\n          if (text) {\n            element.appendChild(\n              addClass(\n                document.createElement('span'),\n                'hjs-slideview__action__text',\n              ),\n            );\n          }\n          const wrapper = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action__wrapper',\n          );\n          wrapper.appendChild(element);\n          tElement.appendChild(wrapper);\n          const tItem: MergeActionItem = {\n            ...item,\n            wrapper,\n            element,\n            width: 0,\n            gap: [0, 0],\n            fixedGap,\n          };\n          // 设置非确认时的样式和内容\n          confirmStyle(tItem);\n          const { width } = element.getBoundingClientRect();\n          let leftGap = 0;\n          let rightGap = 0;\n          if (typeof gap === 'number') {\n            leftGap = gap;\n            rightGap = gap;\n          } else {\n            [leftGap, rightGap] = gap;\n          }\n          leftGap = Math.min(width, Math.max(leftGap, 0));\n          rightGap = Math.min(width, Math.max(rightGap, 0));\n          tWidth += width + leftGap + rightGap;\n          tGap += leftGap + rightGap;\n          return {\n            ...tItem,\n            gap: [leftGap, rightGap],\n            fixedGap: leftGap === 0 && rightGap === 0 ? false : fixedGap, // 左右gap都为0的情况，gudinggap无意义\n            width,\n          };\n        });\n        this[`${_direction}Actions`] = {\n          style,\n          disable,\n          overshoot,\n          overshootFreeSize,\n          overshootEdgeSize,\n          threshold: Math.min(tWidth, Math.max(threshold, 0)),\n          element: tElement,\n          width: tWidth,\n          gap: tGap,\n          items: newItems,\n        };\n      }\n    };\n    const _setActionsAfterCollapse = (_direction: 'left' | 'right') => {\n      // 重新设置按钮时应该先收起\n      this.hide().then(() => {\n        _setActions(_direction);\n        this.show(_direction);\n      });\n    };\n    const shown =\n      this._translate > 0 ? 'left' : this._translate < 0 ? 'right' : 'none';\n    if (direction === 'both') {\n      if (shown !== 'none') {\n        _setActionsAfterCollapse(shown);\n      }\n      if (shown !== 'left') {\n        _setActions('left');\n      }\n      if (shown !== 'right') {\n        _setActions('right');\n      }\n    } else {\n      if (shown === direction) {\n        _setActionsAfterCollapse(direction);\n      } else {\n        _setActions(direction);\n      }\n    }\n  }\n  toggle(direction: Direction = 'right') {\n    return this._translate === 0 ? this.show(direction) : this.hide();\n  }\n  show(direction: Direction = 'right') {\n    const { contentEl, rebounce, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) &&\n        (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      let __direction = direction;\n      if (!leftActions || leftActions.disable) {\n        __direction = 'right';\n      }\n      if (!rightActions || rightActions.disable) {\n        __direction = 'left';\n      }\n      const actions = __direction === 'left' ? leftActions : rightActions;\n      const factor = __direction === 'left' ? 1 : -1;\n      const maxTranslate = !actions ? 0 : actions.width * factor;\n      if (this._translate === maxTranslate) {\n        resolve();\n        return;\n      }\n      const show = (rebSize: number = 0) => {\n        const translate = maxTranslate + rebSize;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (!rebSize) {\n          onOnceTransitionEnd(contentEl, () => {\n            resolve();\n            if (this._direction !== __direction) {\n              this.emit('show', {\n                direction: __direction,\n                currentTarget: contentEl,\n                timestamp: Date.now(),\n                sourceEvent: null,\n              });\n              this._direction = __direction;\n            }\n          });\n        }\n      };\n      // 设置回弹效果并且已滑动宽度小于最大宽度时才有弹性效果\n      if (\n        rebounce > 0 &&\n        ((maxTranslate > 0 && this._translate < maxTranslate) ||\n          (maxTranslate < 0 && this._translate > maxTranslate))\n      ) {\n        onOnceTransitionEnd(contentEl, () => show());\n        show(rebounce * factor);\n      } else {\n        show();\n      }\n    });\n  }\n  hide() {\n    const { contentEl, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      this._translate === 0 ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) &&\n        (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      this._translate = 0;\n      transform.apply(this, [0]);\n      // 在收起动画期间，连续执行隐藏方法，会主动cancel上一次transition，保证只执行最后一次\n      onOnceTransitionEnd(contentEl, () => {\n        resolve();\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (this._direction !== 'none') {\n          this.emit('hide', {\n            direction: 'none',\n            currentTarget: contentEl,\n            timestamp: Date.now(),\n            sourceEvent: null,\n          });\n          this._direction = 'none';\n        }\n      });\n    });\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 销毁底层事件\n    if (this._agents) {\n      this._agents.destory();\n      this._agents = null;\n    }\n    this._destory = true;\n    this.leftActions = null;\n    this.rightActions = null;\n    this._confirming = null;\n    this._startPoint = null;\n    this.contentEl = null;\n    this.leftEl = null;\n    this.rightEl = null;\n    if (this.element) {\n      // 删除元素，用户可以在调用该方法之前加一个删除动画\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'both' | 'none';\n\nexport type Timing =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | `cubic-bezier(${number},${number},${number},${number})`;\n\nexport type ActionStyle = 'drawer' | 'accordion';\n\nexport type Confirm = {\n  direction: Direction;\n  index: number;\n};\n\ntype MergeActionItem = {\n  wrapper: HTMLElement; // 当前按钮包裹元素\n  element: HTMLElement; // 当前按钮元素\n  width: number; // 当前按钮的宽度\n  gap: number[]; // 元素之间的间距\n  fixedGap: boolean; //拉伸按钮时，是否固定间距\n} & IActionItem;\n\ntype MergeAction = {\n  style: ActionStyle; // 按钮展示的风格\n  disable: boolean; // 禁用按钮\n  threshold: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootFreeSize: number; // overshoot后，总宽度剩余部分\n  overshootEdgeSize: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  element: HTMLElement; // 所有按钮父元素\n  width: number; // 按钮父元素宽度，即所有按钮宽度加间距宽度\n  gap: number; // 元素之间的间距之和\n  items: MergeActionItem[]; // 按钮配置\n};\n\nexport type IActionItem = {\n  className?: string; // 按钮自定义样式\n  text?: string; // 按钮文字\n  icon?: string; // 按钮图标（会根据传入的字符串形式判断是img还是svg元素或是字体icon）\n  color?: string; // 按钮文字图标颜色（img图标除外）\n  background?: string; //按钮背景颜色\n  confirm?: {\n    // 按钮在确认的时候替代的内容样式，不传则没有确认环节，只传{}则有确认环节，但内容样式不改变\n    className?: string; // 按钮自定义样式\n    text?: string; // 按钮文字\n    icon?: string; // 按钮图标\n    color?: string; // 按钮文字图标颜色\n    background?: string; //按钮背景颜色\n  }; // 按钮确认时的信息\n  collapse?: boolean; // 按钮点击后是否收起\n  gap?: number | number[]; // 元素左右间距\n  fixedGap?: boolean; //拉伸按钮时，是否固定间距\n  data?: any; //按钮携带数据\n};\n\nexport type IActionOption = {\n  className?: string; // 按钮自定义样式\n  style?: ActionStyle; // 按钮展示的风格\n  disable?: boolean; // 禁用按钮\n  threshold?: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot?: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootEdgeSize?: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overshootFreeSize?: number; // 滑动出来的尺寸占据组件容器尺寸之后的剩余尺寸（小于这个尺寸就overshoot）\n  items?: IActionItem[]; // 按钮配置\n};\n\nexport type IOption = {\n  className?: string; // 滑动组件类名控制样式\n  container: HTMLElement | string; // 装载滑动组件的DOM容器\n  content?: HTMLElement | string; // 滑动组件的子节点\n  friction?: number; // 摩擦因子(0-1的值)\n  rebounce?: number; // 弹性尺寸\n  duration?: number; // 滑动时动画的时间（秒级）\n  timing?: Timing; // 滑动时动画的函数\n  leftActions?: IActionOption;\n  rightActions?: IActionOption;\n};\n\nexport type IEventType =\n  | 'show'\n  | 'hide'\n  | 'press'\n  | 'longPress'\n  | 'doublePress'\n  | 'buttonPress'\n  | 'buttonConfirm';\n\nexport type IEvent = {\n  currentTarget: HTMLElement;\n  timestamp: number;\n  sourceEvent: AgentEvent | null;\n  direction?: Direction; // 滑出的是哪边的按钮\n  index?: number; // 点击按钮在按钮集合里的索引\n  data?: any; // 按钮携带的数据\n};\n\nexport default SlideView;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-14 16:23:54\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-11 10:32:41\n * @Description: ******\n */\nexport default `\n.hjs-slideview {\n  position: relative;\n  overflow: hidden;\n}\n.hjs-slideview__content {\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left,\n.hjs-slideview__right,\n.hjs-slideview__actions,\n.hjs-slideview__action__wrapper {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left {\n  right: 100%;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__left .hjs-slideview__action__wrapper {\n  right: 0;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__right {\n  right: auto;\n  left: 100%;\n  justify-content: flex-start;\n}\n.hjs-slideview__right .hjs-slideview__action__wrapper {\n  right: auto;\n  left: 0;\n  justify-content: flex-start;\n}\n.hjs-slideview__action {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  max-width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  cursor: pointer;\n}\n.hjs-slideview__action__icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\n.hjs-slideview__action__text {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: center;\n  text-overflow: ellipsis;\n}\n`;\n"],"names":["touched","element","event","touch","type","point","currentTarget","sourceEvent","moused","mouse","preventDefault","getAttribute","removeAttribute","pageX","pageY","onOnceTransitionEnd","ele","transitionEnd","propertyName","ontransitionend","e","stopImmediatePropagation","target","addClass","className","split","forEach","c","classList","add","getIconType","url","match","styleId","autoPxReg","setStyle","css","Object","keys","k","key","replace","toLowerCase","val","test","String","style","setProperty","findTarget","condition","MouseEvent","parentNode","generateEl","container","tempContainer","document","querySelector","HTMLElement","Error","createElement","id","appendChild","createTextNode","head","getElementsByTagName","viewElement","leftElement","rightElement","contentElement","innerHTML","confirmStyle","item","isConfirm","wrapper","confirm","rest","text","icon","color","background","remove","removeClass","iconEl","firstElementChild","src","lastElementChild","innerText","cTransform","translate","contentEl","this","leftActions","rightActions","duration","timing","disable","transition","index","direction","factor","_translate","Math","abs","aTransform","items","delta","transformTotal","i","length","width","gap","transform","transformx","leftEl","rightEl","wTransition","tWidth","tGap","styleObj","xMove","max","len","fixedGap","transformw","transformb","_overshooting","window","requestAnimationFrame","confirmCancel","_confirming","actions","overshootChange","start","friction","getBoundingClientRect","left","_width","_offset","_isMoving","_timestamp","_startAngle","_startOffset","_startPoint","startTranslate","overshoot","overshootFreeSize","criticalTranslate","min","revokeDamping","expo","_startTranslate","move","currentPoint","currentX","currentY","currentTranslate","overshootEdgeSize","oaSize","otSize","oeSize","deltaSize","moveEdge","currentOffset","startOffset","maxOffset","timestamp","Date","now","apply","performDamping","console","log","end","startPoint","emit","data","threshold","hide","show","longPress","t","doublePress","press","buttonPress","rebounce","elWidth","eventType","collapse","options","content","setContent","setFriction","setRebounce","setDuration","setTiming","setActions","_agents","handler","destory","gesture","Gesture","done","on","touches","setAttribute","identifier","toString","started","changedTouch","changedTouches","moved","ended","mousedown","addEventListener","mousemoved","mouseupped","removeEventListener","dragstarted","capture","passive","x0","clientX","y0","clientY","dx","dy","mousedowned","click","rightclick","dblclick","agent","bind","dangerous","_destory","tempChild","then","_threshold","_setActions","_direction","parentEl","tElement","newItems","map","tItem","leftGap","rightGap","_setActionsAfterCollapse","shown","Promise","resolve","__direction","maxTranslate","rebSize","removeChild","EventTarget"],"sourceRoot":""}