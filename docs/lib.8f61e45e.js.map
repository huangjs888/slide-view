{"version":3,"file":"lib.8f61e45e.js","mappings":"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","sources":["webpack:///../src/util.ts","webpack:///../src/events/longTap.ts","webpack:///../src/transform.ts","webpack:///../src/overshoot.ts","webpack:///../src/confirm.ts","webpack:///../src/events/buttonPress.ts","webpack:///../src/events/tap.ts","webpack:///../src/events/doubleTap.ts","webpack:///../src/events/pointerStart.ts","webpack:///../src/events/pointerMove.ts","webpack:///../src/events/pointerEnd.ts","webpack:///../src/events/index.ts","webpack:///../src/css.ts","webpack:///../src/index.ts","webpack:///../src/dom.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-03 17:24:27\n * @Description: ******\n */\n\nexport function getIconType(url: string) {\n  if (url) {\n    if (\n      url.match(/\\.(jpe?g|png|gif|bmp|ico|svg|webp)$/) ||\n      url.match(/^(data:image\\/)/)\n    ) {\n      return 'img';\n    } else if (url.match(/^<svg(.+)?>.+<\\/svg>$/)) {\n      return 'span';\n    }\n  }\n  return 'i';\n}\n\nexport function findTarget(event: any, condition: (t: HTMLElement) => boolean) {\n  let target = event.target;\n  while (condition(target)) {\n    target = target.parentNode;\n  }\n  return target;\n}\n\nexport const getMarginSize = function getMarginSize(element: HTMLElement) {\n  let val = 0;\n  if (element) {\n    const computed = window.getComputedStyle(element, null);\n    if (computed) {\n      val = parseFloat(computed.marginLeft) + parseFloat(computed.marginRight);\n    } else {\n      val =\n        parseFloat(element.style.marginLeft) +\n        parseFloat(element.style.marginRight);\n    }\n    if (Number.isNaN(val)) {\n      val = 0;\n    }\n  }\n  return val;\n};\n\nexport function addClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.add(c));\n  }\n  return ele;\n}\n\nexport function removeClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.remove(c));\n  }\n  return ele;\n}\n\nconst styleId = 'hjs-slide-view-style';\nexport function cssInject(cssText: string) {\n  let style = document.querySelector(`#${styleId}`);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.appendChild(document.createTextNode(cssText));\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(\n      style,\n    );\n  }\n}\n\nconst autoPxReg =\n  /^(?:-border(?:-top|-right|-bottom|-left)?(?:-width|)|(?:-margin|-padding)?(?:-top|-right|-bottom|-left)?|(?:-min|-max)?(?:-width|-height))$/;\nexport function setStyle(\n  ele: HTMLElement,\n  css: { [key: string]: string | number | undefined },\n) {\n  if (ele) {\n    let cssText = '';\n    Object.keys(css).forEach((k: string) => {\n      const key = k.replace(/([A-Z])/g, '-$1').toLowerCase();\n      if (css[k] !== 0 && !css[k]) {\n        // 删除\n        ele.style.setProperty(key, '');\n      } else {\n        const suffix =\n          typeof css[k] === 'number' &&\n          /^[a-z]/.test(key) &&\n          autoPxReg.test(`-${key}`)\n            ? 'px'\n            : '';\n        const val = `${css[k]}${suffix}`;\n        cssText += `${key}:${val};`;\n      }\n    });\n    if (cssText) {\n      ele.style.cssText += cssText;\n    }\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:50:35\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function longTap(this: SlideView, e: GEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && t !== contentEl,\n  );\n  // 触发内容双按压事件\n  if (contentEl && target === contentEl) {\n    // 收起时候则触发长按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('longPress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:19:55\n * @Description: ******\n */\n\nimport SlideView, { type MergeAction, type Confirm } from './index';\nimport { setStyle } from './util';\n\nexport const cTransform = function cTransform(\n  this: SlideView,\n  confirm: Confirm,\n  translate: number = 0,\n) {\n  const { contentEl, leftActions, rightActions, duration, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const { index, direction } = confirm;\n  // 这里注意：在调用hideButton隐藏按钮之后再执行该恢复方法，_translate等于0了，所以无需再判断\n  const factor =\n    this._translate === 0 ? 0 : this._translate / Math.abs(this._translate);\n  const aTransform = ({ style, items }: MergeAction) => {\n    let delta = 0;\n    if (style === 'drawer') {\n      delta = -this._translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    for (let i = items.length - 1; i >= 0; i--) {\n      const { wrapper, width, gap } = items[i];\n      if (items.length === 1) {\n        // 如果是仅有一个按钮，确认的时候设置2倍变化\n        setStyle(contentEl, {\n          transform: `translate3d(${\n            translate !== 0 ? translate : this._translate\n          }px, 0, 0)`,\n          transition,\n        });\n      }\n      if (i === index) {\n        let transformx = 0;\n        if (translate !== 0) {\n          transformx = translate;\n        } else {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      } else if (i > index) {\n        let transformx = 0;\n        if (translate === 0) {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        // 大于index的一定都是压在上面的，压在上面的需要收起，而小于index压在下面的不需要变化\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      }\n      transformTotal += width + gap[0] + gap[1];\n    }\n  };\n  if (direction === 'left' && leftActions && !leftActions.disable) {\n    aTransform(leftActions);\n  }\n  if (direction === 'right' && rightActions && !rightActions.disable) {\n    aTransform(rightActions);\n  }\n};\n\nexport const transform = function transform(\n  this: SlideView,\n  translate: number,\n  duration: number = this.duration,\n) {\n  const { leftEl, rightEl, contentEl, leftActions, rightActions, timing } =\n    this;\n  if (\n    !leftEl ||\n    !rightEl ||\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  let factor = 0;\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const wTransition =\n    duration <= 0\n      ? ''\n      : `width ${duration}s ${timing} 0s, transform ${duration}s ${timing} 0s`;\n  const aTransform = ({\n    style,\n    items,\n    element,\n    width: tWidth,\n    gap: tGap,\n  }: MergeAction) => {\n    let styleObj = {};\n    let xMove = translate;\n    let delta = 0;\n    if (style === 'drawer') {\n      setStyle(element, {\n        width: Math.max(Math.abs(translate), tWidth),\n        transform: `translate3d(${translate}px, 0, 0)`,\n        transition: wTransition,\n      });\n      xMove = factor * Math.max(tWidth, Math.abs(translate));\n      delta = -translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    const len = items.length - 1;\n    for (let i = len; i >= 0; i--) {\n      const { wrapper, width, gap, fixedGap } = items[i];\n      // 当前按钮需要滑出的占比距离\n      const transformw = (width / (tWidth - tGap)) * (xMove - factor * tGap);\n      const transformb = transformw + factor * gap[1];\n      // 当前按钮滑出距离应该是占比距离+前面已有按钮的占比距离\n      const transformx = transformb + transformTotal;\n      if (fixedGap && wrapper.style.width !== '100%') {\n        // 只有width不为100%时才设置具体宽度，因为overshoot的时候需要设置100%\n        styleObj = {\n          width: Math.max(Math.abs(transformw), width),\n          transition: wTransition,\n        };\n      }\n      // 左边或右边的最后一个按钮\n      setStyle(wrapper, {\n        transform: `translate3d(${\n          (i === len && this._overshooting ? translate : transformx) + delta\n        }px, 0, 0)`,\n        transition,\n        ...styleObj,\n      });\n      // 累计已滑出按钮的占比距离\n      transformTotal += transformb + factor * gap[0];\n    }\n  };\n  // move事件发生，放入下一帧执行（move的时候使用这个节能而且不抖动）\n  window.requestAnimationFrame(() => {\n    setStyle(contentEl, {\n      transform: `translate3d(${translate}px, 0, 0)`,\n      transition,\n    });\n    // 这里是左右都进行变换，还是说根据translate的正负来判断只变换某一边的呢（因为另一边处于隐藏状态无需变换耗能）？\n    // 答案是都要进行变换，因为存在一种情况，即滑动太快，left的translate还未走到0（没有完全收起），下一把就right了。\n    if (leftActions && !leftActions.disable) {\n      factor = 1;\n      aTransform(leftActions);\n    }\n    if (rightActions && !rightActions.disable) {\n      factor = -1;\n      aTransform(rightActions);\n    }\n  });\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:08:44\n * @Description: ******\n */\n\nimport SlideView, { type MergeAction } from './index';\nimport { setStyle } from './util';\n\nexport const overshootChange = function (\n  this: SlideView,\n  actions: MergeAction | null,\n) {\n  if (actions && !actions.disable) {\n    const item = actions.items[actions.items.length - 1];\n    setStyle(item.wrapper, {\n      width: this._overshooting ? '100%' : '',\n    });\n  }\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:29:15\n * @Description: ******\n */\n\nimport SlideView, { type MergeActionItem } from './index';\nimport { setStyle, addClass, removeClass, getIconType } from './util';\n\nexport const confirmStyle = function (\n  item: MergeActionItem,\n  isConfirm: boolean = false,\n) {\n  const {\n    wrapper,\n    element,\n    confirm = {}, // isConfirm为true,confirm必然存在\n    ...rest\n  } = item;\n  let { text, icon, color, background, className } = rest;\n  if (isConfirm) {\n    // 如果icon不存在，则不存在该确认，如果icon存在，则取确认icon，若确认icon不存在，则仍然取icon\n    icon = icon && (confirm.icon || icon);\n    text = text && (confirm.text || text);\n    color = color && (confirm.color || color);\n    background = background && (confirm.background || background);\n    className = className && (confirm.className || className);\n  }\n  setStyle(wrapper, {\n    background: background || '',\n    color: color || '',\n  });\n  addClass(\n    removeClass(\n      element,\n      isConfirm\n        ? rest.className || ''\n        : confirm.className || rest.className || '',\n    ),\n    className || '',\n  );\n  if (icon) {\n    const iconEl = element.firstElementChild as HTMLElement;\n    const type = getIconType(icon);\n    if (type === 'img') {\n      (iconEl as HTMLImageElement).src = icon;\n    } else if (type === 'i') {\n      iconEl.className = icon;\n    } else {\n      iconEl.innerHTML = icon;\n    }\n  }\n  if (text) {\n    const textEl = element.lastElementChild as HTMLElement;\n    textEl.innerText = text;\n  }\n};\n\nexport const confirmCancel = function (this: SlideView) {\n  // 如果当前处于按钮确认状态，隐藏之前需要先取消\n  if (this._confirming) {\n    // 因为hide的时候会进行变换，所以不需要再cTransform\n    const { index, direction } = this._confirming;\n    const actions =\n      direction === 'left'\n        ? this.leftActions\n        : direction === 'right'\n        ? this.rightActions\n        : null;\n    if (actions && !actions.disable) {\n      const item = actions.items[index];\n      setStyle(item.element, {\n        width: '',\n      });\n      confirmStyle(item);\n    }\n    this._confirming = null;\n  }\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:10:02\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { onOnceTransitionEnd } from './index';\nimport SlideView, {\n  type Direction,\n  type MergeAction,\n  type Confirm,\n  type IType,\n} from '../index';\nimport { transform, cTransform } from '../transform';\nimport { overshootChange } from '../overshoot';\nimport { confirmStyle } from '../confirm';\nimport { setStyle, findTarget } from '../util';\n\nexport default function buttonPress(\n  this: SlideView,\n  event: GEvent,\n  direction: Direction,\n) {\n  const { element, leftActions, rightActions, rebounce } = this;\n  if (\n    this._translate === 0 ||\n    !element ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { sourceEvent, currentTarget } = event;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && !t.getAttribute('data-index'),\n  );\n  const index = +(target.getAttribute('data-index') || -1);\n  const actions: MergeAction | null =\n    direction === 'left' ? leftActions : rightActions;\n  if (index < 0 || !actions || actions.disable) {\n    return;\n  }\n  const elWidth = this._width;\n  const factor = this._translate / Math.abs(this._translate);\n  const confirm: Confirm = { index, direction };\n  const item = actions.items[index];\n  const overshoot = index === actions.items.length - 1 && actions.overshoot;\n  let eventType: IType = 'buttonPress';\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    if (overshoot) {\n      confirmStyle(item);\n      this._confirming = null;\n    } else {\n      // 点击按钮后隐藏按钮（隐藏按钮里已处理取消确认情况）\n      if (item.collapse) {\n        this.hide();\n      } else {\n        // 取消确认\n        setStyle(item.element, {\n          width: '',\n        });\n        cTransform.apply(this, [confirm]);\n        confirmStyle(item);\n        this._confirming = null;\n      }\n    }\n  } else {\n    if (overshoot) {\n      if (!this._overshooting) {\n        this._overshooting = true;\n        const translate = factor * elWidth;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        overshootChange.apply(this, [actions]);\n      }\n      if (item.confirm) {\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      }\n    } else {\n      if (item.confirm) {\n        // 如果是仅有一个按钮，确认的时候宽度设置2倍变化，但是不能超过最大宽度\n        let translate = this._translate;\n        if (actions.items.length === 1) {\n          translate = Math.min(Math.abs(2 * translate), elWidth) * factor;\n        }\n        // 设置回弹效果，第一个按钮没有\n        if (\n          rebounce > 0 &&\n          index !== 0 /*  &&\n          parseFloat(window.getComputedStyle(item.wrapper, null).width) ===\n            elWidth */\n        ) {\n          onOnceTransitionEnd(item.wrapper, () => {\n            // 该事件执行时确保当前还处于确认状态，否则不能再执行\n            if (\n              this._confirming &&\n              this._confirming.index === confirm.index &&\n              this._confirming.direction === confirm.direction\n            ) {\n              cTransform.apply(this, [confirm, translate]);\n            }\n          });\n          cTransform.apply(this, [\n            confirm,\n            translate + (rebounce * translate) / Math.abs(translate),\n          ]);\n        } else {\n          cTransform.apply(this, [confirm, translate]);\n        }\n        setStyle(item.wrapper, {\n          width: '',\n        });\n        setStyle(item.element, {\n          width: Math.abs(translate),\n        });\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      } else {\n        // 无需确认的点击（如果collapse，就点击后隐藏按钮，否则不做任何处理）\n        if (item.collapse) {\n          this.hide();\n        }\n      }\n    }\n  }\n  this.emit(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target,\n    timestamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:13:31\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport buttonPress from './buttonPress';\nimport SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function tap(this: SlideView, e: GEvent) {\n  const { contentEl, leftEl, rightEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) =>\n      t !== currentTarget && t !== contentEl && t !== leftEl && t !== rightEl,\n  );\n  // 触发内容元素按压事件\n  if (contentEl && target === contentEl) {\n    // 没有使用this._direction判断，是因为该值变化是要动画结束后变化，this._translate变化是动画执行前\n    // 使用this._translate判断可以保证，收起动画时点击可执行，展开动画执行时点击不可执行，this._direction正好相反\n    // 收起时候则触发按压事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('press', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n  // 触发左边按钮按压事件\n  else if (target === leftEl) {\n    buttonPress.apply(this, [e, 'left']);\n  }\n  // 触发右边按钮按压事件\n  else if (target === rightEl) {\n    buttonPress.apply(this, [e, 'right']);\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:50:29\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function doubleTap(this: SlideView, e: GEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && t !== contentEl,\n  );\n  // 触发内容双按压事件\n  if (contentEl && target === contentEl) {\n    // 收起时候则触发双按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('doublePress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:16:50\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { revokeDamping } from '@huangjs888/damping';\nimport SlideView from '../index';\n\nexport default function pointerStart(this: SlideView, e: GEvent) {\n  const { pointers, currentTarget } = e;\n  // data-identifier存在，表示是已经有指点放上去了\n  if (currentTarget.getAttribute('data-identifier')) {\n    return;\n  }\n  // 设置第一个为主手指\n  const pointer = pointers[0];\n  currentTarget.setAttribute('data-identifier', `${pointer.identifier}`);\n  const point = pointer.current;\n  const { leftActions, rightActions, friction } = this;\n  if (\n    (!leftActions || leftActions.disable) &&\n    (!rightActions || rightActions.disable)\n  ) {\n    return;\n  }\n  this._isMoving = true;\n  this._timestamp = 0;\n  this._startAngle = 0;\n  // 初始偏移量\n  this._startOffset = this._translate;\n  // 初始点\n  this._startPoint = point;\n  // 计算初始taranslate\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  let startTranslate = 0;\n  if (actions && !actions.disable) {\n    const { overshoot, overshootFreeSize, width: tWidth } = actions;\n    // 弹性尺寸临界点\n    const criticalTranslate =\n      ((overshoot\n        ? Math.min(\n            this._width,\n            Math.max(this._width - overshootFreeSize, tWidth),\n          )\n        : tWidth) *\n        this._translate) /\n      Math.abs(this._translate);\n    if (Math.abs(this._translate) <= Math.abs(criticalTranslate)) {\n      startTranslate = this._translate;\n    } else {\n      // 恢复_translate的弹性尺寸部分\n      startTranslate =\n        revokeDamping(this._translate - criticalTranslate, {\n          expo: friction,\n        }) + criticalTranslate;\n    }\n  }\n  this._startTranslate = startTranslate;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:37:44\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { performDamping } from '@huangjs888/damping';\nimport SlideView from '../index';\nimport { transform } from '../transform';\nimport { overshootChange } from '../overshoot';\nimport { confirmStyle, confirmCancel } from '../confirm';\n\nexport default function pointerMove(this: SlideView, e: GEvent) {\n  const { pointers, currentTarget } = e;\n  // 找出变化（移动）的手指\n  let pointer = null;\n  for (let i = 0; i < pointers.length; i++) {\n    const p = pointers[i];\n    // 当前这个是主手指，并且这个手指在变化（移动）\n    if (\n      p.changed &&\n      `${p.identifier}` === currentTarget.getAttribute('data-identifier')\n    ) {\n      pointer = p;\n      break;\n    }\n  }\n  // 没找到主手指\n  if (!pointer) {\n    return;\n  }\n  const currentPoint = pointer.current;\n  const { leftActions, rightActions, friction } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const currentX = currentPoint[0] - this._startPoint[0];\n  const currentY = currentPoint[1] - this._startPoint[1];\n  if (this._startAngle === 0) {\n    // 只在第一次移动事件的时候进行计算\n    // 根据xy的长短来判断移动角度与45度的关系\n    this._startAngle = Math.abs(currentX) - Math.abs(currentY) <= 0 ? -1 : 1;\n  }\n  // 只有角度小于45度(_startAngle为1)，才会开始移动\n  // 只会在第一次触发的时候判断，后续如果移动过程中角度变化，则不会判断，会继续往下走\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._startAngle !== 1 || Math.abs(currentX) <= 3) {\n    return;\n  }\n  // 滑动距离\n  let translate = 0;\n  let duration = 0;\n  let currentTranslate = this._startTranslate + currentX;\n  const actions =\n    currentTranslate > 0\n      ? leftActions\n      : currentTranslate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    const {\n      overshoot,\n      overshootEdgeSize,\n      overshootFreeSize,\n      width: tWidth,\n    } = actions;\n    const factor = currentTranslate / Math.abs(currentTranslate);\n    const oaSize = factor * tWidth;\n    const otSize =\n      factor *\n      Math.min(this._width, Math.max(this._width - overshootFreeSize, tWidth));\n    const oeSize =\n      factor * Math.min(this._width * 0.5, Math.max(0, overshootEdgeSize));\n    // 可以overshoot的情况处理\n    if (overshoot) {\n      if (Math.abs(currentTranslate) < Math.abs(otSize)) {\n        // 如果手指从容器一半之外开始移动，只要手指移动到接近边缘，就可以overshoot\n        let deltaSize = 0;\n        let moveEdge = false;\n        const currentOffset = currentPoint[0] - this._offset;\n        const startOffset =\n          this._startPoint[0] - this._offset - this._startOffset;\n        const maxOffset = this._width * 0.5;\n        if (currentTranslate < 0) {\n          deltaSize = currentOffset - Math.abs(oeSize);\n          moveEdge = startOffset > maxOffset && deltaSize < 0;\n        } else {\n          deltaSize = currentOffset - (this._width - Math.abs(oeSize));\n          moveEdge = startOffset < maxOffset && deltaSize > 0;\n        }\n        if (moveEdge) {\n          currentTranslate = otSize + deltaSize;\n          // 此时要重置初始点和初始translate\n          this._startPoint = currentPoint;\n          this._startTranslate = currentTranslate;\n        }\n      }\n      const timestamp = Date.now();\n      // currentTranslate和otSize一定是同正或同负，直接比较数值大小，即currentTranslate超出otSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(otSize)) {\n        if (!this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = true;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item, true);\n            this._confirming = {\n              index,\n              direction: factor > 0 ? 'left' : 'right',\n            };\n          }\n        }\n        translate =\n          performDamping(currentTranslate - otSize, {\n            expo: friction,\n          }) + otSize;\n        duration = Math.max(\n          0,\n          this.duration - (timestamp - this._timestamp) / 1000,\n        );\n      } else {\n        if (this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = false;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item);\n            this._confirming = null;\n          }\n        }\n        translate = currentTranslate;\n        duration = Math.max(\n          0,\n          this.duration / 2 - (timestamp - this._timestamp) / 1000,\n        );\n      }\n    } else {\n      // 不能overshoot的情况，按钮显示超出总宽度，则进行弹性尺寸\n      // currentTranslate和oaSize一定是同正或同负，直接比较数值大小，即currentTranslate超出oaSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(oaSize)) {\n        translate =\n          performDamping(currentTranslate - oaSize, {\n            expo: friction,\n          }) + oaSize;\n      } else {\n        translate = currentTranslate;\n      }\n    }\n    translate = Math.min(this._width, Math.max(-this._width, translate));\n  } else {\n    // 如果不存在或按钮被禁用，则不断更新初始点和初始translate\n    this._startPoint = currentPoint;\n    this._startTranslate = 0;\n    translate = 0;\n  }\n  this._translate = translate;\n  transform.apply(this, [translate, duration]);\n  if (!this._overshooting) {\n    confirmCancel.apply(this, []);\n  }\n  return;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:17:58\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport SlideView from '../index';\nimport { transform } from '../transform';\n\nexport default function pointerEnd(this: SlideView, e: GEvent) {\n  const { leavePointers, currentTarget } = e;\n  // 从抬起的手指中查找\n  let pointer = null;\n  for (let i = 0; i < leavePointers.length; i++) {\n    const p = leavePointers[i];\n    if (`${p.identifier}` === currentTarget.getAttribute('data-identifier')) {\n      pointer = p;\n      break;\n    }\n  }\n  // 表示抬起的手指不是主手指\n  if (!pointer) {\n    return;\n  }\n  currentTarget.setAttribute('data-identifier', '');\n  const currentPoint = pointer.current;\n  const { leftActions, rightActions } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    this._startAngle !== 1 ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  this._isMoving = false;\n  const startPoint = this._startPoint;\n  const delta = currentPoint[0] - startPoint[0];\n  // 滑动距离为0（表示本身就是隐藏状态）或没有任何滑动（只是点了一下）不做任何操作\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._translate === 0 || Math.abs(delta) <= 3) {\n    return;\n  }\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    // 进行完全覆盖滑出事件\n    if (this._overshooting) {\n      const index = actions.items.length - 1;\n      const item = actions.items[index];\n      const translate =\n        (this._translate * this._width) / Math.abs(this._translate);\n      this._translate = translate;\n      transform.apply(this, [translate]);\n      this.emit(item.confirm ? 'buttonConfirm' : 'buttonPress', {\n        index,\n        data: item.data,\n        currentTarget: item.wrapper,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n      return;\n    }\n    // 展开时，滑出的距离不足滑出阈值则不展开\n    // 微信是只要往反方向滑就关闭，并且滑出之后，如果继续有弹性滑出，弹性滑出不足阈值也会关闭\n    /* if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(delta) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    } */\n    // 苹果是只有反方向滑到阈值之内才会关闭，其他不关闭\n    /* if (Math.abs(this._translate) < actions.threshold) {\n      this.hide();\n      return;\n    } */\n    // 只要往反方向滑就关闭，其他不关闭\n    if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(this._translate) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    }\n  }\n  // 其它情况均为展示按钮\n  this.show(this._translate > 0 ? 'left' : 'right');\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-03 14:42:44\n * @Description: ******\n */\n\nimport Gesture from '@huangjs888/gesture';\nimport longTap from './longTap';\nimport tap from './tap';\nimport doubleTap from './doubleTap';\nimport pointerStart from './pointerStart';\nimport pointerMove from './pointerMove';\nimport pointerEnd from './pointerEnd';\nimport SlideView from '../index';\n\nexport default function bindGesture(this: SlideView, element: HTMLElement) {\n  // 绑定手势\n  const gesture = new Gesture(element);\n  gesture.on('pointerStart', pointerStart.bind(this));\n  gesture.on('pointerMove', pointerMove.bind(this));\n  gesture.on('pointerEnd', pointerEnd.bind(this));\n  gesture.on('tap', tap.bind(this));\n  gesture.on('longTap', longTap.bind(this));\n  gesture.on('doubleTap', doubleTap.bind(this));\n  return gesture;\n}\n\n/*\n  1、如果在一个事件循环内多次设置transition，只会执行性最后一次，前面的会忽略。如果在多次串联（不同的事件循环内）设置transition时，如果属性和值都无任何变化，则后续的设置会忽略，如果不一样，除了第一次，后续的transition会保留上次动画最后一帧（下次动画也从该帧开始）的结果与新设置的动画值比较，相同则不执行动画，不同则执行动画（且从），而不是每次动画都与初始节点比较，初始节点执行。\n\n  2、delay这个参数注意：正值，等待delay秒之后，从初始开始执行动画，到结束，花费duration时间。负值，无等待立马执行，从中间某节点开始执行动画，到结束位置，花费duration去掉delay负数的时间。其中中间某节点就是如果按照正常执行时用掉delay时间所应该到达的节点处。\n\n  3、如果在一个固定时间内需要不停的改变transition属性值，直到时间用完变成无transition，此时可以在每次动画时算出与第一次动画开始时的时间差，然后用这个固定时间减去时间差，设置在当前动画的duration上，直到为0时去掉transition即可（这样做动画会连贯丝滑）。\n\n  4、一些属性可以设置百分比或者不设置值（'','none','auto'）等，而不是具体的数值的时候，此时设置transition，并不会发生动画（比如宽度从auto到100px是瞬间到达），可以在设置transition之前先设一个具体值，比如0或1，但是，这里注意，需要把设置transition的语句放在下一个事件循环（比如setTimeout）内，但最好的是放在requestAnimationFrame，或者在语句之前调用一次布局信息（比如获取宽度值），其实就是强迫浏览器重绘：浏览器通常还会在两种情况下会产生样式变更事件，一是满足屏幕刷新频率（requestAnimationFrame），二是当 JS 脚本需要获取最新的样式布局信息时。这种情况也适用于对隐藏的元素进行动画，动画后再隐藏，可以监听transitionend，在事件内隐藏。\n  https://blog.csdn.net/weixin_45189747/article/details/97790805\n  http://aihongxin.com/6652.html\n\n  5、 实现串联动画：使用animation，定义好需要的动画，想怎么玩怎么玩，缺点是无法动态设置值，如果需要动态设置值，只能用js动态添加、修改css3的@keyframes。使用transition，监听transitionend，在事件内再执行新动画，缺点是动画复杂，事件串联复杂，并且要做好判断，绑定、解绑，防止事件重复执行，或者无法串联执行，另外cancel后不会再执行。使用transitionend注意以下几点：\n  https://zhuanlan.zhihu.com/p/481680437\n\n  1、如果监听元素有多个属性都有transition，transitionend会在多个属性完成后多次触发。\n  解决方法：通过注册时提供实际监控的属性值与事件触发时e.propertyName比较来控制执行哪个。\n\n  2、如果监听元素的children也有transition，transitionend也会在children的transition完成后处触发。\n  解决方法：可以通过判断e.target === element或e.currentTarget来判断是不是当前监听元素。\n\n  3、快速连续触发设置transition事件，可以在动画未执行完触发的transitioncancel事件内解绑上一次的transitionend，保证只有当前这次的transitionend可运行，同时当前transitionend执行后也解绑当前的保证只会执行一次。\n  但是存在一种概率较低的情况：过渡动画刚执行完毕（即不会触发transitioncancel），本次transitionend还没来得及触发执行（因为transitionend触发和最后一帧动画结束并不是同一事件循环），此时设置transition的方法抢先执行进来设置过渡动画，这个时候上一次的transitionend事件是无法被清掉的。\n  解决方法：在每次注册transitionend时把之前已绑定transitionend事件全部清掉，同时当前transitionend执行后解绑。可以通过元素属性事件注册，而不使用addEventListener，即element.ontransitionend = ()=>{}，因为这种注册方式，永远都是替换掉上一次的事件，只有当前这一个。\n*/\nexport function onOnceTransitionEnd(\n  ele: HTMLElement,\n  transitionEnd: (e: TransitionEvent) => void,\n  propertyName: string = 'transform',\n) {\n  if (ele) {\n    ele.ontransitionend = (e: TransitionEvent) => {\n      // 阻止冒泡及后续事件触发\n      e.stopImmediatePropagation();\n      // 只有触发事件的目标元素与绑定的目标元素一致，同时触发事件的属性与需要的属性相同，才会执行事件并解绑\n      if (e.target === ele && e.propertyName === propertyName) {\n        ele.ontransitionend = null;\n        transitionEnd(e);\n      }\n    };\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-14 16:23:54\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-11 10:32:41\n * @Description: ******\n */\nexport default `\n.hjs-slideview {\n  position: relative;\n  overflow: hidden;\n}\n.hjs-slideview__content {\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left,\n.hjs-slideview__right,\n.hjs-slideview__actions,\n.hjs-slideview__action__wrapper {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left {\n  right: 100%;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__left .hjs-slideview__action__wrapper {\n  right: 0;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__right {\n  right: auto;\n  left: 100%;\n  justify-content: flex-start;\n}\n.hjs-slideview__right .hjs-slideview__action__wrapper {\n  right: auto;\n  left: 0;\n  justify-content: flex-start;\n}\n.hjs-slideview__action {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  max-width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  cursor: pointer;\n}\n.hjs-slideview__action__icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\n.hjs-slideview__action__text {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: center;\n  text-overflow: ellipsis;\n}\n`;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:48:37\n * @Description: ******\n */\nimport Gesture, { EventTarget, GEvent } from '@huangjs888/gesture';\nimport bindGesture, { onOnceTransitionEnd } from './events';\nimport generateEl from './dom';\nimport { transform } from './transform';\nimport { overshootChange } from './overshoot';\nimport { confirmStyle, confirmCancel } from './confirm';\nimport { getIconType, addClass } from './util';\n\nclass SlideView extends EventTarget<IType, IEvent> {\n  element: HTMLElement | null = null; // 滑动视图元素\n  contentEl: HTMLElement | null = null; // 内容元素\n  leftEl: HTMLElement | null = null; // 左按钮元素\n  rightEl: HTMLElement | null = null; // 右按钮元素\n  leftActions: MergeAction | null = null; // 按钮集合\n  rightActions: MergeAction | null = null; // 按钮集合\n  friction: number = 0.5; // 摩擦因子(0-1的值)\n  rebounce: number = 12; // 弹性尺寸\n  duration: number = 0.4; // 按钮滑出动画时间（秒级）\n  timing: Timing = 'ease'; // 滑动时动画的函数\n  _destory: boolean = false; // 是否销毁\n  _direction: Direction = 'none'; // 当前展示的是哪个方向按钮\n  _confirming: Confirm | null = null; // 当前正在确认的按钮\n  _overshooting: boolean = false; // 当前是否处于overshoot状态\n  _translate: number = 0; // 元素当前位移值\n  _width: number = 0; // 视图宽度\n  _offset: number = 0; // 手指放上后滑动视图元素距离屏幕左边距离即offsetLeft\n  _startOffset: number = 0; // 手指放上那一刻，translate值\n  _startTranslate: number = 0; // 手指放上那一刻，translate未经rebounceSize的值\n  _startPoint: number[] | null = null; // 手指放上后初始点\n  _startAngle: number = 0; // 移动时的角度与45度的关系\n  _timestamp: number = 0; // 移动时的时间戳\n  _isMoving: boolean = false; // 是否正在滑动\n  _gesture: Gesture | null = null;\n  _removeResize: (() => void) | null = null;\n  constructor(options: IOption) {\n    super();\n    const {\n      className,\n      container,\n      content,\n      friction,\n      rebounce,\n      duration,\n      timing,\n      leftActions,\n      rightActions,\n    } = options;\n    const [element, contentEl, leftEl, rightEl] = generateEl(\n      container,\n      className,\n    );\n    this._gesture = bindGesture.apply(this, [element]);\n    this.element = element;\n    this.contentEl = contentEl;\n    this.leftEl = leftEl;\n    this.rightEl = rightEl;\n    this.setContent(content);\n    this.setFriction(friction);\n    this.setRebounce(rebounce);\n    this.setDuration(duration);\n    this.setTiming(timing);\n    this.setActions(leftActions, 'left');\n    this.setActions(rightActions, 'right');\n    // 浏览器窗口变化重置\n    const resize = () => {\n      const { width, left } = element.getBoundingClientRect();\n      this._width = width;\n      this._offset = left;\n    };\n    window.addEventListener('resize', resize);\n    this._removeResize = () => {\n      window.removeEventListener('resize', resize);\n    };\n    resize();\n  }\n  setContent(content: HTMLElement | string = '', dangerous?: boolean) {\n    if (this._destory || !this.contentEl) {\n      return;\n    }\n    // 注意XSS注入\n    if (dangerous && typeof content === 'string') {\n      this.contentEl.innerHTML = content;\n      return;\n    }\n    try {\n      let tempChild;\n      if (typeof content === 'string') {\n        tempChild = document.querySelector(content);\n      } else {\n        tempChild = content;\n      }\n      if (tempChild) {\n        this.contentEl.innerHTML = '';\n        this.contentEl.appendChild(tempChild);\n      }\n    } catch (e) {}\n  }\n  setFriction(friction: number = 0.5) {\n    if (this._destory) {\n      return;\n    }\n    // friction: 不传为默认值0.5，传小于0的都为0，大于1的都为1，传非数字，则属于无效设置\n    if (typeof friction === 'number') {\n      this.friction = Math.min(1, Math.max(0, friction));\n    }\n  }\n  setRebounce(rebounce: number = 12) {\n    if (this._destory) {\n      return;\n    }\n    // rebounce: 不传为默认值12，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof rebounce === 'number') {\n      this.rebounce = Math.max(0, rebounce);\n    }\n  }\n  setDuration(duration: number = 0.4) {\n    if (this._destory) {\n      return;\n    }\n    // duration: 不传为默认值0.4，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof duration === 'number') {\n      this.duration = Math.max(0, duration);\n    }\n  }\n  setTiming(timing: Timing = 'ease') {\n    if (this._destory) {\n      return;\n    }\n    // timing: 不传为默认值ease\n    this.timing = timing;\n  }\n  setDisable(disable: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // disable: 不传为默认值true，传非布尔，则无效设置\n    if (typeof disable === 'boolean') {\n      this.hide().then(() => {\n        // direction传其它，则属于无效设置\n        if (\n          this.leftActions &&\n          (direction === 'both' || direction === 'left')\n        ) {\n          this.leftActions.disable = disable;\n        }\n        if (\n          this.rightActions &&\n          (direction === 'both' || direction === 'right')\n        ) {\n          this.rightActions.disable = disable;\n        }\n      });\n    }\n  }\n  setOvershoot(overshoot: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值true，传非布尔，则无效设置\n    if (typeof overshoot === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.overshoot = overshoot;\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.overshoot = overshoot;\n      }\n    }\n  }\n  setThreshold(threshold: number = 40, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值40，传小于0的都为0，传非数字，则无效设置\n    if (typeof threshold === 'number') {\n      const _threshold = Math.max(0, threshold);\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.threshold = Math.min(\n          _threshold,\n          this.leftActions.width,\n        );\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.threshold = Math.min(\n          _threshold,\n          this.rightActions.width,\n        );\n      }\n    }\n  }\n  setActions(actions: IActionOption = {}, direction: Direction = 'both') {\n    if (this._destory || direction === 'none') {\n      return;\n    }\n    // actions: 不传为默认值{}，不传，传其它，只要没有items的，都认为是删除按钮\n    const _setActions = (_direction: 'left' | 'right') => {\n      const parentEl = this[`${_direction}El`];\n      if (!parentEl) {\n        return;\n      }\n      parentEl.innerHTML = '';\n      this[`${_direction}Actions`] = null;\n      if (actions.items && actions.items.length > 0) {\n        const {\n          className,\n          style = 'accordion',\n          disable = false,\n          overshoot = false,\n          overshootEdgeSize = 80,\n          overshootFreeSize = 30,\n          threshold = 40,\n          items,\n        } = actions;\n        const tElement = addClass(\n          document.createElement('div'),\n          `hjs-slideview__actions ${className || ''}`,\n        );\n        parentEl.appendChild(tElement);\n        let tWidth = 0;\n        let tGap = 0;\n        let newItems = items.map((item, index) => {\n          const { gap = 0, fixedGap = false, text, icon } = item;\n          const element = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action',\n          );\n          element.setAttribute('data-index', String(index));\n          if (icon) {\n            element.appendChild(\n              addClass(\n                document.createElement(getIconType(icon)),\n                'hjs-slideview__action__icon',\n              ),\n            );\n          }\n          if (text) {\n            element.appendChild(\n              addClass(\n                document.createElement('span'),\n                'hjs-slideview__action__text',\n              ),\n            );\n          }\n          const wrapper = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action__wrapper',\n          );\n          wrapper.appendChild(element);\n          tElement.appendChild(wrapper);\n          const tItem: MergeActionItem = {\n            ...item,\n            wrapper,\n            element,\n            width: 0,\n            gap: [0, 0],\n            fixedGap,\n          };\n          // 设置非确认时的样式和内容\n          confirmStyle(tItem);\n          const { width } = element.getBoundingClientRect();\n          let leftGap = 0;\n          let rightGap = 0;\n          if (typeof gap === 'number') {\n            leftGap = gap;\n            rightGap = gap;\n          } else {\n            [leftGap, rightGap] = gap;\n          }\n          leftGap = Math.min(width, Math.max(leftGap, 0));\n          rightGap = Math.min(width, Math.max(rightGap, 0));\n          tWidth += width + leftGap + rightGap;\n          tGap += leftGap + rightGap;\n          return {\n            ...tItem,\n            gap: [leftGap, rightGap],\n            fixedGap: leftGap === 0 && rightGap === 0 ? false : fixedGap, // 左右gap都为0的情况，gudinggap无意义\n            width,\n          };\n        });\n        this[`${_direction}Actions`] = {\n          style,\n          disable,\n          overshoot,\n          overshootFreeSize,\n          overshootEdgeSize,\n          threshold: Math.min(tWidth, Math.max(threshold, 0)),\n          element: tElement,\n          width: tWidth,\n          gap: tGap,\n          items: newItems,\n        };\n      }\n    };\n    const _setActionsAfterCollapse = (_direction: 'left' | 'right') => {\n      // 重新设置按钮时应该先收起\n      this.hide().then(() => {\n        _setActions(_direction);\n        this.show(_direction);\n      });\n    };\n    const shown =\n      this._translate > 0 ? 'left' : this._translate < 0 ? 'right' : 'none';\n    if (direction === 'both') {\n      if (shown !== 'none') {\n        _setActionsAfterCollapse(shown);\n      }\n      if (shown !== 'left') {\n        _setActions('left');\n      }\n      if (shown !== 'right') {\n        _setActions('right');\n      }\n    } else {\n      if (shown === direction) {\n        _setActionsAfterCollapse(direction);\n      } else {\n        _setActions(direction);\n      }\n    }\n  }\n  toggle(direction: Direction = 'right') {\n    return this._translate === 0 ? this.show(direction) : this.hide();\n  }\n  show(direction: Direction = 'right') {\n    const { contentEl, rebounce, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) &&\n        (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      let __direction = direction;\n      if (!leftActions || leftActions.disable) {\n        __direction = 'right';\n      }\n      if (!rightActions || rightActions.disable) {\n        __direction = 'left';\n      }\n      const actions = __direction === 'left' ? leftActions : rightActions;\n      const factor = __direction === 'left' ? 1 : -1;\n      const maxTranslate = !actions ? 0 : actions.width * factor;\n      if (this._translate === maxTranslate) {\n        resolve();\n        return;\n      }\n      const show = (rebSize: number = 0) => {\n        const translate = maxTranslate + rebSize;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (!rebSize) {\n          onOnceTransitionEnd(contentEl, () => {\n            resolve();\n            if (this._direction !== __direction) {\n              this.emit('show', {\n                direction: __direction,\n                currentTarget: contentEl,\n                timestamp: Date.now(),\n                sourceEvent: null,\n              });\n              this._direction = __direction;\n            }\n          });\n        }\n      };\n      // 设置回弹效果并且已滑动宽度小于最大宽度时才有弹性效果\n      if (\n        rebounce > 0 &&\n        ((maxTranslate > 0 && this._translate < maxTranslate) ||\n          (maxTranslate < 0 && this._translate > maxTranslate))\n      ) {\n        onOnceTransitionEnd(contentEl, () => show());\n        show(rebounce * factor);\n      } else {\n        show();\n      }\n    });\n  }\n  hide() {\n    const { contentEl, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      this._translate === 0 ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) &&\n        (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      this._translate = 0;\n      transform.apply(this, [0]);\n      // 在收起动画期间，连续执行隐藏方法，会主动cancel上一次transition，保证只执行最后一次\n      onOnceTransitionEnd(contentEl, () => {\n        resolve();\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [\n            this._translate > 0 ? leftActions : rightActions,\n          ]);\n        }\n        confirmCancel.apply(this, []);\n        if (this._direction !== 'none') {\n          this.emit('hide', {\n            direction: 'none',\n            currentTarget: contentEl,\n            timestamp: Date.now(),\n            sourceEvent: null,\n          });\n          this._direction = 'none';\n        }\n      });\n    });\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 销毁底层事件\n    if (this._gesture) {\n      this._gesture.destory();\n      this._gesture = null;\n    }\n    this._destory = true;\n    this.leftActions = null;\n    this.rightActions = null;\n    this._confirming = null;\n    this._startPoint = null;\n    this.contentEl = null;\n    this.leftEl = null;\n    this.rightEl = null;\n    if (this.element) {\n      // 删除元素，用户可以在调用该方法之前加一个删除动画\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'both' | 'none';\n\nexport type Timing =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | `cubic-bezier(${number},${number},${number},${number})`;\n\nexport type ActionStyle = 'drawer' | 'accordion';\n\nexport type Confirm = {\n  direction: Direction;\n  index: number;\n};\n\nexport type MergeActionItem = {\n  wrapper: HTMLElement; // 当前按钮包裹元素\n  element: HTMLElement; // 当前按钮元素\n  width: number; // 当前按钮的宽度\n  gap: number[]; // 元素之间的间距\n  fixedGap: boolean; //拉伸按钮时，是否固定间距\n} & IActionItem;\n\nexport type MergeAction = {\n  style: ActionStyle; // 按钮展示的风格\n  disable: boolean; // 禁用按钮\n  threshold: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootFreeSize: number; // overshoot后，总宽度剩余部分\n  overshootEdgeSize: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  element: HTMLElement; // 所有按钮父元素\n  width: number; // 按钮父元素宽度，即所有按钮宽度加间距宽度\n  gap: number; // 元素之间的间距之和\n  items: MergeActionItem[]; // 按钮配置\n};\n\nexport type IActionItem = {\n  className?: string; // 按钮自定义样式\n  text?: string; // 按钮文字\n  icon?: string; // 按钮图标（会根据传入的字符串形式判断是img还是svg元素或是字体icon）\n  color?: string; // 按钮文字图标颜色（img图标除外）\n  background?: string; //按钮背景颜色\n  confirm?: {\n    // 按钮在确认的时候替代的内容样式，不传则没有确认环节，只传{}则有确认环节，但内容样式不改变\n    className?: string; // 按钮自定义样式\n    text?: string; // 按钮文字\n    icon?: string; // 按钮图标\n    color?: string; // 按钮文字图标颜色\n    background?: string; //按钮背景颜色\n  }; // 按钮确认时的信息\n  collapse?: boolean; // 按钮点击后是否收起\n  gap?: number | number[]; // 元素左右间距\n  fixedGap?: boolean; //拉伸按钮时，是否固定间距\n  data?: any; //按钮携带数据\n};\n\nexport type IActionOption = {\n  className?: string; // 按钮自定义样式\n  style?: ActionStyle; // 按钮展示的风格\n  disable?: boolean; // 禁用按钮\n  threshold?: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot?: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootEdgeSize?: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overshootFreeSize?: number; // 滑动出来的尺寸占据组件容器尺寸之后的剩余尺寸（小于这个尺寸就overshoot）\n  items?: IActionItem[]; // 按钮配置\n};\n\nexport type IOption = {\n  className?: string; // 滑动组件类名控制样式\n  container: HTMLElement | string; // 装载滑动组件的DOM容器\n  content?: HTMLElement | string; // 滑动组件的子节点\n  friction?: number; // 摩擦因子(0-1的值)\n  rebounce?: number; // 弹性尺寸\n  duration?: number; // 滑动时动画的时间（秒级）\n  timing?: Timing; // 滑动时动画的函数\n  leftActions?: IActionOption;\n  rightActions?: IActionOption;\n};\n\nexport type IType =\n  | 'show'\n  | 'hide'\n  | 'press'\n  | 'longPress'\n  | 'doublePress'\n  | 'buttonPress'\n  | 'buttonConfirm';\n\nexport type IEvent = {\n  currentTarget: HTMLElement;\n  timestamp: number;\n  sourceEvent: GEvent | null;\n  direction?: Direction; // 滑出的是哪边的按钮\n  index?: number; // 点击按钮在按钮集合里的索引\n  data?: any; // 按钮携带的数据\n};\n\nexport default SlideView;\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:16:12\n * @Description: ******\n */\n\nimport { addClass, cssInject } from './util';\nimport css from './css';\n\nexport default function generateEl(\n  container: HTMLElement | string,\n  className?: string,\n) {\n  let tempContainer: HTMLElement | null;\n  try {\n    if (typeof container === 'string') {\n      tempContainer = document.querySelector(container);\n    } else {\n      tempContainer = container;\n    }\n  } catch (e) {\n    tempContainer = null;\n  }\n  if (!tempContainer || !(tempContainer instanceof HTMLElement)) {\n    throw new Error('Please pass in a valid container element...');\n  }\n  cssInject(css);\n  const viewElement = addClass(\n    document.createElement('div'),\n    `hjs-slideview ${className || ''}`,\n  );\n  const leftElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__left',\n  );\n  viewElement.appendChild(leftElement);\n  const rightElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__right',\n  );\n  viewElement.appendChild(rightElement);\n  const contentElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__content',\n  );\n  viewElement.appendChild(contentElement);\n  tempContainer.innerHTML = '';\n  tempContainer.appendChild(viewElement);\n  return [viewElement, contentElement, leftElement, rightElement];\n}\n"],"names":["getIconType","url","match","findTarget","event","condition","target","parentNode","addClass","ele","className","split","forEach","c","classList","add","styleId","autoPxReg","setStyle","css","cssText","Object","keys","k","key","replace","toLowerCase","suffix","test","val","style","setProperty","longTap","e","contentEl","this","_translate","sourceEvent","currentTarget","t","emit","timestamp","Date","now","hide","cTransform","confirm","translate","leftActions","rightActions","duration","timing","disable","transition","index","direction","factor","Math","abs","aTransform","items","delta","transformTotal","i","length","wrapper","width","gap","transform","transformx","leftEl","rightEl","wTransition","element","tWidth","tGap","styleObj","xMove","max","len","fixedGap","transformw","transformb","_overshooting","window","requestAnimationFrame","overshootChange","actions","confirmStyle","item","isConfirm","rest","text","icon","color","background","remove","removeClass","iconEl","firstElementChild","type","src","innerHTML","lastElementChild","innerText","confirmCancel","_confirming","buttonPress","rebounce","getAttribute","elWidth","_width","overshoot","eventType","collapse","apply","min","onOnceTransitionEnd","data","tap","doubleTap","pointerStart","pointers","pointer","setAttribute","identifier","point","current","friction","_isMoving","_timestamp","_startAngle","_startOffset","_startPoint","startTranslate","overshootFreeSize","criticalTranslate","revokeDamping","expo","_startTranslate","pointerMove","p","changed","currentPoint","currentX","currentY","currentTranslate","overshootEdgeSize","oaSize","otSize","oeSize","deltaSize","moveEdge","currentOffset","_offset","startOffset","maxOffset","performDamping","pointerEnd","leavePointers","startPoint","threshold","show","bindGesture","gesture","Gesture","on","bind","transitionEnd","propertyName","ontransitionend","stopImmediatePropagation","options","container","content","tempContainer","document","querySelector","HTMLElement","Error","createElement","id","appendChild","createTextNode","head","getElementsByTagName","viewElement","leftElement","rightElement","contentElement","generateEl","_gesture","setContent","setFriction","setRebounce","setDuration","setTiming","setActions","resize","getBoundingClientRect","left","addEventListener","_removeResize","removeEventListener","dangerous","_destory","tempChild","then","_threshold","_setActions","_direction","parentEl","tElement","newItems","map","String","tItem","leftGap","rightGap","_setActionsAfterCollapse","shown","Promise","resolve","__direction","maxTranslate","rebSize","destory","removeChild","EventTarget"],"sourceRoot":""}