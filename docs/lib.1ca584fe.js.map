{"version":3,"file":"lib.1ca584fe.js","mappings":"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","sources":["webpack:///../src/event.ts","webpack:///../src/util.ts","webpack:///../src/gesture.ts","webpack:///../src/agent.ts","webpack:///../src/index.ts","webpack:///../src/css.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-10 11:51:02\n * @Description: ******\n */\n\ntype IHandler<E, T> = (this: any, event: E, type?: T) => boolean | void;\n\nexport type IBaseEvent<O, E> = {\n  currentTarget: O; // 事件绑定元素\n  sourceEvent: E; // 源事件\n  timeStamp: number; // 事件发生时间戳\n};\n\nexport default class EventTarget<\n  O,\n  K,\n  T extends string,\n  E extends IBaseEvent<O, K>,\n> {\n  events: {\n    [key in T]?: {\n      pool: Array<IHandler<E, T>>;\n      single: number;\n    };\n  } = {};\n  constructor() {\n    this.events = {};\n  }\n  one(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const onceHandler =\n      typeof handler === 'function'\n        ? (...args: [E, T?]) => {\n            // 该事件只执行一次，执行完就删除事件\n            handler.apply(this, args);\n            this.off(type, onceHandler, single);\n          }\n        : handler;\n    this.on(type, onceHandler, single);\n  }\n  on(type: T, handler: IHandler<E, T>, single?: boolean) {\n    const events = this.events[type] || {\n      pool: [],\n      single: -1,\n    };\n    if (typeof handler === 'function') {\n      if (single) {\n        // 该事件只能注册一次，每次注册都会替换上次注册的，类似于dom属性事件赋值注册比如element.onclick = ()=>{}\n        if (events.single === -1) {\n          // 记录该单独事件在所有事件的位置\n          events.single = events.pool.push(handler) - 1;\n        } else {\n          events.pool[events.single] = handler;\n        }\n      } else {\n        // 该事件可以注册多次，执行时，会遍历全部事件全部执行，类似于dom的addEventListener\n        // 注册进去之前会检查是否有相同的处理程序，如果有，则不再添加（独立程序不参与）\n        let unregistered = true;\n        for (let i = 0, len = events.pool.length; i < len; i++) {\n          if (events.pool[i] === handler && i !== events.single) {\n            unregistered = false;\n            break;\n          }\n        }\n        if (unregistered) {\n          events.pool.push(handler);\n        }\n      }\n    } else if (single && events.single !== -1) {\n      // 需要把独立事件删除，相当于解绑独立事件\n      events.pool.splice(events.single, 1);\n      events.single = -1;\n    }\n    this.events[type] = events;\n  }\n  off(type?: T, handler?: IHandler<E, T>, single?: boolean) {\n    if (typeof type === 'undefined') {\n      // 没有type则删除全部事件\n      this.events = {};\n    } else if (typeof handler === 'undefined') {\n      // 删除type下的所有事件\n      delete this.events[type];\n    } else if (single) {\n      const events = this.events[type];\n      if (events && events.single !== -1) {\n        // 删除独立程序事件\n        events.pool.splice(events.single, 1);\n        events.single = -1;\n      }\n    } else {\n      const events = this.events[type];\n      if (events) {\n        // 检查并删除事件池内事件\n        for (let i = events.pool.length - 1; i >= 0; i--) {\n          if (events.pool[i] === handler && i !== events.single) {\n            events.pool.splice(i, 1);\n            // 因为相同事件只会有一个，所以删除后不需要再检查了\n            break;\n          }\n        }\n      }\n    }\n  }\n  trigger(type: T, event: E) {\n    const events = this.events[type];\n    if (events) {\n      // 循环执行事件池里的事件\n      for (let i = 0, len = events.pool.length; i < len; i++) {\n        const handler = events.pool[i];\n        if (typeof handler === 'function') {\n          const immediatePropagation = handler.apply(event.currentTarget, [\n            event,\n            type,\n          ]);\n          // 返回值为false，则阻止后于该事件注册的同类型事件触发\n          if (immediatePropagation === false) {\n            break;\n          }\n        }\n      }\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-22 15:51:28\n * @Description: ******\n */\n\nexport function isTouchable(ele: HTMLElement) {\n  if (!ele) {\n    return false;\n  }\n  return navigator.maxTouchPoints || 'ontouchstart' in ele;\n}\n\nexport function getDistance([x0, y0]: number[], [x1, y1]: number[]) {\n  return Math.sqrt(Math.pow(x1 - x0, 2) + Math.pow(y1 - y0, 2));\n}\n\nexport function getVelocity(deltaTime: number, distance: number) {\n  return distance / deltaTime || 0;\n}\n\nexport function getAngle([x0, y0]: number[], [x1, y1]: number[]) {\n  return (Math.atan2(y1 - y0, x1 - x0) * 180) / Math.PI;\n}\n\nexport function getCenter([x0, y0]: number[], [x1, y1]: number[]) {\n  return [(x0 + x1) / 2, (y0 + y1) / 2];\n}\n\nexport function getDirection([x0, y0]: number[], [x1, y1]: number[]) {\n  const x = x0 - x1;\n  const y = y0 - y1;\n  if (x === y) {\n    return 'None';\n  }\n  return Math.abs(x) >= Math.abs(y)\n    ? x0 - x1 > 0\n      ? 'Left'\n      : 'Right'\n    : y0 - y1 > 0\n    ? 'Up'\n    : 'Down';\n}\n\nexport function rebounceSize(value: number, friction: number) {\n  const val = value || 1;\n  return (\n    (Math.pow(Math.abs(val), Math.min(1, Math.max(0, friction))) * val) /\n    Math.abs(val)\n  );\n}\n\nexport function addClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.add(c));\n  }\n  return ele;\n}\nexport function removeClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.remove(c));\n  }\n  return ele;\n}\n\nexport function setStyle(\n  ele: HTMLElement,\n  css: { [key: string]: string | number | undefined },\n) {\n  if (ele) {\n    Object.keys(css).forEach((k: string) => {\n      if (typeof css[k] === 'undefined') {\n        return;\n      }\n      const key =\n        k.indexOf('-') !== -1 ? k : k.replace(/([A-Z])/g, '-$1').toLowerCase();\n      const val =\n        typeof css[k] === 'number' && key !== 'z-index' && key !== 'opacity'\n          ? `${css[k]}px`\n          : String(css[k]);\n      ele.style.setProperty(key, val);\n    });\n  }\n  return ele;\n}\n\nexport const getMarginSize = function getMarginSize(element: HTMLElement) {\n  let val = 0;\n  if (element) {\n    const computed = window.getComputedStyle(element, null);\n    if (computed) {\n      val = parseFloat(computed.marginLeft) + parseFloat(computed.marginRight);\n    } else {\n      val =\n        parseFloat(element.style.marginLeft) +\n        parseFloat(element.style.marginRight);\n    }\n    if (Number.isNaN(val)) {\n      val = 0;\n    }\n  }\n  return val;\n};\n\nexport function getIconType(url: string) {\n  if (url) {\n    if (\n      url.match(/\\.(jpe?g|png|gif|bmp|ico|svg|webp)$/) ||\n      url.match(/^(data:image\\/)/)\n    ) {\n      return 'img';\n    } else if (url.match(/^<svg(.+)?>.+<\\/svg>$/)) {\n      return 'span';\n    }\n  }\n  return 'i';\n}\n\nconst styleId = 'hjs-slide-view-style';\nexport function styleInject(cssText: string) {\n  let style = document.querySelector(`#${styleId}`);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.appendChild(document.createTextNode(cssText));\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(\n      style,\n    );\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-17 14:16:20\n * @Description: ******\n */\nimport EventTarget, { type IBaseEvent } from './event';\nimport {\n  isTouchable,\n  getDirection,\n  getDistance,\n  getAngle,\n  getCenter,\n  getVelocity,\n} from './util';\n\nconst fixOption = (\n  value: number | undefined,\n  defaultValue: number,\n  minVal: number,\n) => (typeof value !== 'number' || value < minVal ? defaultValue : value);\n\nfunction touchstarted(this: Gesture, event: TouchEvent) {\n  const touches = event.touches;\n  if (!touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  // 循环保存放在屏幕上的手指，这里只会保存最多两个，忽略超过三个的手指（只对单指和双指情形处理）\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p: [number, number] = [t.pageX, t.pageY];\n    const touch: [[number, number], [number, number], number] = [\n      p,\n      p,\n      t.identifier,\n    ];\n    if (!this._touch0) {\n      this._touch0 = touch;\n    } else if (!this._touch1 && touch[2] !== this._touch0[2]) {\n      this._touch1 = touch;\n    }\n  }\n  // 每次进入时先阻止所有单指事件\n  this._preventTap = true;\n  this._swipeTimeStamp = 0;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 双指start\n  if (this._touch1 && this._touch0) {\n    this.trigger('gestureStart', {\n      currentTarget: this.element,\n      point: [this._touch0[0], this._touch1[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n  // 单指start\n  else if (this._touch0) {\n    this._preventTap = false;\n    this._swipeTimeStamp = event.timeStamp;\n    // 设置一个长按定时器\n    this._longTapTimer = window.setTimeout(() => {\n      // 当前点击一旦长按超过longTapInterval则触发longTap，则松开后不会再触发所有单指事件\n      this._preventTap = true;\n      this._swipeTimeStamp = 0;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = true;\n      this._longTapTimer = null;\n      this.trigger('longTap', {\n        currentTarget: this.element,\n        point: this._touch0 ? [this._touch0[0]] : [],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        waitTime: this.longTapInterval,\n      });\n    }, this.longTapInterval);\n    if (\n      this._singleTapTimer &&\n      this._touchFirst &&\n      getDistance(this._touchFirst, this._touch0[0]) < this.doubleTapDistance\n    ) {\n      // 1，只要连续两次点击时间在doubleTapInterval之内，距离在doubleTapDistance内，无论第二次作何操作，都不会触发第一次的singleTap，但第一次的tap会触发\n      // 2，如果满足第一条时，第二次的点击有多根手指，或者长按触发longTap，则不会再触发doubleTap，第二次的tap，singleTap也不会触发\n      clearTimeout(this._singleTapTimer);\n      this._singleTapTimer = null;\n      this._preventSingleTap = true;\n      this._preventDoubleTap = false;\n    } else {\n      this._touchFirst = this._touch0[0];\n      // 表示是第一次点击或该次点击距离上一次点击时间超过doubleTapInterval，距离超过doubleTapDistance\n      this._preventSingleTap = false;\n      this._preventDoubleTap = true;\n    }\n  }\n  // 无指没有start\n  else {\n    return;\n  }\n  this.trigger('touchStart', {\n    currentTarget: this.element,\n    point: this._touch1\n      ? [this._touch0[0], this._touch1[1]]\n      : [this._touch0[0]],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n\nfunction touchmoved(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  // 循环更新手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    const p: [number, number] = [t.pageX, t.pageY];\n    if (this._touch0 && this._touch0[2] === t.identifier) {\n      this._touch0[1] = p;\n    } else if (this._touch1 && this._touch1[2] === t.identifier) {\n      this._touch1[1] = p;\n    }\n  }\n  // 手指移动至少要有一个手指移动超过touchMoveDistance才会触发移动事件\n  if (\n    (this._touch0 &&\n      getDistance(this._touch0[0], this._touch0[1]) >=\n        this.touchMoveDistance) ||\n    (this._touch1 &&\n      getDistance(this._touch1[0], this._touch1[1]) >= this.touchMoveDistance)\n  ) {\n    // 一旦移动，则阻止所有单指点击相关事件（除了swipe）\n    this._preventTap = true;\n    this._preventSingleTap = true;\n    this._preventDoubleTap = true;\n    if (this._longTapTimer) {\n      clearTimeout(this._longTapTimer);\n      this._longTapTimer = null;\n    }\n    // 双指移动情况\n    if (this._touch1 && this._touch0) {\n      // 只有双指滑动时才会触发下面事件\n      const distance1 = getDistance(this._touch0[1], this._touch1[1]);\n      const distance0 = getDistance(this._touch0[0], this._touch1[0]);\n      if (distance1 !== 0 && distance0 !== 0) {\n        this.trigger('pinch', {\n          currentTarget: this.element,\n          point: [this._touch0[0], this._touch1[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          scale: distance1 / distance0, // 可以直接设置css3里transform的scale\n        });\n      }\n      const angle1 = getAngle(this._touch0[1], this._touch1[1]);\n      const angle0 = getAngle(this._touch0[0], this._touch1[0]);\n      this.trigger('rotate', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        angle: angle1 + angle0, // 加和减效果一样，可以直接设置css3里transform的rotate\n      });\n      const center1 = getCenter(this._touch0[1], this._touch1[1]);\n      const center0 = getCenter(this._touch0[0], this._touch1[0]);\n      this.trigger('multiPan', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        deltaX: center1[0] - center0[0],\n        deltaY: center1[1] - center0[1],\n      });\n      this.trigger('gestureMove', {\n        currentTarget: this.element,\n        point: [this._touch0[0], this._touch1[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    // 单指移动\n    else if (this._touch0) {\n      // 触发单指平移事件\n      const deltaX = this._touch0[1][0] - this._touch0[0][0];\n      const deltaY = this._touch0[1][1] - this._touch0[0][1];\n      this.trigger('pan', {\n        currentTarget: this.element,\n        point: [this._touch0[0]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        deltaX,\n        deltaY,\n      });\n    }\n    // 无指无移动\n    else {\n      return;\n    }\n    this.trigger('touchMove', {\n      currentTarget: this.element,\n      point: this._touch1\n        ? [this._touch0[0], this._touch1[1]]\n        : [this._touch0[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n}\n\nfunction touchended(this: Gesture, event: TouchEvent) {\n  const touches = event.changedTouches;\n  if (!touches) {\n    return;\n  }\n  event.stopImmediatePropagation();\n  // 临时保存本次\n  let touch: [[number, number], [number, number], number] | null = null;\n  // 循环删除已经拿开的手指\n  for (let i = 0, len = touches.length; i < len; ++i) {\n    const t = touches[i];\n    if (this._touch0 && this._touch0[2] === t.identifier) {\n      touch = this._touch0;\n      this._touch0 = null;\n    } else if (this._touch1 && this._touch1[2] === t.identifier) {\n      this._touch1 = null;\n    }\n  }\n  // 双指变单指\n  if (this._touch1 && !this._touch0) {\n    this._touch0 = this._touch1;\n    this._touch1 = null;\n  }\n  // 松开时清除longTapTimer（一旦松开就不存在长按，当然有可能已经发生过了）\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  // 仍然存在至少一根手指\n  if (this._touch0) {\n    // 只剩下一根在上面了\n    if (!this._touch1) {\n      // 双指抬起，只剩下一指，此时就认为该点是移动的起点（否则会把双指移动的起点作为起点，移动时会出现跳跃）\n      this._touch0[0] = this._touch0[1];\n      // 同时可以触发一次start事件\n      this.trigger('touchStart', {\n        currentTarget: this.element,\n        point: [this._touch0[0]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    this.trigger('gestureEnd', {\n      currentTarget: this.element,\n      point: [this._touch0[0]],\n      timeStamp: Date.now(),\n      sourceEvent: event,\n    });\n  }\n  // 全部拿开（双指同时抬起，最后一指抬起，仅仅一指抬起）\n  else {\n    if (!this._preventTap) {\n      this.trigger('tap', {\n        currentTarget: this.element,\n        point: !touch ? [] : [touch[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n      });\n    }\n    if (this._swipeTimeStamp > 0 && touch) {\n      const velocity = getVelocity(\n        event.timeStamp - this._swipeTimeStamp,\n        getDistance(touch[0], touch[1]),\n      );\n      // 滑动距离超过swipeDistance并且滑动速率大于swipeVelocity，才触发swipe\n      if (\n        velocity >= this.swipeVelocity &&\n        (Math.abs(touch[1][0] - touch[0][0]) >= this.swipeDistance ||\n          Math.abs(touch[1][1] - touch[0][1]) >= this.swipeDistance)\n      ) {\n        const direction = getDirection(touch[0], touch[1]);\n        this.trigger('swipe', {\n          currentTarget: this.element,\n          point: [touch[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          direction,\n          velocity,\n        });\n      }\n    }\n    if (!this._preventSingleTap) {\n      // 等待doubleTapInterval，如果时间内没有点击第二次，则触发\n      this._singleTapTimer = window.setTimeout(() => {\n        this._singleTapTimer = null;\n        this.trigger('singleTap', {\n          currentTarget: this.element,\n          point: !touch ? [] : [touch[1]],\n          timeStamp: Date.now(),\n          sourceEvent: event,\n          delayTime: this.doubleTapInterval,\n        });\n      }, this.doubleTapInterval);\n    }\n    if (!this._preventDoubleTap) {\n      this.trigger('doubleTap', {\n        currentTarget: this.element,\n        point: !touch ? [] : [touch[1]],\n        timeStamp: Date.now(),\n        sourceEvent: event,\n        intervalTime: this.doubleTapInterval,\n      });\n    }\n  }\n  this.trigger('touchEnd', {\n    currentTarget: this.element,\n    point: [],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n\nfunction touchcanceled(this: Gesture, event: TouchEvent) {\n  this.trigger('touchCancel', {\n    currentTarget: this.element,\n    point: [],\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n  touchended.apply(this, [event]);\n}\n\nfunction scrollcanceled(this: Gesture) {\n  if (this._singleTapTimer) {\n    clearTimeout(this._singleTapTimer);\n    this._singleTapTimer = null;\n  }\n  if (this._longTapTimer) {\n    clearTimeout(this._longTapTimer);\n    this._longTapTimer = null;\n  }\n  this._touchFirst = null;\n  this._touch0 = null;\n  this._touch1 = null;\n  this._preventTap = true;\n  this._swipeTimeStamp = 0;\n  this._preventSingleTap = true;\n  this._preventDoubleTap = true;\n}\n\nclass Gesture extends EventTarget<\n  HTMLElement,\n  TouchEvent,\n  GestureEventType,\n  GestureEvent\n> {\n  element: HTMLElement;\n  longTapInterval: number = 750;\n  doubleTapInterval: number = 250;\n  doubleTapDistance: number = 10;\n  touchMoveDistance: number = 3;\n  swipeDistance: number = 30;\n  swipeVelocity: number = 0.3;\n  _singleTapTimer: number | null = null;\n  _longTapTimer: number | null = null;\n  _preventTap: boolean = true;\n  _swipeTimeStamp: number = 0;\n  _preventSingleTap: boolean = true;\n  _preventDoubleTap: boolean = true;\n  _touchFirst: [number, number] | null = null;\n  _touch0: [[number, number], [number, number], number] | null = null;\n  _touch1: [[number, number], [number, number], number] | null = null;\n  _destory: (() => void) | null = null;\n  constructor(element: HTMLElement | string, options?: GestureOptions) {\n    super();\n    let tempElement: HTMLElement | null;\n    if (typeof element === 'string') {\n      tempElement = document.querySelector(element);\n    } else {\n      tempElement = element;\n    }\n    if (!tempElement || !(tempElement instanceof HTMLElement)) {\n      throw new Error('Please pass in a valid element...');\n    }\n    this.element = tempElement;\n    const {\n      longTapInterval,\n      doubleTapInterval,\n      doubleTapDistance,\n      touchMoveDistance,\n      swipeDistance,\n      swipeVelocity,\n    } = options || {};\n    this.longTapInterval = fixOption(longTapInterval, 750, 500);\n    this.doubleTapInterval = fixOption(doubleTapInterval, 250, 200);\n    this.doubleTapDistance = fixOption(doubleTapDistance, 10, 1);\n    this.touchMoveDistance = fixOption(touchMoveDistance, 3, 0);\n    this.swipeDistance = fixOption(swipeDistance, 30, 0);\n    this.swipeVelocity = fixOption(swipeVelocity, 0.3, 0.01);\n    // 注册触摸事件\n    if (isTouchable(this.element)) {\n      const started = touchstarted.bind(this);\n      const moved = touchmoved.bind(this);\n      const ended = touchended.bind(this);\n      const canceled = touchcanceled.bind(this);\n      this.element.addEventListener('touchstart', started, false);\n      this.element.addEventListener('touchmove', moved, false);\n      this.element.addEventListener('touchend', ended, false);\n      this.element.addEventListener('touchcancel', canceled, false);\n      const scrolled = scrollcanceled.bind(this);\n      window.addEventListener('scroll', scrolled);\n      this._destory = () => {\n        this.element.removeEventListener('touchstart', started);\n        this.element.removeEventListener('touchmove', moved);\n        this.element.removeEventListener('touchend', ended);\n        this.element.removeEventListener('touchcancel', canceled);\n        window.removeEventListener('scroll', scrolled);\n      };\n    }\n  }\n  done() {\n    return !!this._destory;\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    scrollcanceled.apply(this);\n    // 解除手势事件\n    if (this._destory) {\n      this._destory();\n      this._destory = null;\n    }\n  }\n}\n\nexport type GestureEventType =\n  | 'pinch' // 双指放大缩小\n  | 'rotate' // 双指旋转\n  | 'multiPan' // 双指平移\n  | 'pan' // 单指平移\n  | 'swipe' // 单指快速滑动\n  | 'tap' // 单指轻点（快，双击时会触发）\n  | 'singleTap' // 单指点击（有延迟，双击时不触发）\n  | 'longTap' // 单指长按\n  | 'doubleTap' // 单指双击\n  | 'touchStart' // 触摸开始\n  | 'touchMove' // 触摸移动\n  | 'touchEnd' // 触摸抬起\n  | 'touchCancel' // 触摸取消\n  | 'gestureStart' // 双（多）指开始\n  | 'gestureMove' // 双（多）指移动\n  | 'gestureEnd'; // 双（多）指结束\n\nexport type GestureEvent = {\n  point: [number, number][]; // 当前手指点坐标[pageX,pageY]\n  scale?: number; // 缩放比例\n  angle?: number; // 旋转角度\n  deltaX?: number; // x方向移动最终距离\n  deltaY?: number; // y方向移动最终距离\n  direction?: string; // 滑动方向\n  velocity?: number; // 滑动速率\n  waitTime?: number; // 长按等待时间\n  delayTime?: number; // 点击延迟时间\n  intervalTime?: number; // 双击间隔时间\n} & IBaseEvent<HTMLElement, TouchEvent>;\n\nexport type GestureOptions = {\n  longTapInterval?: number; // 设置长按等待时间阈值，单位ms\n  doubleTapInterval?: number; // 设置双击时间间隔，单位ms\n  doubleTapDistance?: number; // 双击两次点击的位置距离触发阈值\n  touchMoveDistance?: number; // 移动阈值，超过这个值才算移动\n  swipeDistance?: number; // 滑动阈值，超过这个值才触发滑动\n  swipeVelocity?: number; // 滑动速率，超过这个值可触发滑动，设置小一点\n};\n\nexport default Gesture;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-22 17:17:34\n * @Description: ******\n */\nimport Gesture, { type GestureEvent } from './gesture';\n\nfunction started(\n  element: HTMLElement,\n  event: GestureEvent,\n  start: AgentHandler,\n) {\n  const e = event.sourceEvent as TouchEvent;\n  // 表示是已经有一个手指放上去了\n  if (element.getAttribute('data-touch-identifier')) {\n    return;\n  }\n  const touch = e.touches[0];\n  if (!touch) {\n    return;\n  }\n  // 设置主手指\n  element.setAttribute('data-touch-identifier', touch.identifier.toString());\n  start({\n    type: 'touch',\n    currentTarget: element,\n    point: [touch.pageX, touch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction moved(element: HTMLElement, event: GestureEvent, move: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示移动的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  move({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction ended(element: HTMLElement, event: GestureEvent, end: AgentHandler) {\n  const e = event.sourceEvent as TouchEvent;\n  let changedTouch = null;\n  for (let i = 0; i < e.changedTouches.length; i++) {\n    const touch = e.changedTouches.item(i);\n    if (\n      touch &&\n      touch.identifier.toString() ===\n        element.getAttribute('data-touch-identifier')\n    ) {\n      changedTouch = touch;\n      break;\n    }\n  }\n  // 表示抬起的手指不是主手指\n  if (!changedTouch) {\n    return;\n  }\n  // 没有手指在上面了\n  element.setAttribute('data-touch-identifier', '');\n  end({\n    type: 'touch',\n    currentTarget: element,\n    point: [changedTouch.pageX, changedTouch.pageY],\n    sourceEvent: event,\n  });\n}\n\nfunction touched(\n  element: HTMLElement,\n  event: GestureEvent,\n  touch: AgentHandler,\n) {\n  touch({\n    type: 'touch',\n    point: event.point[0],\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nfunction mousedowned(\n  element: HTMLElement,\n  event: MouseEvent,\n  { start, move, end }: AgentEventHandler,\n) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n  document.addEventListener('mousemove', mousemoved);\n  document.addEventListener('mouseup', mouseupped);\n  if ('onselectstart' in document) {\n    document.addEventListener('dragstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n    document.addEventListener('selectstart', dragstarted, {\n      capture: true,\n      passive: false,\n    });\n  }\n  const x0 = event.clientX;\n  const y0 = event.clientY;\n  start &&\n    start({\n      type: 'mouse',\n      point: [event.pageX, event.pageY],\n      currentTarget: element,\n      sourceEvent: event,\n    });\n\n  function dragstarted(e: Event) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n  }\n\n  function mousemoved(e: MouseEvent) {\n    e.preventDefault();\n    e.stopImmediatePropagation();\n    element.setAttribute('data-move', 'true');\n    const dx = e.clientX - x0;\n    const dy = e.clientY - y0;\n    if (dx * dx + dy * dy >= 3 * 3) {\n      move &&\n        move({\n          type: 'mouse',\n          point: [e.pageX, e.pageY],\n          currentTarget: element,\n          sourceEvent: e,\n        });\n    }\n  }\n\n  function mouseupped(e: MouseEvent) {\n    e.stopImmediatePropagation();\n    document.removeEventListener('mousemove', mousemoved);\n    document.removeEventListener('mouseup', mouseupped);\n    if ('onselectstart' in document) {\n      document.removeEventListener('dragstart', dragstarted);\n      document.removeEventListener('selectstart', dragstarted);\n    }\n    end &&\n      end({\n        type: 'mouse',\n        point: [e.pageX, e.pageY],\n        currentTarget: element,\n        sourceEvent: e,\n      });\n  }\n}\n\nfunction moused(element: HTMLElement, event: MouseEvent, mouse: AgentHandler) {\n  event.preventDefault();\n  const moving = element.getAttribute('data-move');\n  if (moving) {\n    element.removeAttribute('data-move');\n    return;\n  }\n  mouse({\n    type: 'mouse',\n    point: [event.pageX, event.pageY],\n    currentTarget: element,\n    sourceEvent: event,\n  });\n}\n\nexport type AgentEvent = {\n  type: 'mouse' | 'touch';\n  point: number[];\n  currentTarget: HTMLElement;\n  sourceEvent: GestureEvent | MouseEvent;\n};\n\ntype AgentHandler = (e: AgentEvent) => void;\n\ntype AgentEventHandler = {\n  start?: AgentHandler | null;\n  move?: AgentHandler | null;\n  end?: AgentHandler | null;\n  press?: AgentHandler | null;\n  longPress?: AgentHandler | null;\n  doublePress?: AgentHandler | null;\n};\n\nexport type IAgent = {\n  element: HTMLElement;\n  destory: () => void;\n};\n\nexport default function agent(ele: HTMLElement, handler: AgentEventHandler) {\n  if (!ele || !(ele instanceof HTMLElement)) {\n    throw new Error('Binding events require HTMLElement...');\n  }\n  let destory = () => {};\n  const { start, move, end, press, longPress, doublePress } = handler;\n  const gesture = new Gesture(ele);\n  if (gesture.done()) {\n    if (start) {\n      gesture.on('touchStart', (e: GestureEvent) => started(ele, e, start));\n    }\n    if (move) {\n      gesture.on('touchMove', (e: GestureEvent) => moved(ele, e, move));\n    }\n    if (end) {\n      gesture.on('touchEnd', (e: GestureEvent) => ended(ele, e, end));\n    }\n    if (press) {\n      gesture.on('tap', (e: GestureEvent) => touched(ele, e, press));\n    }\n    if (longPress) {\n      gesture.on('longTap', (e: GestureEvent) => touched(ele, e, longPress));\n    }\n    if (doublePress) {\n      gesture.on('doubleTap', (e: GestureEvent) =>\n        touched(ele, e, doublePress),\n      );\n    }\n    destory = () => {\n      gesture.destory();\n    };\n  } else {\n    let mousedown: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end) {\n      mousedown = (e: MouseEvent) => mousedowned(ele, e, { start, move, end });\n      ele.addEventListener('mousedown', mousedown);\n    }\n    let click: ((e: MouseEvent) => void) | null = null;\n    if (start || move || end || press) {\n      click = (e: MouseEvent) => moused(ele, e, press || (() => {}));\n      ele.addEventListener('click', click);\n    }\n    let rightclick: ((e: MouseEvent) => void) | null = null;\n    if (longPress) {\n      rightclick = (e: MouseEvent) => moused(ele, e, longPress);\n      ele.addEventListener('contextmenu', rightclick);\n    }\n    let dblclick: ((e: MouseEvent) => void) | null = null;\n    if (doublePress) {\n      dblclick = (e: MouseEvent) => moused(ele, e, doublePress);\n      ele.addEventListener('dblclick', dblclick);\n    }\n    destory = () => {\n      mousedown && ele.removeEventListener('mousedown', mousedown);\n      click && ele.removeEventListener('click', click);\n      dblclick && ele.removeEventListener('dblclick', dblclick);\n      rightclick && ele.removeEventListener('contextmenu', rightclick);\n    };\n  }\n  return {\n    element: ele,\n    destory,\n  };\n}\n\n/*\n  1、如果在一个事件循环内多次设置transition，只会执行性最后一次，前面的会忽略。如果在多次串联（不同的事件循环内）设置transition时，如果属性和值都无任何变化，则后续的设置会忽略，如果不一样，除了第一次，后续的transition会保留上次动画最后一帧（下次动画也从该帧开始）的结果与新设置的动画值比较，相同则不执行动画，不同则执行动画（且从），而不是每次动画都与初始节点比较，初始节点执行。\n\n  2、delay这个参数注意：正值，等待delay秒之后，从初始开始执行动画，到结束，花费duration时间。负值，无等待立马执行，从中间某节点开始执行动画，到结束位置，花费duration去掉delay负数的时间。其中中间某节点就是如果按照正常执行时用掉delay时间所应该到达的节点处。\n\n  3、如果在一个固定时间内需要不停的改变transition属性值，直到时间用完变成无transition，此时可以在每次动画时算出与第一次动画开始时的时间差，然后用这个固定时间减去时间差，设置在当前动画的duration上，直到为0时去掉transition即可（这样做动画会连贯丝滑）。\n\n  4、一些属性可以设置百分比或者不设置值（'','none','auto'）等，而不是具体的数值的时候，此时设置transition，并不会发生动画（比如宽度从auto到100px是瞬间到达），可以在设置transition之前先设一个具体值，比如0或1，但是，这里注意，需要把设置transition的语句放在下一个事件循环（比如setTimeout）内，但最好的是放在requestAnimationFrame，或者在语句之前调用一次布局信息（比如获取宽度值），其实就是强迫浏览器重绘：浏览器通常还会在两种情况下会产生样式变更事件，一是满足屏幕刷新频率（requestAnimationFrame），二是当 JS 脚本需要获取最新的样式布局信息时。这种情况也适用于对隐藏的元素进行动画，动画后再隐藏，可以监听transitionend，在事件内隐藏。\n  https://blog.csdn.net/weixin_45189747/article/details/97790805\n  http://aihongxin.com/6652.html\n\n  5、 实现串联动画：使用animation，定义好需要的动画，想怎么玩怎么玩，缺点是无法动态设置值，如果需要动态设置值，只能用js动态添加、修改css3的@keyframes。使用transition，监听transitionend，在事件内再执行新动画，缺点是动画复杂，事件串联复杂，并且要做好判断，绑定、解绑，防止事件重复执行，或者无法串联执行，另外cancel后不会再执行。使用transitionend注意以下几点：\n  https://zhuanlan.zhihu.com/p/481680437\n\n  1、如果监听元素有多个属性都有transition，transitionend会在多个属性完成后多次触发。\n  解决方法：通过注册时提供实际监控的属性值与事件触发时e.propertyName比较来控制执行哪个。\n\n  2、如果监听元素的children也有transition，transitionend也会在children的transition完成后处触发。\n  解决方法：可以通过判断e.target === element或e.currentTarget来判断是不是当前监听元素。\n\n  3、快速连续触发设置transition事件，可以在动画未执行完触发的transitioncancel事件内解绑上一次的transitionend，保证只有当前这次的transitionend可运行，同时当前transitionend执行后也解绑当前的保证只会执行一次。\n  但是存在一种概率较低的情况：过渡动画刚执行完毕（即不会触发transitioncancel），本次transitionend还没来得及触发执行（因为transitionend触发和最后一帧动画结束并不是同一事件循环），此时设置transition的方法抢先执行进来设置过渡动画，这个时候上一次的transitionend事件是无法被清掉的。\n  解决方法：在每次注册transitionend时把之前已绑定transitionend事件全部清掉，同时当前transitionend执行后解绑。可以通过元素属性事件注册，而不使用addEventListener，即element.ontransitionend = ()=>{}，因为这种注册方式，永远都是替换掉上一次的事件，只有当前这一个。\n*/\nexport function onOnceTransitionEnd(\n  ele: HTMLElement,\n  transitionEnd: (e: TransitionEvent) => void,\n  propertyName: string = 'transform',\n) {\n  if (ele) {\n    ele.ontransitionend = (e: TransitionEvent) => {\n      // 阻止冒泡及后续事件触发\n      e.stopImmediatePropagation();\n      // 只有触发事件的目标元素与绑定的目标元素一致，同时触发事件的属性与需要的属性相同，才会执行事件并解绑\n      if (e.target === ele && e.propertyName === propertyName) {\n        ele.ontransitionend = null;\n        transitionEnd(e);\n      }\n    };\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-22 16:41:45\n * @Description: ******\n */\n\nimport EventTarget, { type IBaseEvent } from './event';\nimport agent, {\n  onOnceTransitionEnd,\n  type AgentEvent,\n  type IAgent,\n} from './agent';\nimport {\n  getDistance,\n  rebounceSize,\n  getMarginSize,\n  getIconType,\n  addClass,\n  removeClass,\n  setStyle,\n  styleInject,\n} from './util';\nimport css from './css';\n\nconst generateEl = function generateEl(\n  container: HTMLElement | string,\n  className?: string,\n) {\n  let tempContainer: HTMLElement | null;\n  try {\n    if (typeof container === 'string') {\n      tempContainer = document.querySelector(container);\n    } else {\n      tempContainer = container;\n    }\n  } catch (e) {\n    tempContainer = null;\n  }\n  if (!tempContainer || !(tempContainer instanceof HTMLElement)) {\n    throw new Error('Please pass in a valid container element...');\n  }\n  styleInject(css);\n  const viewElement = addClass(\n    document.createElement('div'),\n    `hjs-slideview ${className || ''}`,\n  );\n  const leftElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__left',\n  );\n  viewElement.appendChild(leftElement);\n  const rightElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__right',\n  );\n  viewElement.appendChild(rightElement);\n  const contentElement = addClass(\n    document.createElement('div'),\n    'hjs-slideview__content',\n  );\n  viewElement.appendChild(contentElement);\n  tempContainer.innerHTML = '';\n  tempContainer.appendChild(viewElement);\n  return [viewElement, contentElement, leftElement, rightElement];\n};\n\nconst confirmStyle = function (\n  actionStyle: ActionStyle,\n  actionItem: MergeActionItem,\n  isConfirm: boolean = false,\n) {\n  const {\n    wrapElement,\n    element,\n    confirm = {}, // isConfirm为true，confirm必然存在\n    ...rest\n  } = actionItem;\n  let { text, icon, color, background, className } = rest;\n  if (isConfirm) {\n    // 如果icon不存在，则不存在该确认，如果icon存在，则取确认icon，若确认icon不存在，则仍然取icon\n    icon = icon && (confirm.icon || icon);\n    text = text && (confirm.text || text);\n    color = color && (confirm.color || color);\n    background = background && (confirm.background || background);\n    className = className && (confirm.className || className);\n  }\n  setStyle(element, {\n    color: color || 'inherit',\n    background: background || 'inherit',\n    boxShadow:\n      actionStyle === 'round'\n        ? `0px 0px 9px -3px ${background || 'inherit'}`\n        : 'none',\n  });\n  if (actionStyle !== 'round') {\n    setStyle(wrapElement, {\n      background: background || 'inherit',\n    });\n  }\n  addClass(\n    removeClass(\n      element,\n      isConfirm\n        ? rest.className || ''\n        : confirm.className || rest.className || '',\n    ),\n    className || '',\n  );\n  if (icon) {\n    const iconEl = element.firstChild as HTMLElement;\n    const type = getIconType(icon);\n    if (type === 'img') {\n      (iconEl as HTMLImageElement).src = icon;\n    } else if (type === 'i') {\n      iconEl.className = icon;\n    } else {\n      iconEl.innerHTML = icon;\n    }\n  }\n  if (text) {\n    const textEl = element.lastChild as HTMLElement;\n    textEl.innerText = text;\n  }\n};\n\nconst cTransform = function cTransform(\n  this: SlideView,\n  confirm: Confirm,\n  translate: number = 0,\n) {\n  const { contentEl, leftActions, rightActions, duration, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const { index, direction } = confirm;\n  // 这里注意：在调用hideButton隐藏按钮之后再执行该恢复方法，_translate等于0了，所以无需再判断\n  const factor =\n    this._translate === 0 ? 0 : this._translate / Math.abs(this._translate);\n  const aTransform = ({ items }: MergeAction) => {\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    for (let i = items.length - 1; i >= 0; i--) {\n      const { wrapElement, width } = items[i];\n      if (items.length === 1) {\n        // 如果是仅有一个按钮，确认的时候设置2倍变化\n        setStyle(contentEl, {\n          transform: `translate3d(${\n            translate !== 0 ? translate : this._translate\n          }px, 0, 0)`,\n          transition,\n        });\n      }\n      if (i === index) {\n        let transformx = 0;\n        if (translate !== 0) {\n          transformx = translate;\n        } else {\n          transformx = (width + transformTotal) * factor;\n        }\n        setStyle(wrapElement, {\n          transform: `translate3d(${transformx}px, 0, 0)`,\n          transition,\n        });\n      } else if (i > index) {\n        let transformx = 0;\n        if (translate === 0) {\n          transformx = (width + transformTotal) * factor;\n        }\n        // 大于index的一定都是压在上面的，压在上面的需要收起，而小于index压在下面的不需要变化\n        setStyle(wrapElement, {\n          transform: `translate3d(${transformx}px, 0, 0)`,\n          transition,\n        });\n      }\n      transformTotal += width;\n    }\n  };\n  // 放入下一帧执行\n  window.requestAnimationFrame(() => {\n    if (direction === 'left' && leftActions) {\n      aTransform(leftActions);\n    }\n    if (direction === 'right' && rightActions) {\n      aTransform(rightActions);\n    }\n  });\n};\n\nconst transform = function transform(\n  this: SlideView,\n  translate: number,\n  duration: number = this.duration,\n) {\n  const { contentEl, leftActions, rightActions, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const aTransform = ({ items, overallSize }: MergeAction) => {\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    const len = items.length - 1;\n    for (let i = len; i >= 0; i--) {\n      const { wrapElement, width } = items[i];\n      // 当前按钮需要滑出的占比距离\n      const transformb = (width / overallSize) * translate;\n      // 当前按钮滑出距离应该是占比距离+前面已有按钮的占比距离\n      const transformx = transformb + transformTotal;\n      // 左边或右边的最后一个按钮\n      setStyle(wrapElement, {\n        transform: `translate3d(${\n          i === len && this._overshooting ? translate : transformx\n        }px, 0, 0)`,\n        transition,\n      });\n      // 累计已滑出按钮的占比距离\n      transformTotal += transformb;\n    }\n  };\n  // 放入下一帧执行（move的时候使用这个节能而且不抖动）\n  window.requestAnimationFrame(() => {\n    setStyle(contentEl, {\n      transform: `translate3d(${translate}px, 0, 0)`,\n      transition,\n    });\n    // 这里是左右都进行变换，还是说根据translate的正负来判断只变换某一边的呢（因为另一边处于隐藏状态无需变换耗能）？\n    // 答案是都要进行变换，因为存在一种情况，即滑动太快，left的translate还未走到0（没有完全收起），下一把就right了。\n    if (leftActions) {\n      aTransform(leftActions);\n    }\n    if (rightActions) {\n      aTransform(rightActions);\n    }\n  });\n};\n\nconst confirmCancel = function (this: SlideView) {\n  // 如果当前处于按钮确认状态，隐藏之前需要先取消\n  if (this._confirming) {\n    // 因为hide的时候会进行变换，所以不需要再cTransform\n    const { index, direction } = this._confirming;\n    const actions =\n      direction === 'left'\n        ? this.leftActions\n        : direction === 'right'\n        ? this.rightActions\n        : null;\n    if (actions) {\n      const item = actions.items[index];\n      if (index !== actions.items.length - 1 || !this._overshooting) {\n        setStyle(item.element, {\n          width: item.width - item.margin,\n        });\n      }\n      confirmStyle(actions.style, item);\n    }\n    this._confirming = null;\n  }\n};\n\nconst start = function start(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions } = this;\n  if (\n    (!leftActions || leftActions.disable) &&\n    (!rightActions || rightActions.disable)\n  ) {\n    return;\n  }\n  const { point } = e;\n  this._isMoving = true;\n  this._startPoint = point;\n  this._startTranslate = this._translate;\n  this._timeStamp = 0;\n};\nconst move = function move(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions, friction } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { point: currentPoint, sourceEvent } = e;\n  const currentX = currentPoint[0] - this._startPoint[0];\n  const currentY = currentPoint[1] - this._startPoint[1];\n  // 左侧45度角为界限，大于45度则允许水平滑动\n  if (Math.abs(currentX) - Math.abs(currentY) < 0) {\n    return;\n  }\n  // 滑动距离\n  let moveEdge = false;\n  let translate = 0;\n  let duration = 0;\n  let currentTranslate = this._startTranslate + currentX;\n  const actions =\n    currentTranslate > 0\n      ? leftActions\n      : currentTranslate < 0\n      ? rightActions\n      : null;\n  if (actions && !actions.disable) {\n    const vector = currentTranslate / Math.abs(currentTranslate);\n    const overshoot = actions.overshoot;\n    const overshootEdgeSize = actions.overshootEdgeSize;\n    const overshootSize = vector * actions.overshootSize;\n    const overallSize = vector * actions.overallSize;\n    if (overshoot) {\n      // 如果手指从容器一半之外开始移动，只要手指移动到接近边缘，就可以overshoot\n      if (this._offset) {\n        let deltaSize = 0;\n        const currentOffset = currentPoint[0] - this._offset[0];\n        const startOffset = this._startPoint[0] - this._offset[0];\n        const maxOffset = this._elWidth * 0.5;\n        if (currentTranslate < 0) {\n          deltaSize = currentOffset - overshootEdgeSize;\n          moveEdge = startOffset > maxOffset && deltaSize < 0;\n        } else {\n          deltaSize = currentOffset - (this._elWidth - overshootEdgeSize);\n          moveEdge = startOffset < maxOffset && deltaSize > 0;\n        }\n        if (moveEdge) {\n          this._startPoint = currentPoint;\n          currentTranslate = overshootSize + deltaSize;\n        }\n      }\n      const timeStamp =\n        sourceEvent instanceof MouseEvent\n          ? sourceEvent.timeStamp\n          : sourceEvent.sourceEvent.timeStamp;\n      // currentTranslate和overshootSize一定是同正或同负，直接比较数值大小，即currentTranslate超出overshootSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(overshootSize)) {\n        if (!this._overshooting) {\n          this._timeStamp = timeStamp;\n          this._overshooting = true;\n          const { element: el, margin } =\n            actions.items[actions.items.length - 1];\n          setStyle(el, {\n            width: actions.style === 'round' ? this._elWidth - margin : 'auto',\n          });\n        }\n        translate =\n          rebounceSize(currentTranslate - overshootSize, friction) +\n          overshootSize;\n        duration = Math.max(\n          0,\n          this.duration - (timeStamp - this._timeStamp) / 1000,\n        );\n      } else {\n        if (this._overshooting) {\n          this._timeStamp = timeStamp;\n          this._overshooting = false;\n          const {\n            element: el,\n            width,\n            margin,\n          } = actions.items[actions.items.length - 1];\n          setStyle(el, {\n            width: width - margin,\n          });\n        }\n        // 这里需不需要来一点阻尼？感觉苹果是有的\n        if (Math.abs(currentTranslate) >= Math.abs(overallSize)) {\n          // 这里不能根据数值大小来比较，因为this._startTranslate和overallSize不一定是同正或同负\n          const _overallSize =\n            currentTranslate < 0\n              ? Math.min(overallSize, this._startTranslate)\n              : Math.max(overallSize, this._startTranslate);\n          translate =\n            rebounceSize(currentTranslate - _overallSize, 0.95) + _overallSize;\n        } else {\n          translate = currentTranslate;\n        }\n        duration = Math.max(\n          0,\n          this.duration / 2 - (timeStamp - this._timeStamp) / 1000,\n        );\n      }\n    } else {\n      // currentTranslate和overallSize一定是同正或同负，直接比较数值大小，即currentTranslate超出overallSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(overallSize)) {\n        // 这里不能根据数值大小来比较，因为this._startTranslate和overallSize不一定是同正或同负\n        const _overallSize =\n          currentTranslate < 0\n            ? Math.min(overallSize, this._startTranslate)\n            : Math.max(overallSize, this._startTranslate);\n        translate =\n          rebounceSize(currentTranslate - _overallSize, friction) +\n          _overallSize;\n      } else {\n        translate = currentTranslate;\n      }\n    }\n  } else {\n    this._startPoint = currentPoint;\n    this._startTranslate = 0;\n    this._timeStamp = 0;\n  }\n  translate = Math.min(this._elWidth, Math.max(-this._elWidth, translate));\n  if (moveEdge) {\n    this._startTranslate = translate;\n  }\n  this._translate = translate;\n  transform.apply(this, [translate, duration]);\n  confirmCancel.apply(this, []);\n  return false; // 禁止垂直方向的滑动\n};\n\nconst end = function end(this: SlideView, e: AgentEvent) {\n  const { leftActions, rightActions } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const startPoint = this._startPoint;\n  const currentPoint = e.point;\n  this._isMoving = false;\n  this._startTranslate = 0;\n  this._startPoint = null;\n  this._timeStamp = 0;\n  // 滑动距离为0（表示本身就是隐藏状态）或没有任何滑动（只是点了一下）不做任何操作\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动\n  if (this._translate === 0 || getDistance(startPoint, currentPoint) < 3) {\n    return;\n  }\n  const actions =\n    this._translate > 0\n      ? leftActions\n      : this._translate < 0\n      ? rightActions\n      : null;\n  if (actions) {\n    // 进行覆盖滑出行为\n    if (this._overshooting) {\n      buttonSlide.apply(this, [\n        e,\n        {\n          index: actions.items.length - 1,\n          direction: this._translate > 0 ? 'left' : 'right',\n        },\n      ]);\n      return;\n    }\n    // 右边按钮展示状态下往右滑动了，或者右边按钮未展示情况下，左滑出的距离不足滑出阈值\n    const delta = currentPoint[0] - startPoint[0];\n    if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(this._translate) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    }\n  }\n  // 其它情况均为展示按钮\n  this.show(this._translate > 0 ? 'left' : 'right');\n};\n\nconst longPress = function longPress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && target !== contentEl) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发长按事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('longPress', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst doublePress = function doublePress(this: SlideView, e: AgentEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && target !== contentEl) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容双按压事件\n  if (target === contentEl) {\n    // 收起时候则触发双按事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('doublePress', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n};\n\nconst press = function press(this: SlideView, e: AgentEvent) {\n  const { contentEl, leftEl, rightEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (\n    target !== currentTarget &&\n    target !== contentEl &&\n    target !== leftEl &&\n    target !== rightEl\n  ) {\n    target = target.parentNode as HTMLElement;\n  }\n  // 触发内容元素按压事件\n  if (target === contentEl) {\n    // 没有使用this._direction判断，是因为该值变化是要动画结束后变化，this._translate变化是动画执行前\n    // 使用this._translate判断可以保证，收起动画时点击可执行，展开动画执行时点击不可执行，this._direction正好相反\n    // 收起时候则触发按压事件，未收起则收起\n    if (_translate === 0) {\n      this.trigger('press', {\n        currentTarget: contentEl,\n        timeStamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n  // 触发左边按钮按压事件\n  else if (target === leftEl) {\n    buttonPress.apply(this, [e, 'left']);\n  }\n  // 触发右边按钮按压事件\n  else if (target === rightEl) {\n    buttonPress.apply(this, [e, 'right']);\n  }\n};\n\nconst buttonPress = function buttonPress(\n  this: SlideView,\n  event: AgentEvent,\n  direction: Direction,\n) {\n  const { leftActions, rightActions, rebounce } = this;\n  if (\n    this._translate === 0 ||\n    ((!leftActions || leftActions.disable) &&\n      (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { sourceEvent, currentTarget } = event;\n  let target = (\n    sourceEvent instanceof MouseEvent\n      ? sourceEvent.target\n      : sourceEvent.sourceEvent.target\n  ) as HTMLElement;\n  while (target !== currentTarget && !target.getAttribute('data-index')) {\n    target = target.parentNode as HTMLElement;\n  }\n  const index = +(target.getAttribute('data-index') || -1);\n  const actions: MergeAction | null =\n    direction === 'left' ? leftActions : rightActions;\n  if (index < 0 || !actions || actions.disable) {\n    return;\n  }\n  const confirm: Confirm = { index, direction };\n  const item = actions.items[index];\n  // 最后一个按钮单独处理\n  if (index === actions.items.length - 1 && actions.overshoot) {\n    this._overshooting = true;\n    setStyle(item.element, {\n      width: actions.style === 'round' ? this._elWidth - item.margin : 'auto',\n    });\n    buttonSlide.apply(this, [event, confirm, target]);\n    return;\n  }\n  let eventType: IEventType = 'buttonPress';\n  // 确认之后二次点击（确保当前点击的即是正在确认的）\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    // 点击按钮后隐藏按钮（隐藏按钮里已处理取消确认情况）\n    if (item.collapse) {\n      this.hide();\n    } else {\n      // 取消确认\n      setStyle(item.element, {\n        width: item.width - item.margin,\n      });\n      confirmStyle(actions.style, item);\n      cTransform.apply(this, [confirm]);\n      this._confirming = null;\n    }\n  } else {\n    if (item.confirm) {\n      // 如果是仅有一个按钮，确认的时候宽度设置2倍变化，但是不能超过最大宽度\n      let translate = this._translate;\n      if (actions.items.length === 1) {\n        translate =\n          (Math.min(Math.abs(2 * this._translate), this._elWidth) * translate) /\n          Math.abs(translate);\n      }\n      this._confirming = confirm;\n      setStyle(item.element, {\n        width: Math.abs(translate) - item.margin,\n      });\n      confirmStyle(actions.style, item, true);\n      // 设置回弹效果，第一个按钮和圆型按钮不需要\n      if (rebounce > 0 && actions.style !== 'round' && index !== 0) {\n        onOnceTransitionEnd(item.wrapElement, () => {\n          // 该事件执行时确保当前还处于确认状态，否则不能再执行\n          if (\n            this._confirming &&\n            this._confirming.index === confirm.index &&\n            this._confirming.direction === confirm.direction\n          ) {\n            cTransform.apply(this, [confirm, translate]);\n          }\n        });\n        cTransform.apply(this, [\n          confirm,\n          translate + (rebounce * translate) / Math.abs(translate),\n        ]);\n      } else {\n        cTransform.apply(this, [confirm, translate]);\n      }\n      eventType = 'buttonConfirm';\n    } else {\n      // 无需确认的点击（如果collapse，就点击后隐藏按钮，否则不做任何处理）\n      if (item.collapse) {\n        this.hide();\n      }\n    }\n  }\n  this.trigger(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target,\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n};\n\nconst buttonSlide = function buttonSlide(\n  this: SlideView,\n  event: AgentEvent,\n  confirm: Confirm,\n  target?: HTMLElement,\n) {\n  const { leftActions, rightActions } = this;\n  const { index, direction } = confirm;\n  const actions =\n    direction === 'left'\n      ? leftActions\n      : direction === 'right'\n      ? rightActions\n      : null;\n  if (this._translate === 0 || !actions || actions.disable) {\n    return;\n  }\n  const item = actions.items[index];\n  let eventType: IEventType = 'buttonPress';\n  // overshoot之后二次点击（确保当前点击的即是正在确认的）\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    confirmStyle(actions.style, item);\n    this._confirming = null;\n    // 确认后只做取消确认的样式改变，不做收起的改变（忽略了collapse）后续行为交给用户，让其决定否调用hide或show\n  } else {\n    // 无论是否确认都需要overshoot\n    const translate =\n      (this._translate * this._elWidth) / Math.abs(this._translate);\n    // 已经overshoot的情况就不需要再overshoot\n    if (this._translate !== translate) {\n      this._translate = translate;\n      transform.apply(this, [translate]);\n    }\n    // 需要确认，触发确认事件\n    if (item.confirm) {\n      this._confirming = confirm;\n      confirmStyle(actions.style, item, true);\n      eventType = 'buttonConfirm';\n    } else {\n      // 不做收起的改变（忽略了collapse）后续行为交给用户，让其决定否调用hide或show\n    }\n  }\n  this.trigger(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target || item.element,\n    timeStamp: Date.now(),\n    sourceEvent: event,\n  });\n};\n\nclass SlideView extends EventTarget<\n  HTMLElement,\n  AgentEvent | null,\n  IEventType,\n  IEvent\n> {\n  element: HTMLElement | null; // 滑动视图元素\n  contentEl: HTMLElement | null; // 内容元素\n  leftEl: HTMLElement | null; // 左按钮元素\n  rightEl: HTMLElement | null; // 右按钮元素\n  leftActions: MergeAction | null = null; // 按钮集合\n  rightActions: MergeAction | null = null; // 按钮集合\n  friction: number = 0.5; // 摩擦因子(0-1的值)\n  rebounce: number = 12; // 弹性尺寸\n  duration: number = 0.4; // 按钮滑出动画时间（秒级）\n  timing: Timing = 'ease'; // 滑动时动画的函数\n  _elWidth: number = 0; // 视图宽度\n  _offset: number[] | null = null; // 手指放上后滑动视图元素距离屏幕左边和上边的距离即[offsetLeft,offsetTop]\n  _destory: boolean = false; //是否销毁\n  _direction: Direction = 'none'; // 当前展示的是哪个方向按钮\n  _confirming: Confirm | null = null; // 当前正在确认的按钮\n  _overshooting: boolean = false; // 当前是否处于overshoot状态\n  _translate: number = 0; // 元素当前位移值\n  _startTranslate: number = 0; // 手指放上那一刻，translate值\n  _startPoint: number[] | null = null; // 手指放上后初始点\n  _timeStamp: number = 0; // 移动时的时间戳\n  _isMoving: boolean = false; // 是否正在滑动\n  _agents: IAgent | null;\n  constructor(options: IOption) {\n    super();\n    const {\n      className,\n      container,\n      content,\n      friction,\n      rebounce,\n      duration,\n      timing,\n      leftActions,\n      rightActions,\n    } = options;\n    const [element, contentEl, leftEl, rightEl] = generateEl(\n      container,\n      className,\n    );\n    this.element = element;\n    const { width, left, top } = element.getBoundingClientRect();\n    this._elWidth = width;\n    this._offset = [left, top];\n    this.contentEl = contentEl;\n    this.leftEl = leftEl;\n    this.rightEl = rightEl;\n    this.setContent(content);\n    this.setFriction(friction);\n    this.setRebounce(rebounce);\n    this.setDuration(duration);\n    this.setTiming(timing);\n    this.setActions(leftActions, 'left');\n    this.setActions(rightActions, 'right');\n    this._agents = agent(element, {\n      start: start.bind(this),\n      move: move.bind(this),\n      end: end.bind(this),\n      press: press.bind(this),\n      longPress: longPress.bind(this),\n      doublePress: doublePress.bind(this),\n    });\n  }\n  setContent(content: HTMLElement | string = '') {\n    if (this._destory || !this.contentEl) {\n      return;\n    }\n    if (typeof content === 'string' && !content.match(/^[#|.].+/)) {\n      this.contentEl.innerHTML = content;\n      return;\n    }\n    try {\n      let tempChild;\n      if (typeof content === 'string') {\n        tempChild = document.querySelector(content);\n      } else {\n        tempChild = content;\n      }\n      if (tempChild) {\n        this.contentEl.innerHTML = '';\n        this.contentEl.appendChild(tempChild);\n      }\n    } catch (e) {}\n  }\n  setFriction(friction: number = 0.5) {\n    if (this._destory) {\n      return;\n    }\n    // friction: 不传为默认值0.5，传小于0的都为0，大于1的都为1，传非数字，则属于无效设置\n    if (typeof friction === 'number') {\n      this.friction = Math.min(1, Math.max(0, friction));\n    }\n  }\n  setRebounce(rebounce: number = 12) {\n    if (this._destory) {\n      return;\n    }\n    // rebounce: 不传为默认值12，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof rebounce === 'number') {\n      this.rebounce = Math.max(0, rebounce);\n    }\n  }\n  setDuration(duration: number = 0.4) {\n    if (this._destory) {\n      return;\n    }\n    // duration: 不传为默认值0.4，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof duration === 'number') {\n      this.duration = Math.max(0, duration);\n    }\n  }\n  setTiming(timing: Timing = 'ease') {\n    if (this._destory) {\n      return;\n    }\n    // timing: 不传为默认值ease\n    this.timing = timing;\n  }\n  setDisable(disable: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // disable: 不传为默认值true，传非布尔，则无效设置\n    if (typeof disable === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.disable = disable;\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.disable = disable;\n      }\n    }\n  }\n  setOvershoot(overshoot: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值true，传非布尔，则无效设置\n    if (typeof overshoot === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.overshoot = overshoot;\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.overshoot = overshoot;\n      }\n    }\n  }\n  setThreshold(threshold: number = 40, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值40，传小于0的都为0，传非数字，则无效设置\n    if (typeof threshold === 'number') {\n      const _threshold = Math.max(0, threshold);\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.threshold = Math.min(\n          _threshold,\n          this.leftActions.overallSize,\n        );\n      }\n      if (\n        this.rightActions &&\n        (direction === 'both' || direction === 'right')\n      ) {\n        this.rightActions.threshold = Math.min(\n          _threshold,\n          this.rightActions.overallSize,\n        );\n      }\n    }\n  }\n  setActions(actions: IActionOption = {}, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // actions: 不传为默认值{}，不传，传其它，只要没有items的，都认为是删除按钮\n    const _setActions = (_direction: 'left' | 'right') => {\n      const parentEl = this[`${_direction}El`];\n      if (!parentEl) {\n        return;\n      }\n      parentEl.innerHTML = '';\n      this[`${_direction}Actions`] = null;\n      if (actions.items && actions.items.length > 0) {\n        const {\n          className,\n          style = 'rect',\n          disable = false,\n          overshoot = false,\n          overshootEdgeSize = 80,\n          overshootFreeSize = 30,\n          overallFreeSize = 60,\n          threshold = 40,\n          items,\n        } = actions;\n        const actionEl = addClass(\n          document.createElement('div'),\n          `hjs-slideview__actions hjs-slideview__actions__${style} ${\n            className || ''\n          }`,\n        );\n        parentEl.appendChild(actionEl);\n        let totalWidth = 0;\n        let newItems = items.map((item, index) => {\n          const { text, icon } = item;\n          const wrapEl = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action__wrap',\n          );\n          const itemEl = addClass(\n            document.createElement('div'),\n            'hjs-slideview__action',\n          );\n          itemEl.setAttribute('data-index', String(index));\n          if (icon) {\n            itemEl.appendChild(\n              addClass(\n                document.createElement(getIconType(icon)),\n                'hjs-slideview__action__icon',\n              ),\n            );\n          }\n          if (text) {\n            itemEl.appendChild(\n              addClass(\n                document.createElement('span'),\n                'hjs-slideview__action__text',\n              ),\n            );\n          }\n          wrapEl.appendChild(itemEl);\n          actionEl.appendChild(wrapEl);\n          const actionItem: MergeActionItem = {\n            ...item,\n            wrapElement: wrapEl,\n            element: itemEl,\n            width: 0,\n            margin: 0,\n          };\n          // 设置非确认时的样式和内容\n          confirmStyle(style, actionItem);\n          const margin = getMarginSize(itemEl);\n          const width = itemEl.getBoundingClientRect().width + margin;\n          totalWidth += width;\n          return {\n            ...actionItem,\n            width,\n            margin,\n          };\n        });\n        const overallSize = Math.min(\n          totalWidth,\n          Math.max(this._elWidth - overallFreeSize, 0),\n        );\n        newItems = newItems.map((item) => {\n          const { element, width, margin } = item;\n          const newWidth = (overallSize * width) / totalWidth;\n          setStyle(element, { width: newWidth - margin });\n          return {\n            ...item,\n            width: newWidth,\n          };\n        });\n        this[`${_direction}Actions`] = {\n          style,\n          disable,\n          overshoot,\n          overallSize,\n          overshootSize: Math.min(\n            this._elWidth,\n            Math.max(this._elWidth - overshootFreeSize, overallSize),\n          ),\n          overshootEdgeSize: Math.min(\n            this._elWidth * 0.5,\n            Math.max(0, overshootEdgeSize),\n          ),\n          threshold: Math.min(overallSize, Math.max(threshold, 0)),\n          items: newItems,\n        };\n      }\n    };\n    // 重新设置按钮时应该先收起（因为刚插入的按钮是没有transform的，当然可以根据收起状态来计算，不想计算了）\n    const shown =\n      this._translate > 0 ? 'left' : this._translate < 0 ? 'right' : 'none';\n    this.hide().then(() => {\n      // direction传其它，则属于无效设置\n      if (direction === 'both' || direction === 'left') {\n        _setActions('left');\n      }\n      if (direction === 'both' || direction === 'right') {\n        _setActions('right');\n      }\n      if (shown !== 'none') {\n        this.show(shown);\n      }\n    });\n  }\n  toggle(direction: Direction = 'right') {\n    if (this._destory) {\n      return;\n    }\n    return this._translate === 0 ? this.show(direction) : this.hide();\n  }\n  show(direction: Direction = 'right') {\n    return new Promise<void>((resolve) => {\n      const { contentEl, rebounce, leftActions, rightActions } = this;\n      if (\n        this._destory ||\n        !contentEl ||\n        ((!leftActions || leftActions.disable) &&\n          (!rightActions || rightActions.disable))\n      ) {\n        resolve();\n        return;\n      }\n      let __direction = direction;\n      if (!leftActions || leftActions.disable) {\n        __direction = 'right';\n      }\n      if (!rightActions || rightActions.disable) {\n        __direction = 'left';\n      }\n      const actions = __direction === 'left' ? leftActions : rightActions;\n      const factor = __direction === 'left' ? 1 : -1;\n      const maxTranslate = !actions ? 0 : actions.overallSize * factor;\n      if (this._translate === maxTranslate) {\n        resolve();\n        return;\n      }\n      const show = (rebSize: number = 0) => {\n        const translate = maxTranslate + rebSize;\n        this._overshooting = false;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        confirmCancel.apply(this, []);\n        if (!rebSize) {\n          onOnceTransitionEnd(contentEl, () => {\n            resolve();\n            if (this._direction !== __direction) {\n              this.trigger('show', {\n                direction: __direction,\n                currentTarget: contentEl,\n                timeStamp: Date.now(),\n                sourceEvent: null,\n              });\n              this._direction = __direction;\n            }\n          });\n        }\n      };\n      // 设置回弹效果并且已滑动宽度小于最大宽度时才有弹性效果\n      if (\n        rebounce > 0 &&\n        ((maxTranslate > 0 && this._translate < maxTranslate) ||\n          (maxTranslate < 0 && this._translate > maxTranslate))\n      ) {\n        onOnceTransitionEnd(contentEl, () => show());\n        show(rebounce * factor);\n      } else {\n        show();\n      }\n    });\n  }\n  hide() {\n    return new Promise<void>((resolve) => {\n      const { contentEl, leftActions, rightActions } = this;\n      if (\n        this._destory ||\n        this._translate === 0 ||\n        !contentEl ||\n        ((!leftActions || leftActions.disable) &&\n          (!rightActions || rightActions.disable))\n      ) {\n        resolve();\n        return;\n      }\n      this._overshooting = false;\n      this._translate = 0;\n      transform.apply(this, [0]);\n      // 在收起动画期间，连续执行隐藏方法，会主动cancel上一次transition，保证只执行最后一次\n      onOnceTransitionEnd(contentEl, () => {\n        resolve();\n        // hide在隐藏之后再处理confirm\n        confirmCancel.apply(this, []);\n        if (this._direction !== 'none') {\n          this.trigger('hide', {\n            direction: 'none',\n            currentTarget: contentEl,\n            timeStamp: Date.now(),\n            sourceEvent: null,\n          });\n          this._direction = 'none';\n        }\n      });\n    });\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 销毁底层事件\n    if (this._agents) {\n      this._agents.destory();\n      this._agents = null;\n    }\n    if (this.element) {\n      // 删除元素，用户可以在调用该方法之前加一个删除动画\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }\n    this.contentEl = null;\n    this.leftEl = null;\n    this.rightEl = null;\n    this.leftActions = null;\n    this.rightActions = null;\n    this._confirming = null;\n    this._startPoint = null;\n    this._offset = null;\n    this._destory = true;\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'both' | 'none';\n\nexport type Timing =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | `cubic-bezier(${number},${number},${number},${number})`;\n\nexport type ActionStyle = 'round' | 'rect';\n\nexport type Confirm = {\n  direction: Direction;\n  index: number;\n};\n\ntype MergeActionItem = {\n  wrapElement: HTMLElement; //当前按钮包装元素\n  element: HTMLElement; //当前按钮元素\n  width: number; // 当前按钮的宽度\n  margin: number; // 当前按钮的左右margin和\n} & IActionItem;\n\ntype MergeAction = {\n  style: ActionStyle; // 按钮风格\n  disable: boolean; // 禁用按钮\n  threshold: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootSize: number; // overshoot时超过这尺寸，最后一个按钮直接滑动到这个尺寸\n  overshootEdgeSize: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overallSize: number; // 所有按钮展开情况下总尺寸\n  items: MergeActionItem[]; // 按钮配置\n};\n\nexport type IActionItem = {\n  className?: string; // 按钮自定义样式\n  text?: string; // 按钮文字\n  icon?: string; // 按钮图标（会根据传入的字符串形式判断是img还是svg元素或是字体icon）\n  color?: string; // 按钮文字图标颜色（img图标除外）\n  background?: string; //按钮背景颜色\n  confirm?: {\n    // 按钮在确认的时候替代的内容样式，不传则没有确认环节，只传{}则有确认环节，但内容样式不改变\n    className?: string; // 按钮自定义样式\n    text?: string; // 按钮文字\n    icon?: string; // 按钮图标\n    color?: string; // 按钮文字图标颜色\n    background?: string; //按钮背景颜色\n  }; // 按钮确认时的信息\n  collapse?: boolean; // 按钮点击后是否收起\n  data?: any; //按钮携带数据\n};\n\nexport type IActionOption = {\n  className?: string; // 按钮自定义样式\n  style?: ActionStyle; // 按钮风格\n  disable?: boolean; // 禁用按钮\n  threshold?: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot?: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootEdgeSize?: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overshootFreeSize?: number; // 滑动出来的尺寸占据组件容器尺寸之后的剩余尺寸（小于这个尺寸就overshoot）\n  overallFreeSize?: number; // 所有按钮正常展开情况下总宽度占据组件容器尺寸之后的剩余尺寸（不能小于这个尺寸）\n  items?: IActionItem[]; // 按钮配置\n};\n\nexport type IOption = {\n  className?: string; // 滑动组件类名控制样式\n  container: HTMLElement | string; // 装载滑动组件的DOM容器\n  content?: HTMLElement | string; // 滑动组件的子节点\n  friction?: number; // 摩擦因子(0-1的值)\n  rebounce?: number; // 弹性尺寸\n  duration?: number; // 滑动时动画的时间（秒级）\n  timing?: Timing; // 滑动时动画的函数\n  leftActions?: IActionOption;\n  rightActions?: IActionOption;\n};\n\nexport type IEventType =\n  | 'show'\n  | 'hide'\n  | 'press'\n  | 'longPress'\n  | 'doublePress'\n  | 'buttonPress'\n  | 'buttonConfirm';\n\nexport type IEvent = {\n  direction?: Direction; // 滑出的是哪边的按钮\n  index?: number; // 点击按钮在按钮集合里的索引\n  data?: any; // 按钮携带的数据\n} & IBaseEvent<HTMLElement, AgentEvent | null>;\n\nexport default SlideView;\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-14 16:23:54\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-03-21 16:50:28\n * @Description: ******\n */\nexport default `\n.hjs-slideview {\n  position: relative;\n  overflow: hidden;\n}\n.hjs-slideview__left {\n  position: absolute;\n  top: 0;\n  right: 100%;\n  bottom: 0;\n  left: auto;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__right {\n  position: absolute;\n  top: 0;\n  right: auto;\n  left: 100%;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__content {\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__actions {\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__action__wrap {\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  display: flex;\n  align-items: center;\n  justify-content: flex-end;\n  box-sizing: border-box;\n  width: 100%;\n  background: transparent;\n}\n.hjs-slideview__left .hjs-slideview__action__wrap {\n  right: 0;\n  left: auto;\n  flex-direction: row;\n}\n.hjs-slideview__right .hjs-slideview__action__wrap {\n  right: auto;\n  left: 0;\n  flex-direction: row-reverse;\n}\n.hjs-slideview__actions__round .hjs-slideview__action__wrap {\n  padding: 10px 0;\n}\n.hjs-slideview__action {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: auto;\n  max-width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  cursor: pointer;\n}\n.hjs-slideview__actions__round .hjs-slideview__action {\n  flex-direction: row;\n  margin: 0 10px;\n  padding: 0 10px;\n  border-radius: 22px;\n  box-shadow: 0px 0px 9px -2px transparent;\n}\n.hjs-slideview__action__icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\n.hjs-slideview__action__text {\n  overflow: hidden;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n}\n.hjs-slideview__actions__rect .hjs-slideview__action__text {\n  width: 100%;\n  text-align: center;\n}\n`;\n"],"names":["EventTarget","this","events","type","handler","single","onceHandler","args","apply","off","on","pool","push","unregistered","i","len","length","splice","event","currentTarget","getDistance","x0","y0","x1","y1","Math","sqrt","pow","getAngle","atan2","PI","getCenter","rebounceSize","value","friction","val","abs","min","max","addClass","ele","className","split","forEach","c","classList","add","setStyle","css","Object","keys","k","key","indexOf","replace","toLowerCase","String","style","setProperty","getMarginSize","element","computed","window","getComputedStyle","parseFloat","marginLeft","marginRight","Number","isNaN","getIconType","url","match","styleId","fixOption","defaultValue","minVal","touchstarted","touches","preventDefault","stopImmediatePropagation","t","p","pageX","pageY","touch","identifier","_touch0","_touch1","_preventTap","_swipeTimeStamp","_preventSingleTap","_preventDoubleTap","_longTapTimer","clearTimeout","trigger","point","timeStamp","Date","now","sourceEvent","setTimeout","waitTime","longTapInterval","_singleTapTimer","_touchFirst","doubleTapDistance","touchmoved","changedTouches","touchMoveDistance","distance1","distance0","scale","angle1","angle0","angle","center1","center0","deltaX","deltaY","touchended","x","y","deltaTime","velocity","swipeVelocity","swipeDistance","direction","delayTime","doubleTapInterval","intervalTime","touchcanceled","scrollcanceled","options","tempElement","document","querySelector","HTMLElement","Error","navigator","maxTouchPoints","started","bind","moved","ended","canceled","addEventListener","scrolled","_destory","removeEventListener","touched","moused","mouse","getAttribute","removeAttribute","onOnceTransitionEnd","transitionEnd","propertyName","ontransitionend","e","target","generateEl","container","tempContainer","createElement","id","appendChild","createTextNode","head","getElementsByTagName","viewElement","leftElement","rightElement","contentElement","innerHTML","confirmStyle","actionStyle","actionItem","isConfirm","wrapElement","confirm","rest","text","icon","color","background","boxShadow","remove","removeClass","iconEl","firstChild","src","lastChild","innerText","cTransform","translate","contentEl","leftActions","rightActions","duration","timing","disable","transition","index","factor","_translate","aTransform","items","transformTotal","width","transform","transformx","requestAnimationFrame","overallSize","transformb","_overshooting","confirmCancel","_confirming","actions","item","margin","start","_isMoving","_startPoint","_startTranslate","_timeStamp","move","currentPoint","currentX","currentY","moveEdge","currentTranslate","vector","overshoot","overshootEdgeSize","overshootSize","_offset","deltaSize","currentOffset","startOffset","maxOffset","_elWidth","MouseEvent","el","_overallSize","end","startPoint","buttonSlide","delta","threshold","hide","show","longPress","parentNode","doublePress","press","leftEl","rightEl","buttonPress","rebounce","eventType","collapse","data","content","getBoundingClientRect","left","top","setContent","setFriction","setRebounce","setDuration","setTiming","setActions","_agents","destory","gesture","Gesture","done","setAttribute","toString","changedTouch","mousedown","mousemoved","mouseupped","dragstarted","capture","passive","clientX","clientY","dx","dy","mousedowned","click","rightclick","dblclick","agent","tempChild","_threshold","_setActions","_direction","parentEl","overshootFreeSize","overallFreeSize","actionEl","totalWidth","newItems","map","wrapEl","itemEl","newWidth","shown","then","Promise","resolve","__direction","maxTranslate","rebSize","removeChild"],"sourceRoot":""}