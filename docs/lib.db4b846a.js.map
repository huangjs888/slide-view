{"version":3,"file":"lib.db4b846a.js","mappings":"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","sources":["webpack:///../src/util.ts","webpack:///../src/events/longTap.ts","webpack:///../src/transform.ts","webpack:///../src/overshoot.ts","webpack:///../src/confirm.ts","webpack:///../src/events/buttonPress.ts","webpack:///../src/events/tap.ts","webpack:///../src/events/doubleTap.ts","webpack:///../src/events/pointerStart.ts","webpack:///../src/events/pointerMove.ts","webpack:///../src/events/pointerEnd.ts","webpack:///../src/events/index.ts","webpack:///../src/index.ts","webpack:///../src/dom.ts","webpack:///../src/css.ts"],"sourcesContent":["/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-03 17:24:27\n * @Description: ******\n */\n\nexport function getIconType(url: string) {\n  if (url) {\n    if (url.match(/\\.(jpe?g|png|gif|bmp|ico|svg|webp)$/) || url.match(/^(data:image\\/)/)) {\n      return 'img';\n    } else if (url.match(/^<svg(.+)?>.+<\\/svg>$/)) {\n      return 'span';\n    }\n  }\n  return 'i';\n}\n\nexport function findTarget(event: any, condition: (t: HTMLElement) => boolean) {\n  let target = event.target;\n  while (condition(target)) {\n    target = target.parentNode;\n  }\n  return target;\n}\n\nexport const getMarginSize = function getMarginSize(element: HTMLElement) {\n  let val = 0;\n  if (element) {\n    const computed = window.getComputedStyle(element, null);\n    if (computed) {\n      val = parseFloat(computed.marginLeft) + parseFloat(computed.marginRight);\n    } else {\n      val = parseFloat(element.style.marginLeft) + parseFloat(element.style.marginRight);\n    }\n    if (Number.isNaN(val)) {\n      val = 0;\n    }\n  }\n  return val;\n};\n\nexport function addClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.add(c));\n  }\n  return ele;\n}\n\nexport function removeClass(ele: HTMLElement, className: string) {\n  if (ele && typeof className === 'string') {\n    className.split(' ').forEach((c) => c && ele.classList.remove(c));\n  }\n  return ele;\n}\n\nconst styleId = 'hjs-slide-view-style';\nexport function cssInject(cssText: string) {\n  let style = document.querySelector(`#${styleId}`);\n  if (!style) {\n    style = document.createElement('style');\n    style.id = styleId;\n    style.appendChild(document.createTextNode(cssText));\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(style);\n  }\n}\n\nconst autoPxReg =\n  /^(?:-border(?:-top|-right|-bottom|-left)?(?:-width|)|(?:-margin|-padding)?(?:-top|-right|-bottom|-left)?|(?:-min|-max)?(?:-width|-height))$/;\nexport function setStyle(ele: HTMLElement, css: { [key: string]: string | number | undefined }) {\n  if (ele) {\n    let cssText = '';\n    Object.keys(css).forEach((k: string) => {\n      const key = k.replace(/([A-Z])/g, '-$1').toLowerCase();\n      if (css[k] !== 0 && !css[k]) {\n        // 删除\n        ele.style.setProperty(key, '');\n      } else {\n        const suffix =\n          typeof css[k] === 'number' && /^[a-z]/.test(key) && autoPxReg.test(`-${key}`) ? 'px' : '';\n        const val = `${css[k]}${suffix}`;\n        cssText += `${key}:${val};`;\n      }\n    });\n    if (cssText) {\n      ele.style.cssText += cssText;\n    }\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:50:35\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport type SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function longTap(this: SlideView, e: GEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(sourceEvent, (t) => t !== currentTarget && t !== contentEl);\n  // 触发内容双按压事件\n  if (contentEl && target === contentEl) {\n    // 收起时候则触发长按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('longPress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:19:55\n * @Description: ******\n */\n\nimport type SlideView from './index';\nimport { type MergeAction, type Confirm } from './index';\nimport { setStyle } from './util';\n\nexport const cTransform = function cTransform(\n  this: SlideView,\n  confirm: Confirm,\n  translate: number = 0,\n) {\n  const { contentEl, leftActions, rightActions, duration, timing } = this;\n  if (\n    !contentEl ||\n    ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const { index, direction } = confirm;\n  // 这里注意：在调用hideButton隐藏按钮之后再执行该恢复方法，_translate等于0了，所以无需再判断\n  const factor = this._translate === 0 ? 0 : this._translate / Math.abs(this._translate);\n  const aTransform = ({ style, items }: MergeAction) => {\n    let delta = 0;\n    if (style === 'drawer') {\n      delta = -this._translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    for (let i = items.length - 1; i >= 0; i--) {\n      const { wrapper, width, gap } = items[i];\n      if (items.length === 1) {\n        // 如果是仅有一个按钮，确认的时候设置2倍变化\n        setStyle(contentEl, {\n          transform: `translate3d(${translate !== 0 ? translate : this._translate}px, 0, 0)`,\n          transition,\n        });\n      }\n      if (i === index) {\n        let transformx = 0;\n        if (translate !== 0) {\n          transformx = translate;\n        } else {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      } else if (i > index) {\n        let transformx = 0;\n        if (translate === 0) {\n          transformx = (width + gap[1] + transformTotal) * factor;\n        }\n        // 大于index的一定都是压在上面的，压在上面的需要收起，而小于index压在下面的不需要变化\n        setStyle(wrapper, {\n          transform: `translate3d(${transformx + delta}px, 0, 0)`,\n          transition,\n        });\n      }\n      transformTotal += width + gap[0] + gap[1];\n    }\n  };\n  if (direction === 'left' && leftActions && !leftActions.disable) {\n    aTransform(leftActions);\n  }\n  if (direction === 'right' && rightActions && !rightActions.disable) {\n    aTransform(rightActions);\n  }\n};\n\nexport const transform = function transform(\n  this: SlideView,\n  translate: number,\n  duration: number = this.duration,\n) {\n  const { leftEl, rightEl, contentEl, leftActions, rightActions, timing } = this;\n  if (\n    !leftEl ||\n    !rightEl ||\n    !contentEl ||\n    ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  let factor = 0;\n  const transition = duration <= 0 ? '' : `transform ${duration}s ${timing} 0s`;\n  const wTransition =\n    duration <= 0 ? '' : `width ${duration}s ${timing} 0s, transform ${duration}s ${timing} 0s`;\n  const aTransform = ({ style, items, element, width: tWidth, gap: tGap }: MergeAction) => {\n    let styleObj = {};\n    let xMove = translate;\n    let delta = 0;\n    if (style === 'drawer') {\n      setStyle(element, {\n        width: Math.max(Math.abs(translate), tWidth),\n        transform: `translate3d(${translate}px, 0, 0)`,\n        transition: wTransition,\n      });\n      xMove = factor * Math.max(tWidth, Math.abs(translate));\n      delta = -translate;\n    }\n    // 前面已有按钮的占比距离\n    let transformTotal = 0;\n    const len = items.length - 1;\n    for (let i = len; i >= 0; i--) {\n      const { wrapper, width, gap, fixedGap } = items[i];\n      // 当前按钮需要滑出的占比距离\n      const transformw = (width / (tWidth - tGap)) * (xMove - factor * tGap);\n      const transformb = transformw + factor * gap[1];\n      // 当前按钮滑出距离应该是占比距离+前面已有按钮的占比距离\n      const transformx = transformb + transformTotal;\n      if (fixedGap && wrapper.style.width !== '100%') {\n        // 只有width不为100%时才设置具体宽度，因为overshoot的时候需要设置100%\n        styleObj = {\n          width: Math.max(Math.abs(transformw), width),\n          transition: wTransition,\n        };\n      }\n      // 左边或右边的最后一个按钮\n      setStyle(wrapper, {\n        transform: `translate3d(${\n          (i === len && this._overshooting ? translate : transformx) + delta\n        }px, 0, 0)`,\n        transition,\n        ...styleObj,\n      });\n      // 累计已滑出按钮的占比距离\n      transformTotal += transformb + factor * gap[0];\n    }\n  };\n  // move事件发生，放入下一帧执行（move的时候使用这个节能而且不抖动）\n  window.requestAnimationFrame(() => {\n    setStyle(contentEl, {\n      transform: `translate3d(${translate}px, 0, 0)`,\n      transition,\n    });\n    // 这里是左右都进行变换，还是说根据translate的正负来判断只变换某一边的呢（因为另一边处于隐藏状态无需变换耗能）？\n    // 答案是都要进行变换，因为存在一种情况，即滑动太快，left的translate还未走到0（没有完全收起），下一把就right了。\n    if (leftActions && !leftActions.disable) {\n      factor = 1;\n      aTransform(leftActions);\n    }\n    if (rightActions && !rightActions.disable) {\n      factor = -1;\n      aTransform(rightActions);\n    }\n  });\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:08:44\n * @Description: ******\n */\n\nimport type SlideView from './index';\nimport { type MergeAction } from './index';\nimport { setStyle } from './util';\n\nexport const overshootChange = function (this: SlideView, actions: MergeAction | null) {\n  if (actions && !actions.disable) {\n    const item = actions.items[actions.items.length - 1];\n    setStyle(item.wrapper, {\n      width: this._overshooting ? '100%' : '',\n    });\n  }\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:29:15\n * @Description: ******\n */\n\nimport type SlideView from './index';\nimport { type MergeActionItem } from './index';\nimport { setStyle, addClass, removeClass, getIconType } from './util';\n\nexport const confirmStyle = function (item: MergeActionItem, isConfirm: boolean = false) {\n  const {\n    wrapper,\n    element,\n    confirm = {}, // isConfirm为true,confirm必然存在\n    ...rest\n  } = item;\n  let { text, icon, color, background, className } = rest;\n  if (isConfirm) {\n    // 如果icon不存在，则不存在该确认，如果icon存在，则取确认icon，若确认icon不存在，则仍然取icon\n    icon = icon && (confirm.icon || icon);\n    text = text && (confirm.text || text);\n    color = color && (confirm.color || color);\n    background = background && (confirm.background || background);\n    className = className && (confirm.className || className);\n  }\n  setStyle(wrapper, {\n    background: background || '',\n    color: color || '',\n  });\n  addClass(\n    removeClass(\n      element,\n      isConfirm ? rest.className || '' : confirm.className || rest.className || '',\n    ),\n    className || '',\n  );\n  if (icon) {\n    const iconEl = element.firstElementChild as HTMLElement;\n    const type = getIconType(icon);\n    if (type === 'img') {\n      (iconEl as HTMLImageElement).src = icon;\n    } else if (type === 'i') {\n      iconEl.className = icon;\n    } else {\n      iconEl.innerHTML = icon;\n    }\n  }\n  if (text) {\n    const textEl = element.lastElementChild as HTMLElement;\n    textEl.innerText = text;\n  }\n};\n\nexport const confirmCancel = function (this: SlideView) {\n  // 如果当前处于按钮确认状态，隐藏之前需要先取消\n  if (this._confirming) {\n    // 因为hide的时候会进行变换，所以不需要再cTransform\n    const { index, direction } = this._confirming;\n    const actions =\n      direction === 'left' ? this.leftActions : direction === 'right' ? this.rightActions : null;\n    if (actions && !actions.disable) {\n      const item = actions.items[index];\n      setStyle(item.element, {\n        width: '',\n      });\n      confirmStyle(item);\n    }\n    this._confirming = null;\n  }\n};\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:10:02\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { onOnceTransitionEnd } from './index';\nimport { type Direction, type MergeAction, type Confirm, type IType } from '../index';\nimport type SlideView from '../index';\nimport { transform, cTransform } from '../transform';\nimport { overshootChange } from '../overshoot';\nimport { confirmStyle } from '../confirm';\nimport { setStyle, findTarget } from '../util';\n\nexport default function buttonPress(this: SlideView, event: GEvent, direction: Direction) {\n  const { element, leftActions, rightActions, rebounce } = this;\n  if (\n    this._translate === 0 ||\n    !element ||\n    ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const { sourceEvent, currentTarget } = event;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && !t.getAttribute('data-index'),\n  );\n  const index = +(target.getAttribute('data-index') || -1);\n  const actions: MergeAction | null = direction === 'left' ? leftActions : rightActions;\n  if (index < 0 || !actions || actions.disable) {\n    return;\n  }\n  const elWidth = this._width;\n  const factor = this._translate / Math.abs(this._translate);\n  const confirm: Confirm = { index, direction };\n  const item = actions.items[index];\n  const overshoot = index === actions.items.length - 1 && actions.overshoot;\n  let eventType: IType = 'buttonPress';\n  if (\n    this._confirming &&\n    this._confirming.index === index &&\n    this._confirming.direction === direction\n  ) {\n    if (overshoot) {\n      confirmStyle(item);\n      this._confirming = null;\n    } else {\n      // 点击按钮后隐藏按钮（隐藏按钮里已处理取消确认情况）\n      if (item.collapse) {\n        this.hide();\n      } else {\n        // 取消确认\n        setStyle(item.element, {\n          width: '',\n        });\n        cTransform.apply(this, [confirm]);\n        confirmStyle(item);\n        this._confirming = null;\n      }\n    }\n  } else {\n    if (overshoot) {\n      if (!this._overshooting) {\n        this._overshooting = true;\n        const translate = factor * elWidth;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        overshootChange.apply(this, [actions]);\n      }\n      if (item.confirm) {\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      }\n    } else {\n      if (item.confirm) {\n        // 如果是仅有一个按钮，确认的时候宽度设置2倍变化，但是不能超过最大宽度\n        let translate = this._translate;\n        if (actions.items.length === 1) {\n          translate = Math.min(Math.abs(2 * translate), elWidth) * factor;\n        }\n        // 设置回弹效果，第一个按钮没有\n        if (\n          rebounce > 0 &&\n          index !== 0 /*  &&\n          parseFloat(window.getComputedStyle(item.wrapper, null).width) ===\n            elWidth */\n        ) {\n          onOnceTransitionEnd(item.wrapper, () => {\n            // 该事件执行时确保当前还处于确认状态，否则不能再执行\n            if (\n              this._confirming &&\n              this._confirming.index === confirm.index &&\n              this._confirming.direction === confirm.direction\n            ) {\n              cTransform.apply(this, [confirm, translate]);\n            }\n          });\n          cTransform.apply(this, [\n            confirm,\n            translate + (rebounce * translate) / Math.abs(translate),\n          ]);\n        } else {\n          cTransform.apply(this, [confirm, translate]);\n        }\n        setStyle(item.wrapper, {\n          width: '',\n        });\n        setStyle(item.element, {\n          width: Math.abs(translate),\n        });\n        this._confirming = confirm;\n        confirmStyle(item, true);\n        eventType = 'buttonConfirm';\n      } else {\n        // 无需确认的点击（如果collapse，就点击后隐藏按钮，否则不做任何处理）\n        if (item.collapse) {\n          this.hide();\n        }\n      }\n    }\n  }\n  this.emit(eventType, {\n    index,\n    data: item.data,\n    currentTarget: target,\n    timestamp: Date.now(),\n    sourceEvent: event,\n  });\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:13:31\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport buttonPress from './buttonPress';\nimport type SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function tap(this: SlideView, e: GEvent) {\n  const { contentEl, leftEl, rightEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(\n    sourceEvent,\n    (t) => t !== currentTarget && t !== contentEl && t !== leftEl && t !== rightEl,\n  );\n  // 触发内容元素按压事件\n  if (contentEl && target === contentEl) {\n    // 没有使用this._direction判断，是因为该值变化是要动画结束后变化，this._translate变化是动画执行前\n    // 使用this._translate判断可以保证，收起动画时点击可执行，展开动画执行时点击不可执行，this._direction正好相反\n    // 收起时候则触发按压事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('press', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n  // 触发左边按钮按压事件\n  else if (target === leftEl) {\n    buttonPress.apply(this, [e, 'left']);\n  }\n  // 触发右边按钮按压事件\n  else if (target === rightEl) {\n    buttonPress.apply(this, [e, 'right']);\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:50:29\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport type SlideView from '../index';\nimport { findTarget } from '../util';\n\nexport default function doubleTap(this: SlideView, e: GEvent) {\n  const { contentEl, _translate } = this;\n  const { sourceEvent, currentTarget } = e;\n  const target = findTarget(sourceEvent, (t) => t !== currentTarget && t !== contentEl);\n  // 触发内容双按压事件\n  if (contentEl && target === contentEl) {\n    // 收起时候则触发双按事件，未收起则收起\n    if (_translate === 0) {\n      this.emit('doublePress', {\n        currentTarget: contentEl,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n    } else {\n      this.hide();\n    }\n  }\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:16:50\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { revokeDamping } from '@huangjs888/damping';\nimport type SlideView from '../index';\n\nexport default function pointerStart(this: SlideView, e: GEvent) {\n  const { pointers, currentTarget } = e;\n  // data-identifier存在，表示是已经有指点放上去了\n  if (currentTarget.getAttribute('data-identifier')) {\n    return;\n  }\n  // 设置第一个为主手指\n  const pointer = pointers[0];\n  currentTarget.setAttribute('data-identifier', `${pointer.identifier}`);\n  const point = pointer.current;\n  const { leftActions, rightActions, friction } = this;\n  if ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable)) {\n    return;\n  }\n  this._isMoving = true;\n  this._timestamp = 0;\n  this._startAngle = 0;\n  // 初始偏移量\n  this._startOffset = this._translate;\n  // 初始点\n  this._startPoint = point;\n  // 计算初始taranslate\n  const actions = this._translate > 0 ? leftActions : this._translate < 0 ? rightActions : null;\n  let startTranslate = 0;\n  if (actions && !actions.disable) {\n    const { overshoot, overshootFreeSize, width: tWidth } = actions;\n    // 弹性尺寸临界点\n    const criticalTranslate =\n      ((overshoot\n        ? Math.min(this._width, Math.max(this._width - overshootFreeSize, tWidth))\n        : tWidth) *\n        this._translate) /\n      Math.abs(this._translate);\n    if (Math.abs(this._translate) <= Math.abs(criticalTranslate)) {\n      startTranslate = this._translate;\n    } else {\n      // 恢复_translate的弹性尺寸部分\n      startTranslate =\n        revokeDamping(this._translate - criticalTranslate, {\n          expo: friction,\n        }) + criticalTranslate;\n    }\n  }\n  this._startTranslate = startTranslate;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:37:44\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport { performDamping } from '@huangjs888/damping';\nimport type SlideView from '../index';\nimport { transform } from '../transform';\nimport { overshootChange } from '../overshoot';\nimport { confirmStyle, confirmCancel } from '../confirm';\n\nexport default function pointerMove(this: SlideView, e: GEvent) {\n  const { pointers, currentTarget } = e;\n  // 找出变化（移动）的手指\n  let pointer = null;\n  for (let i = 0; i < pointers.length; i++) {\n    const p = pointers[i];\n    // 当前这个是主手指，并且这个手指在变化（移动）\n    if (p.changed && `${p.identifier}` === currentTarget.getAttribute('data-identifier')) {\n      pointer = p;\n      break;\n    }\n  }\n  // 没找到主手指\n  if (!pointer) {\n    return;\n  }\n  const currentPoint = pointer.current;\n  const { leftActions, rightActions, friction } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  const currentX = currentPoint[0] - this._startPoint[0];\n  const currentY = currentPoint[1] - this._startPoint[1];\n  if (this._startAngle === 0) {\n    // 只在第一次移动事件的时候进行计算\n    // 根据xy的长短来判断移动角度与45度的关系\n    this._startAngle = Math.abs(currentX) - Math.abs(currentY) <= 0 ? -1 : 1;\n  }\n  // 只有角度小于45度(_startAngle为1)，才会开始移动\n  // 只会在第一次触发的时候判断，后续如果移动过程中角度变化，则不会判断，会继续往下走\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._startAngle !== 1 || Math.abs(currentX) <= 3) {\n    return;\n  }\n  // 滑动距离\n  let translate = 0;\n  let duration = 0;\n  let currentTranslate = this._startTranslate + currentX;\n  const actions = currentTranslate > 0 ? leftActions : currentTranslate < 0 ? rightActions : null;\n  if (actions && !actions.disable) {\n    const { overshoot, overshootEdgeSize, overshootFreeSize, width: tWidth } = actions;\n    const factor = currentTranslate / Math.abs(currentTranslate);\n    const oaSize = factor * tWidth;\n    const otSize =\n      factor * Math.min(this._width, Math.max(this._width - overshootFreeSize, tWidth));\n    const oeSize = factor * Math.min(this._width * 0.5, Math.max(0, overshootEdgeSize));\n    // 可以overshoot的情况处理\n    if (overshoot) {\n      if (Math.abs(currentTranslate) < Math.abs(otSize)) {\n        // 如果手指从容器一半之外开始移动，只要手指移动到接近边缘，就可以overshoot\n        let deltaSize = 0;\n        let moveEdge = false;\n        const currentOffset = currentPoint[0] - this._offset;\n        const startOffset = this._startPoint[0] - this._offset - this._startOffset;\n        const maxOffset = this._width * 0.5;\n        if (currentTranslate < 0) {\n          deltaSize = currentOffset - Math.abs(oeSize);\n          moveEdge = startOffset > maxOffset && deltaSize < 0;\n        } else {\n          deltaSize = currentOffset - (this._width - Math.abs(oeSize));\n          moveEdge = startOffset < maxOffset && deltaSize > 0;\n        }\n        if (moveEdge) {\n          currentTranslate = otSize + deltaSize;\n          // 此时要重置初始点和初始translate\n          this._startPoint = currentPoint;\n          this._startTranslate = currentTranslate;\n        }\n      }\n      const timestamp = Date.now();\n      // currentTranslate和otSize一定是同正或同负，直接比较数值大小，即currentTranslate超出otSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(otSize)) {\n        if (!this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = true;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item, true);\n            this._confirming = {\n              index,\n              direction: factor > 0 ? 'left' : 'right',\n            };\n          }\n        }\n        translate =\n          performDamping(currentTranslate - otSize, {\n            expo: friction,\n          }) + otSize;\n        duration = Math.max(0, this.duration - (timestamp - this._timestamp) / 1000);\n      } else {\n        if (this._overshooting) {\n          this._timestamp = timestamp;\n          this._overshooting = false;\n          overshootChange.apply(this, [actions]);\n          const index = actions.items.length - 1;\n          const item = actions.items[index];\n          if (item.confirm) {\n            confirmStyle(item);\n            this._confirming = null;\n          }\n        }\n        translate = currentTranslate;\n        duration = Math.max(0, this.duration / 2 - (timestamp - this._timestamp) / 1000);\n      }\n    } else {\n      // 不能overshoot的情况，按钮显示超出总宽度，则进行弹性尺寸\n      // currentTranslate和oaSize一定是同正或同负，直接比较数值大小，即currentTranslate超出oaSize范围\n      if (Math.abs(currentTranslate) >= Math.abs(oaSize)) {\n        translate =\n          performDamping(currentTranslate - oaSize, {\n            expo: friction,\n          }) + oaSize;\n      } else {\n        translate = currentTranslate;\n      }\n    }\n    translate = Math.min(this._width, Math.max(-this._width, translate));\n  } else {\n    // 如果不存在或按钮被禁用，则不断更新初始点和初始translate\n    this._startPoint = currentPoint;\n    this._startTranslate = 0;\n    translate = 0;\n  }\n  this._translate = translate;\n  transform.apply(this, [translate, duration]);\n  if (!this._overshooting) {\n    confirmCancel.apply(this, []);\n  }\n  return;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 15:17:58\n * @Description: ******\n */\n\nimport { type GEvent } from '@huangjs888/gesture';\nimport type SlideView from '../index';\nimport { transform } from '../transform';\n\nexport default function pointerEnd(this: SlideView, e: GEvent) {\n  const { leavePointers, currentTarget } = e;\n  // 从抬起的手指中查找\n  let pointer = null;\n  for (let i = 0; i < leavePointers.length; i++) {\n    const p = leavePointers[i];\n    if (`${p.identifier}` === currentTarget.getAttribute('data-identifier')) {\n      pointer = p;\n      break;\n    }\n  }\n  // 表示抬起的手指不是主手指\n  if (!pointer) {\n    return;\n  }\n  currentTarget.setAttribute('data-identifier', '');\n  const currentPoint = pointer.current;\n  const { leftActions, rightActions } = this;\n  if (\n    !this._isMoving ||\n    !this._startPoint ||\n    this._startAngle !== 1 ||\n    ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n  ) {\n    return;\n  }\n  this._isMoving = false;\n  const startPoint = this._startPoint;\n  const delta = currentPoint[0] - startPoint[0];\n  // 滑动距离为0（表示本身就是隐藏状态）或没有任何滑动（只是点了一下）不做任何操作\n  // 这个判断是因为手势里默认移动距离在3px以内不算移动（手势里是移动距离，这里扩大到x方向距离）\n  if (this._translate === 0 || Math.abs(delta) <= 3) {\n    return;\n  }\n  const actions = this._translate > 0 ? leftActions : this._translate < 0 ? rightActions : null;\n  if (actions && !actions.disable) {\n    // 进行完全覆盖滑出事件\n    if (this._overshooting) {\n      const index = actions.items.length - 1;\n      const item = actions.items[index];\n      const translate = (this._translate * this._width) / Math.abs(this._translate);\n      this._translate = translate;\n      transform.apply(this, [translate]);\n      this.emit(item.confirm ? 'buttonConfirm' : 'buttonPress', {\n        index,\n        data: item.data,\n        currentTarget: item.wrapper,\n        timestamp: Date.now(),\n        sourceEvent: e,\n      });\n      return;\n    }\n    // 展开时，滑出的距离不足滑出阈值则不展开\n    // 微信是只要往反方向滑就关闭，并且滑出之后，如果继续有弹性滑出，弹性滑出不足阈值也会关闭\n    /* if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(delta) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    } */\n    // 苹果是只有反方向滑到阈值之内才会关闭，其他不关闭\n    /* if (Math.abs(this._translate) < actions.threshold) {\n      this.hide();\n      return;\n    } */\n    // 只要往反方向滑就关闭，其他不关闭\n    if (\n      (this._translate > 0 && delta < 0) ||\n      (this._translate < 0 && delta > 0) ||\n      Math.abs(this._translate) < actions.threshold\n    ) {\n      this.hide();\n      return;\n    }\n  }\n  // 其它情况均为展示按钮\n  this.show(this._translate > 0 ? 'left' : 'right');\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-03 14:42:44\n * @Description: ******\n */\n\nimport Gesture from '@huangjs888/gesture';\nimport longTap from './longTap';\nimport tap from './tap';\nimport doubleTap from './doubleTap';\nimport pointerStart from './pointerStart';\nimport pointerMove from './pointerMove';\nimport pointerEnd from './pointerEnd';\nimport type SlideView from '../index';\n\nexport default function bindGesture(this: SlideView, element: HTMLElement) {\n  // 绑定手势\n  const gesture = new Gesture(element);\n  gesture.on('pointerStart', pointerStart.bind(this));\n  gesture.on('pointerMove', pointerMove.bind(this));\n  gesture.on('pointerEnd', pointerEnd.bind(this));\n  gesture.on('tap', tap.bind(this));\n  gesture.on('longTap', longTap.bind(this));\n  gesture.on('doubleTap', doubleTap.bind(this));\n  return gesture;\n}\n\n/*\n  1、如果在一个事件循环内多次设置transition，只会执行性最后一次，前面的会忽略。如果在多次串联（不同的事件循环内）设置transition时，如果属性和值都无任何变化，则后续的设置会忽略，如果不一样，除了第一次，后续的transition会保留上次动画最后一帧（下次动画也从该帧开始）的结果与新设置的动画值比较，相同则不执行动画，不同则执行动画（且从），而不是每次动画都与初始节点比较，初始节点执行。\n\n  2、delay这个参数注意：正值，等待delay秒之后，从初始开始执行动画，到结束，花费duration时间。负值，无等待立马执行，从中间某节点开始执行动画，到结束位置，花费duration去掉delay负数的时间。其中中间某节点就是如果按照正常执行时用掉delay时间所应该到达的节点处。\n\n  3、如果在一个固定时间内需要不停的改变transition属性值，直到时间用完变成无transition，此时可以在每次动画时算出与第一次动画开始时的时间差，然后用这个固定时间减去时间差，设置在当前动画的duration上，直到为0时去掉transition即可（这样做动画会连贯丝滑）。\n\n  4、一些属性可以设置百分比或者不设置值（'','none','auto'）等，而不是具体的数值的时候，此时设置transition，并不会发生动画（比如宽度从auto到100px是瞬间到达），可以在设置transition之前先设一个具体值，比如0或1，但是，这里注意，需要把设置transition的语句放在下一个事件循环（比如setTimeout）内，但最好的是放在requestAnimationFrame，或者在语句之前调用一次布局信息（比如获取宽度值），其实就是强迫浏览器重绘：浏览器通常还会在两种情况下会产生样式变更事件，一是满足屏幕刷新频率（requestAnimationFrame），二是当 JS 脚本需要获取最新的样式布局信息时。这种情况也适用于对隐藏的元素进行动画，动画后再隐藏，可以监听transitionend，在事件内隐藏。\n  https://blog.csdn.net/weixin_45189747/article/details/97790805\n  http://aihongxin.com/6652.html\n\n  5、 实现串联动画：使用animation，定义好需要的动画，想怎么玩怎么玩，缺点是无法动态设置值，如果需要动态设置值，只能用js动态添加、修改css3的@keyframes。使用transition，监听transitionend，在事件内再执行新动画，缺点是动画复杂，事件串联复杂，并且要做好判断，绑定、解绑，防止事件重复执行，或者无法串联执行，另外cancel后不会再执行。使用transitionend注意以下几点：\n  https://zhuanlan.zhihu.com/p/481680437\n\n  1、如果监听元素有多个属性都有transition，transitionend会在多个属性完成后多次触发。\n  解决方法：通过注册时提供实际监控的属性值与事件触发时e.propertyName比较来控制执行哪个。\n\n  2、如果监听元素的children也有transition，transitionend也会在children的transition完成后处触发。\n  解决方法：可以通过判断e.target === element或e.currentTarget来判断是不是当前监听元素。\n\n  3、快速连续触发设置transition事件，可以在动画未执行完触发的transitioncancel事件内解绑上一次的transitionend，保证只有当前这次的transitionend可运行，同时当前transitionend执行后也解绑当前的保证只会执行一次。\n  但是存在一种概率较低的情况：过渡动画刚执行完毕（即不会触发transitioncancel），本次transitionend还没来得及触发执行（因为transitionend触发和最后一帧动画结束并不是同一事件循环），此时设置transition的方法抢先执行进来设置过渡动画，这个时候上一次的transitionend事件是无法被清掉的。\n  解决方法：在每次注册transitionend时把之前已绑定transitionend事件全部清掉，同时当前transitionend执行后解绑。可以通过元素属性事件注册，而不使用addEventListener，即element.ontransitionend = ()=>{}，因为这种注册方式，永远都是替换掉上一次的事件，只有当前这一个。\n*/\nexport function onOnceTransitionEnd(\n  ele: HTMLElement,\n  transitionEnd: (e: TransitionEvent) => void,\n  propertyName: string = 'transform',\n) {\n  if (ele) {\n    ele.ontransitionend = (e: TransitionEvent) => {\n      // 阻止冒泡及后续事件触发\n      e.stopImmediatePropagation();\n      // 只有触发事件的目标元素与绑定的目标元素一致，同时触发事件的属性与需要的属性相同，才会执行事件并解绑\n      if (e.target === ele && e.propertyName === propertyName) {\n        ele.ontransitionend = null;\n        transitionEnd(e);\n      }\n    };\n  }\n  return ele;\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-13 15:22:58\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-18 16:00:29\n * @Description: ******\n */\nimport { EventTarget, type GEvent } from '@huangjs888/gesture';\nimport type Gesture from '@huangjs888/gesture';\nimport bindGesture, { onOnceTransitionEnd } from './events';\nimport generateEl from './dom';\nimport { transform } from './transform';\nimport { overshootChange } from './overshoot';\nimport { confirmStyle, confirmCancel } from './confirm';\nimport { getIconType, addClass } from './util';\n\nclass SlideView extends EventTarget<IType, IEvent> {\n  element: HTMLElement | null = null; // 滑动视图元素\n  contentEl: HTMLElement | null = null; // 内容元素\n  leftEl: HTMLElement | null = null; // 左按钮元素\n  rightEl: HTMLElement | null = null; // 右按钮元素\n  leftActions: MergeAction | null = null; // 按钮集合\n  rightActions: MergeAction | null = null; // 按钮集合\n  friction: number = 0.5; // 摩擦因子(0-1的值)\n  rebounce: number = 12; // 弹性尺寸\n  duration: number = 0.4; // 按钮滑出动画时间（秒级）\n  timing: Timing = 'ease'; // 滑动时动画的函数\n  _destory: boolean = false; // 是否销毁\n  _direction: Direction = 'none'; // 当前展示的是哪个方向按钮\n  _confirming: Confirm | null = null; // 当前正在确认的按钮\n  _overshooting: boolean = false; // 当前是否处于overshoot状态\n  _translate: number = 0; // 元素当前位移值\n  _width: number = 0; // 视图宽度\n  _offset: number = 0; // 手指放上后滑动视图元素距离屏幕左边距离即offsetLeft\n  _startOffset: number = 0; // 手指放上那一刻，translate值\n  _startTranslate: number = 0; // 手指放上那一刻，translate未经rebounceSize的值\n  _startPoint: number[] | null = null; // 手指放上后初始点\n  _startAngle: number = 0; // 移动时的角度与45度的关系\n  _timestamp: number = 0; // 移动时的时间戳\n  _isMoving: boolean = false; // 是否正在滑动\n  _gesture: Gesture | null = null;\n  _removeResize: (() => void) | null = null;\n  constructor(options: IOption) {\n    super();\n    const {\n      className,\n      container,\n      content,\n      friction,\n      rebounce,\n      duration,\n      timing,\n      leftActions,\n      rightActions,\n    } = options;\n    const [element, contentEl, leftEl, rightEl] = generateEl(container, className);\n    this._gesture = bindGesture.apply(this, [element]);\n    this.element = element;\n    this.contentEl = contentEl;\n    this.leftEl = leftEl;\n    this.rightEl = rightEl;\n    this.setContent(content);\n    this.setFriction(friction);\n    this.setRebounce(rebounce);\n    this.setDuration(duration);\n    this.setTiming(timing);\n    this.setActions(leftActions, 'left');\n    this.setActions(rightActions, 'right');\n    // 浏览器窗口变化重置\n    const resize = () => {\n      const { width, left } = element.getBoundingClientRect();\n      this._width = width;\n      this._offset = left;\n    };\n    window.addEventListener('resize', resize);\n    this._removeResize = () => {\n      window.removeEventListener('resize', resize);\n    };\n    resize();\n  }\n  setContent(content: HTMLElement | string = '', dangerous?: boolean) {\n    if (this._destory || !this.contentEl) {\n      return;\n    }\n    // 注意XSS注入\n    if (dangerous && typeof content === 'string') {\n      this.contentEl.innerHTML = content;\n      return;\n    }\n    let tempChild;\n    if (typeof content === 'string') {\n      tempChild = document.querySelector(content);\n    } else {\n      tempChild = content;\n    }\n    if (tempChild) {\n      this.contentEl.innerHTML = '';\n      this.contentEl.appendChild(tempChild);\n    }\n  }\n  setFriction(friction: number = 0.5) {\n    if (this._destory) {\n      return;\n    }\n    // friction: 不传为默认值0.5，传小于0的都为0，大于1的都为1，传非数字，则属于无效设置\n    if (typeof friction === 'number') {\n      this.friction = Math.min(1, Math.max(0, friction));\n    }\n  }\n  setRebounce(rebounce: number = 12) {\n    if (this._destory) {\n      return;\n    }\n    // rebounce: 不传为默认值12，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof rebounce === 'number') {\n      this.rebounce = Math.max(0, rebounce);\n    }\n  }\n  setDuration(duration: number = 0.4) {\n    if (this._destory) {\n      return;\n    }\n    // duration: 不传为默认值0.4，传小于0的都为0，传非数字，则属于无效设置\n    if (typeof duration === 'number') {\n      this.duration = Math.max(0, duration);\n    }\n  }\n  setTiming(timing: Timing = 'ease') {\n    if (this._destory) {\n      return;\n    }\n    // timing: 不传为默认值ease\n    this.timing = timing;\n  }\n  setDisable(disable: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // disable: 不传为默认值true，传非布尔，则无效设置\n    if (typeof disable === 'boolean') {\n      this.hide().then(() => {\n        // direction传其它，则属于无效设置\n        if (this.leftActions && (direction === 'both' || direction === 'left')) {\n          this.leftActions.disable = disable;\n        }\n        if (this.rightActions && (direction === 'both' || direction === 'right')) {\n          this.rightActions.disable = disable;\n        }\n      });\n    }\n  }\n  setOvershoot(overshoot: boolean = true, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值true，传非布尔，则无效设置\n    if (typeof overshoot === 'boolean') {\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.overshoot = overshoot;\n      }\n      if (this.rightActions && (direction === 'both' || direction === 'right')) {\n        this.rightActions.overshoot = overshoot;\n      }\n    }\n  }\n  setThreshold(threshold: number = 40, direction: Direction = 'both') {\n    if (this._destory) {\n      return;\n    }\n    // overshoot: 不传为默认值40，传小于0的都为0，传非数字，则无效设置\n    if (typeof threshold === 'number') {\n      const _threshold = Math.max(0, threshold);\n      // direction传其它，则属于无效设置\n      if (this.leftActions && (direction === 'both' || direction === 'left')) {\n        this.leftActions.threshold = Math.min(_threshold, this.leftActions.width);\n      }\n      if (this.rightActions && (direction === 'both' || direction === 'right')) {\n        this.rightActions.threshold = Math.min(_threshold, this.rightActions.width);\n      }\n    }\n  }\n  setActions(actions: IActionOption = {}, direction: Direction = 'both') {\n    if (this._destory || direction === 'none') {\n      return;\n    }\n    // actions: 不传为默认值{}，不传，传其它，只要没有items的，都认为是删除按钮\n    const _setActions = (_direction: 'left' | 'right') => {\n      const parentEl = this[`${_direction}El`];\n      if (!parentEl) {\n        return;\n      }\n      parentEl.innerHTML = '';\n      this[`${_direction}Actions`] = null;\n      if (actions.items && actions.items.length > 0) {\n        const {\n          className,\n          style = 'accordion',\n          disable = false,\n          overshoot = false,\n          overshootEdgeSize = 80,\n          overshootFreeSize = 30,\n          threshold = 40,\n          items,\n        } = actions;\n        const tElement = addClass(\n          document.createElement('div'),\n          `hjs-slideview__actions ${className || ''}`,\n        );\n        parentEl.appendChild(tElement);\n        let tWidth = 0;\n        let tGap = 0;\n        let newItems = items.map((item, index) => {\n          const { gap = 0, fixedGap = false, text, icon } = item;\n          const element = addClass(document.createElement('div'), 'hjs-slideview__action');\n          element.setAttribute('data-index', String(index));\n          if (icon) {\n            element.appendChild(\n              addClass(document.createElement(getIconType(icon)), 'hjs-slideview__action__icon'),\n            );\n          }\n          if (text) {\n            element.appendChild(\n              addClass(document.createElement('span'), 'hjs-slideview__action__text'),\n            );\n          }\n          const wrapper = addClass(document.createElement('div'), 'hjs-slideview__action__wrapper');\n          wrapper.appendChild(element);\n          tElement.appendChild(wrapper);\n          const tItem: MergeActionItem = {\n            ...item,\n            wrapper,\n            element,\n            width: 0,\n            gap: [0, 0],\n            fixedGap,\n          };\n          // 设置非确认时的样式和内容\n          confirmStyle(tItem);\n          const { width } = element.getBoundingClientRect();\n          let leftGap = 0;\n          let rightGap = 0;\n          if (typeof gap === 'number') {\n            leftGap = gap;\n            rightGap = gap;\n          } else {\n            [leftGap, rightGap] = gap;\n          }\n          leftGap = Math.min(width, Math.max(leftGap, 0));\n          rightGap = Math.min(width, Math.max(rightGap, 0));\n          tWidth += width + leftGap + rightGap;\n          tGap += leftGap + rightGap;\n          return {\n            ...tItem,\n            gap: [leftGap, rightGap],\n            fixedGap: leftGap === 0 && rightGap === 0 ? false : fixedGap, // 左右gap都为0的情况，gudinggap无意义\n            width,\n          };\n        });\n        this[`${_direction}Actions`] = {\n          style,\n          disable,\n          overshoot,\n          overshootFreeSize,\n          overshootEdgeSize,\n          threshold: Math.min(tWidth, Math.max(threshold, 0)),\n          element: tElement,\n          width: tWidth,\n          gap: tGap,\n          items: newItems,\n        };\n      }\n    };\n    const _setActionsAfterCollapse = (_direction: 'left' | 'right') => {\n      // 重新设置按钮时应该先收起\n      this.hide().then(() => {\n        _setActions(_direction);\n        this.show(_direction);\n      });\n    };\n    const shown = this._translate > 0 ? 'left' : this._translate < 0 ? 'right' : 'none';\n    if (direction === 'both') {\n      if (shown !== 'none') {\n        _setActionsAfterCollapse(shown);\n      }\n      if (shown !== 'left') {\n        _setActions('left');\n      }\n      if (shown !== 'right') {\n        _setActions('right');\n      }\n    } else {\n      if (shown === direction) {\n        _setActionsAfterCollapse(direction);\n      } else {\n        _setActions(direction);\n      }\n    }\n  }\n  toggle(direction: Direction = 'right') {\n    return this._translate === 0 ? this.show(direction) : this.hide();\n  }\n  show(direction: Direction = 'right') {\n    const { contentEl, rebounce, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      let __direction = direction;\n      if (!leftActions || leftActions.disable) {\n        __direction = 'right';\n      }\n      if (!rightActions || rightActions.disable) {\n        __direction = 'left';\n      }\n      const actions = __direction === 'left' ? leftActions : rightActions;\n      const factor = __direction === 'left' ? 1 : -1;\n      const maxTranslate = !actions ? 0 : actions.width * factor;\n      if (this._translate === maxTranslate) {\n        resolve();\n        return;\n      }\n      const show = (rebSize: number = 0) => {\n        const translate = maxTranslate + rebSize;\n        this._translate = translate;\n        transform.apply(this, [translate]);\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [this._translate > 0 ? leftActions : rightActions]);\n        }\n        confirmCancel.apply(this, []);\n        if (!rebSize) {\n          onOnceTransitionEnd(contentEl, () => {\n            resolve();\n            if (this._direction !== __direction) {\n              this.emit('show', {\n                direction: __direction,\n                currentTarget: contentEl,\n                timestamp: Date.now(),\n                sourceEvent: null,\n              });\n              this._direction = __direction;\n            }\n          });\n        }\n      };\n      // 设置回弹效果并且已滑动宽度小于最大宽度时才有弹性效果\n      if (\n        rebounce > 0 &&\n        ((maxTranslate > 0 && this._translate < maxTranslate) ||\n          (maxTranslate < 0 && this._translate > maxTranslate))\n      ) {\n        onOnceTransitionEnd(contentEl, () => show());\n        show(rebounce * factor);\n      } else {\n        show();\n      }\n    });\n  }\n  hide() {\n    const { contentEl, leftActions, rightActions } = this;\n    if (\n      this._destory ||\n      this._translate === 0 ||\n      !contentEl ||\n      ((!leftActions || leftActions.disable) && (!rightActions || rightActions.disable))\n    ) {\n      return Promise.resolve();\n    }\n    return new Promise<void>((resolve) => {\n      this._translate = 0;\n      transform.apply(this, [0]);\n      // 在收起动画期间，连续执行隐藏方法，会主动cancel上一次transition，保证只执行最后一次\n      onOnceTransitionEnd(contentEl, () => {\n        resolve();\n        if (this._overshooting) {\n          this._overshooting = false;\n          overshootChange.apply(this, [this._translate > 0 ? leftActions : rightActions]);\n        }\n        confirmCancel.apply(this, []);\n        if (this._direction !== 'none') {\n          this.emit('hide', {\n            direction: 'none',\n            currentTarget: contentEl,\n            timestamp: Date.now(),\n            sourceEvent: null,\n          });\n          this._direction = 'none';\n        }\n      });\n    });\n  }\n  destory() {\n    // 解除所有事件\n    super.off();\n    // 销毁底层事件\n    if (this._gesture) {\n      this._gesture.destory();\n      this._gesture = null;\n    }\n    this._destory = true;\n    this.leftActions = null;\n    this.rightActions = null;\n    this._confirming = null;\n    this._startPoint = null;\n    this.contentEl = null;\n    this.leftEl = null;\n    this.rightEl = null;\n    if (this.element) {\n      // 删除元素，用户可以在调用该方法之前加一个删除动画\n      if (this.element.parentNode) {\n        this.element.parentNode.removeChild(this.element);\n      }\n      this.element = null;\n    }\n  }\n}\n\nexport type Direction = 'left' | 'right' | 'both' | 'none';\n\nexport type Timing =\n  | 'linear'\n  | 'ease'\n  | 'ease-in'\n  | 'ease-out'\n  | 'ease-in-out'\n  | `cubic-bezier(${number},${number},${number},${number})`;\n\nexport type ActionStyle = 'drawer' | 'accordion';\n\nexport type Confirm = {\n  direction: Direction;\n  index: number;\n};\n\nexport type MergeActionItem = {\n  wrapper: HTMLElement; // 当前按钮包裹元素\n  element: HTMLElement; // 当前按钮元素\n  width: number; // 当前按钮的宽度\n  gap: number[]; // 元素之间的间距\n  fixedGap: boolean; //拉伸按钮时，是否固定间距\n} & IActionItem;\n\nexport type MergeAction = {\n  style: ActionStyle; // 按钮展示的风格\n  disable: boolean; // 禁用按钮\n  threshold: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootFreeSize: number; // overshoot后，总宽度剩余部分\n  overshootEdgeSize: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  element: HTMLElement; // 所有按钮父元素\n  width: number; // 按钮父元素宽度，即所有按钮宽度加间距宽度\n  gap: number; // 元素之间的间距之和\n  items: MergeActionItem[]; // 按钮配置\n};\n\nexport type IActionItem = {\n  className?: string; // 按钮自定义样式\n  text?: string; // 按钮文字\n  icon?: string; // 按钮图标（会根据传入的字符串形式判断是img还是svg元素或是字体icon）\n  color?: string; // 按钮文字图标颜色（img图标除外）\n  background?: string; //按钮背景颜色\n  confirm?: {\n    // 按钮在确认的时候替代的内容样式，不传则没有确认环节，只传{}则有确认环节，但内容样式不改变\n    className?: string; // 按钮自定义样式\n    text?: string; // 按钮文字\n    icon?: string; // 按钮图标\n    color?: string; // 按钮文字图标颜色\n    background?: string; //按钮背景颜色\n  }; // 按钮确认时的信息\n  collapse?: boolean; // 按钮点击后是否收起\n  gap?: number | number[]; // 元素左右间距\n  fixedGap?: boolean; //拉伸按钮时，是否固定间距\n  data?: any; //按钮携带数据\n};\n\nexport type IActionOption = {\n  className?: string; // 按钮自定义样式\n  style?: ActionStyle; // 按钮展示的风格\n  disable?: boolean; // 禁用按钮\n  threshold?: number; // 阈值（超过这个阈值时抬起后所有按钮自动滑出，否则收起）\n  overshoot?: boolean; // 滑动超出(仅限最后一个按钮)\n  overshootEdgeSize?: number; // 手指滑动到接近屏幕边缘尺寸（小于这个尺寸就overshoot）\n  overshootFreeSize?: number; // 滑动出来的尺寸占据组件容器尺寸之后的剩余尺寸（小于这个尺寸就overshoot）\n  items?: IActionItem[]; // 按钮配置\n};\n\nexport type IOption = {\n  className?: string; // 滑动组件类名控制样式\n  container: HTMLElement | string; // 装载滑动组件的DOM容器\n  content?: HTMLElement | string; // 滑动组件的子节点\n  friction?: number; // 摩擦因子(0-1的值)\n  rebounce?: number; // 弹性尺寸\n  duration?: number; // 滑动时动画的时间（秒级）\n  timing?: Timing; // 滑动时动画的函数\n  leftActions?: IActionOption;\n  rightActions?: IActionOption;\n};\n\nexport type IType =\n  | 'show'\n  | 'hide'\n  | 'press'\n  | 'longPress'\n  | 'doublePress'\n  | 'buttonPress'\n  | 'buttonConfirm';\n\nexport type IEvent = {\n  currentTarget: HTMLElement;\n  timestamp: number;\n  sourceEvent: GEvent | null;\n  direction?: Direction; // 滑出的是哪边的按钮\n  index?: number; // 点击按钮在按钮集合里的索引\n  data?: any; // 按钮携带的数据\n};\n\nexport default SlideView;\n","/*\n * @Author: Huangjs\n * @Date: 2023-07-28 09:57:17\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-08-04 10:16:12\n * @Description: ******\n */\n\nimport { addClass, cssInject } from './util';\nimport css from './css';\n\nexport default function generateEl(container: HTMLElement | string, className?: string) {\n  let tempContainer: HTMLElement | null;\n  try {\n    if (typeof container === 'string') {\n      tempContainer = document.querySelector(container);\n    } else {\n      tempContainer = container;\n    }\n  } catch (e) {\n    tempContainer = null;\n  }\n  if (!tempContainer || !(tempContainer instanceof HTMLElement)) {\n    throw new Error('Please pass in a valid container element...');\n  }\n  cssInject(css);\n  const viewElement = addClass(document.createElement('div'), `hjs-slideview ${className || ''}`);\n  const leftElement = addClass(document.createElement('div'), 'hjs-slideview__left');\n  viewElement.appendChild(leftElement);\n  const rightElement = addClass(document.createElement('div'), 'hjs-slideview__right');\n  viewElement.appendChild(rightElement);\n  const contentElement = addClass(document.createElement('div'), 'hjs-slideview__content');\n  viewElement.appendChild(contentElement);\n  tempContainer.innerHTML = '';\n  tempContainer.appendChild(viewElement);\n  return [viewElement, contentElement, leftElement, rightElement];\n}\n","/*\n * @Author: Huangjs\n * @Date: 2023-02-14 16:23:54\n * @LastEditors: Huangjs\n * @LastEditTime: 2023-04-11 10:32:41\n * @Description: ******\n */\nexport default `\n.hjs-slideview {\n  position: relative;\n  overflow: hidden;\n}\n.hjs-slideview__content {\n  position: relative;\n  z-index: 10;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left,\n.hjs-slideview__right,\n.hjs-slideview__actions,\n.hjs-slideview__action__wrapper {\n  position: absolute;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  width: 100%;\n  height: 100%;\n}\n.hjs-slideview__left {\n  right: 100%;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__left .hjs-slideview__action__wrapper {\n  right: 0;\n  left: auto;\n  justify-content: flex-end;\n}\n.hjs-slideview__right {\n  right: auto;\n  left: 100%;\n  justify-content: flex-start;\n}\n.hjs-slideview__right .hjs-slideview__action__wrapper {\n  right: auto;\n  left: 0;\n  justify-content: flex-start;\n}\n.hjs-slideview__action {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  box-sizing: border-box;\n  max-width: 100%;\n  height: 100%;\n  padding: 0 20px;\n  cursor: pointer;\n}\n.hjs-slideview__action__icon {\n  display: inline-block;\n  width: 24px;\n  height: 24px;\n  text-align: center;\n}\n.hjs-slideview__action__text {\n  width: 100%;\n  overflow: hidden;\n  white-space: nowrap;\n  text-align: center;\n  text-overflow: ellipsis;\n}\n`;\n"],"names":["getIconType","url","match","findTarget","event","condition","target","parentNode","addClass","ele","className","split","forEach","c","classList","add","styleId","autoPxReg","setStyle","css","cssText","_Object$keys","k","key","replace","toLowerCase","_context","_context2","suffix","test","concat","val","_concatInstanceProperty","call","style","setProperty","longTap","e","contentEl","this","_translate","sourceEvent","currentTarget","t","emit","timestamp","Date","now","hide","cTransform","confirm","_this","translate","arguments","length","undefined","leftActions","rightActions","duration","timing","disable","transition","index","direction","factor","Math","abs","aTransform","_ref","items","delta","transformTotal","i","_items$i","wrapper","width","gap","transform","transformx","_context3","_context4","_context5","_this2","leftEl","rightEl","wTransition","_ref2","element","tWidth","tGap","styleObj","xMove","max","len","_items$i2","fixedGap","transformw","transformb","_objectSpread","_overshooting","window","requestAnimationFrame","overshootChange","actions","confirmStyle","item","isConfirm","_item$confirm","rest","_objectWithoutProperties","_excluded","text","icon","color","background","remove","removeClass","iconEl","firstElementChild","type","src","innerHTML","lastElementChild","innerText","confirmCancel","_confirming","_this$_confirming","buttonPress","rebounce","getAttribute","elWidth","_width","overshoot","eventType","collapse","apply","min","onOnceTransitionEnd","data","tap","doubleTap","pointerStart","pointers","pointer","setAttribute","identifier","point","current","friction","_isMoving","_timestamp","_startAngle","_startOffset","_startPoint","startTranslate","overshootFreeSize","criticalTranslate","revokeDamping","expo","_startTranslate","pointerMove","p","changed","currentPoint","currentX","currentY","currentTranslate","overshootEdgeSize","oaSize","otSize","oeSize","deltaSize","moveEdge","currentOffset","_offset","startOffset","maxOffset","performDamping","pointerEnd","leavePointers","startPoint","threshold","show","bindGesture","gesture","Gesture","on","bind","transitionEnd","propertyName","ontransitionend","stopImmediatePropagation","_EventTarget","_inherits","SlideView","_super","options","_classCallCheck","_defineProperty","_assertThisInitialized","container","content","_generateEl","tempContainer","document","querySelector","HTMLElement","Error","createElement","id","appendChild","createTextNode","head","getElementsByTagName","viewElement","leftElement","rightElement","contentElement","generateEl","_generateEl2","_slicedToArray","_gesture","setContent","setFriction","setRebounce","setDuration","setTiming","setActions","resize","_element$getBoundingC","getBoundingClientRect","left","addEventListener","_removeResize","removeEventListener","_createClass","value","tempChild","dangerous","_destory","then","_threshold","_this3","_setActions","_direction","parentEl","_actions$style","_actions$disable","_actions$overshoot","_actions$overshootEdg","_actions$overshootFre","_actions$threshold","tElement","newItems","_mapInstanceProperty","_item$gap","_item$fixedGap","String","tItem","leftGap","rightGap","_gap","_setActionsAfterCollapse","shown","_this4","_Promise","resolve","__direction","maxTranslate","rebSize","_this5","_get","_getPrototypeOf","prototype","destory","removeChild","EventTarget"],"sourceRoot":""}